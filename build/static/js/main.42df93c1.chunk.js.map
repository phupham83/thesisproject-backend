{"version":3,"sources":["components/utils/Button.js","components/NoMatch.js","services/users.js","services/obp.js","services/banks.js","reducers/userReducer.js","components/utils/Loading.js","components/transactions/TransactionList.js","components/transactions/AllAccounts.js","components/transactions/SingleAccount.js","components/transactions/NoAccounts.js","components/Transaction.js","reducers/messageReducer.js","components/Message.js","components/users/Login.js","components/users/Logout.js","reducers/signUpReducer.js","components/users/SignUp.js","components/consents/Consent.js","components/Accounts.js","components/About.js","components/Home.js","components/UnprotectedHome.js","reducers/choiceReducer.js","components/consents/ChooseAccount.js","components/consents/ChooseBank.js","components/consents/Choose.js","components/users/Verified.js","components/users/SignUpSMSstep.js","components/users/SignUpEmailStep.js","components/users/ChangeNumber.js","App.js","store.js","reportWebVitals.js","index.js"],"names":["Button","cb","text","onClick","className","NoMatch","to","baseUrl","login","credentials","a","axios","post","response","data","localLogin","get","logOut","signup","respone","revoke","put","revokeSingle","account","addAccounts","accountIds","changeNumber","number","checkEmailVerified","verifySMS","code","reSendSMS","getAccounts","getTransactions","bankid","id","getSingleAccount","getBalance","getBank","getConsent","window","location","href","grantView","revokeView","createBank","bank","bank_id","user","dispatch","consent","transactionsPromises","map","obpService","singleAccount","transactions","bankService","bankDB","bankOBP","full_name","logo","bankResponse","Promise","all","results","newUser","accounts","type","console","log","userReducer","state","action","Loading","fill","viewBox","xmlns","clipRule","d","fillRule","TransactionList","startingDate","transaction","details","completed","new_balance","amount","value","description","AllAccounts","totalBalance","sort","b","Date","balance","dates","newBalance","Number","date","newDate","getFullYear","getMonth","getDate","toFixed","balanceList","labels","reverse","datasets","label","lineTension","backgroundColor","borderColor","style","height","width","options","scales","yAxes","grid","display","ticks","beginAtZero","xAxes","autoSkip","autoSkipPadding","SingleAccounts","NoAccounts","history","useHistory","event","preventDefault","push","Transaction","useDispatch","useSelector","useEffect","allTransactionsArrays","allBalancesArrays","allTransactions","reduce","initial","nextValue","parseFloat","path","SingleAccount","exact","setMessage","message","setTimeout","messageReducer","Message","Login","inputStyle","onSubmit","email","target","Email","password","Password","messageCb","userService","error","htmlFor","name","placeholder","Logout","logout","signUpReducer","SignUp","Name","Consent","Accounts","handleRevokeAccount","revokeConsentSingle","i","length","src","About","Home","sumReducer","hasBalance","allExpensesArrays","filter","allExpenses","expense","totalExpenses","allIncomesArrays","allIncomes","totalIncomes","dataExpenses","borderWidth","dataIncomes","pluginsExpenses","beforeDraw","chart","ctx","restore","fontSize","font","textBaseline","textX","Math","round","measureText","textY","fillText","save","pluginsIncomes","plugins","legend","UnprotectedHome","choiceReducer","banks","ChooseAccount","filteredAccounts","handleAccountChoice","checked","setAccount","removeAccount","onChange","ChooseBank","handleBankChoice","setBank","removeBank","Choose","e","accountPromises","banksChoice","choice","stateId","currentAccount","idState","viewPromises","Verified","SignUpSMSstep","Code","SMSverified","sent","SignUpEmailStep","signUpEmail","verified","ChangeNumber","numberChanged","App","btnStyle","navStyle","stroke","combinedReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42df93c1.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Button = ({ cb, text }) => {\r\n    return(\r\n        <button onClick ={cb} className =\"px-4 py-3 bg-gray-200 text-gray-500 text-xs font-semibold rounded hover:bg-gray-600 hover:text-white\">{text}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from \"react\"\r\nimport Button from \"./utils/Button\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst NoMatch = () => {\r\n    return(\r\n        <div className=\"h-screen w-screen bg-gray-100 flex items-center\">\r\n            <div className=\"container flex flex-col md:flex-row items-center justify-center px-5 text-gray-700\">\r\n                <div className=\"max-w-md\">\r\n                    <div className=\"text-5xl font-dark font-bold\">404</div>\r\n                    <h2>Sorry we couldn`t find this page. </h2>\r\n                    <p>But dont worry, you can find plenty of other things on our homepage.</p>\r\n                    <Link to =\"/\"><Button text = \"Back to homepage\"/></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoMatch","import axios from \"axios\"\r\nconst baseUrl = \"/api/login\"\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nconst localLogin = async () => {\r\n    const response = await axios.get(baseUrl + \"/local_login\")\r\n    return response.data\r\n}\r\n\r\nconst logOut = async () => {\r\n    const response = await axios.get(baseUrl + \"/logout\")\r\n    return response.data\r\n}\r\n\r\nconst signup = async credentials => {\r\n    const respone = await axios.post(\"/api/users\", credentials)\r\n    return respone.data\r\n}\r\n\r\nconst revoke = async () => {\r\n    const response = await axios.put(\"/api/users/revoke\")\r\n    return response.data\r\n}\r\n\r\nconst revokeSingle = async (account) => {\r\n    const response = await axios.put(\"/api/users/revokeSingle\", account)\r\n    return response.data\r\n}\r\n\r\nconst addAccounts = async accountIds => {\r\n    const response = await axios.put(\"/api/users/addAccounts\", accountIds)\r\n    return response.data\r\n}\r\n\r\nconst changeNumber = async number => {\r\n    const response = await axios.put(\"/api/users/changeNumber\", number)\r\n    return response.data\r\n}\r\n\r\nconst checkEmailVerified = async () => {\r\n    const response = await axios.get(\"/api/users/checkEmailVerified\" )\r\n    return response.data\r\n}\r\n\r\nconst verifySMS = async code => {\r\n    const response = await axios.get(\"/api/users/verifySMS/\" + code)\r\n    return response.data\r\n}\r\n\r\nconst reSendSMS = async () => {\r\n    const response = await axios.get(\"/api/users/reSendSMS\")\r\n    return response.data\r\n}\r\n\r\nexport default { login, signup, localLogin, logOut, revoke, addAccounts,revokeSingle, checkEmailVerified, verifySMS,reSendSMS, changeNumber }","import axios from \"axios\"\r\nconst baseUrl = \"/api/obpApi\"\r\n\r\nconst getConsent = () => {\r\n    // await axios.get(\"/api/obpApi/connect\")\r\n    window.location.href = baseUrl + \"/connect\"\r\n}\r\n\r\nconst getAccounts = async () => {\r\n    const response = await axios.get(baseUrl + \"/getMyAccounts\")\r\n    return response.data\r\n}\r\n\r\nconst getTransactions = async (bankid, id) => {\r\n    const response = await axios.get(baseUrl + \"/getTransactions/\" + bankid + \"/\" + id)\r\n    return response.data\r\n}\r\n\r\nconst getSingleAccount = async (bankid, id) => {\r\n    const response = await axios.get(baseUrl + \"/getAccount/\" + bankid + \"/\" + id)\r\n    return response.data\r\n}\r\n\r\nconst getBalance = async (bankid) => {\r\n    const response = await axios.get(baseUrl + \"/getBalance/\" + bankid)\r\n    return response.data\r\n}\r\n\r\nconst getBank = async (bankid) => {\r\n    const response = await axios.get(baseUrl + \"/getBank/\" + bankid)\r\n    return response.data\r\n}\r\n\r\nconst grantView = async id => {\r\n    const response = await axios.post(baseUrl + \"/grantView\", id)\r\n    return response.data\r\n}\r\n\r\nconst revokeView = async id => {\r\n    const response = await axios.post(baseUrl + \"/revokeView\", id)\r\n    return response.data\r\n}\r\n\r\nexport default { getConsent, getAccounts, getTransactions, getBalance, grantView, getSingleAccount, revokeView, getBank }","import axios from \"axios\"\r\nconst baseUrl = \"/api/banks\"\r\n\r\nconst createBank = async bank => {\r\n    const response = await axios.post(baseUrl, bank)\r\n    return response.data\r\n}\r\n\r\nconst getBank = async bank_id => {\r\n    const response = await axios.get(baseUrl + \"/\" +bank_id)\r\n    return response.data\r\n}\r\n\r\nexport default { createBank, getBank }","import userService from \"../services/users\"\r\nimport obpService from \"../services/obp\"\r\nimport bankService from \"../services/banks\"\r\n\r\nconst userReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n    case \"LOGIN\":\r\n        return action.data\r\n    case \"LOCAL_LOGIN\":\r\n        if(action.data) {\r\n            return action.data\r\n        }else {\r\n            return action.data\r\n        }\r\n    case \"LOGOUT\":\r\n        return null\r\n    case \"GET_CONSENT\":\r\n        return state\r\n    case \"GRANT_VIEW\":\r\n        return { ...state, accountIds: action.data[0], consent: action.data[1] }\r\n    case \"REVOKE_CONSENT_SINGLE\":\r\n        return action.data\r\n    case \"GET_ACCOUNTS\":\r\n        return action.data\r\n    case \"NO_ACCOUNTS\":\r\n        return state\r\n    case \"GET_TRANSACTIONS\":\r\n        return action.data\r\n    case \"GET_BALANCE\":\r\n        return action.data\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const login = (email, password, cb, messageCb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login({\r\n                email, password,\r\n            })\r\n            dispatch ({\r\n                type: \"LOGIN\",\r\n                data: user,\r\n            })\r\n            cb()\r\n        } catch (exception) {\r\n            if(exception.response.data.error === \"User has not verified their email\"){\r\n                messageCb(exception.response.data.error)\r\n            }else if(exception.response.data.error === \"Wrong password\"){\r\n                messageCb(exception.response.data.error)\r\n            }else if(exception.response.data.error === \"User has not verified their phone\"){\r\n                messageCb(exception.response.data.error)\r\n            }else{\r\n                console.log(exception)\r\n                messageCb(\"Wrong user\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const localLogin = () => {\r\n    return ( async dispatch =>\r\n    {\r\n        const user = await userService.localLogin()\r\n        dispatch ({\r\n            type: \"LOCAL_LOGIN\",\r\n            data: user\r\n        })}\r\n    )\r\n}\r\n\r\nexport const logout = (cb) => {\r\n    return ( async dispatch =>\r\n    {\r\n        await userService.logOut()\r\n        dispatch ({\r\n            type: \"LOGOUT\"\r\n        })\r\n        cb()\r\n    }\r\n    )\r\n}\r\n\r\nexport const getConsent = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await obpService.getConsent()\r\n            dispatch({\r\n                type: \"GET_CONSENT\",\r\n                data: response\r\n            })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAccounts = (user) => {\r\n    return async dispatch => {\r\n        if (user.consent){\r\n            if(user.accounts){\r\n                try {\r\n                    dispatch({\r\n                        type: \"GET_ACCOUNTS\",\r\n                        data: { ...user }\r\n                    })\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n            }else{\r\n                try {\r\n                    const response = await obpService.getAccounts()\r\n                    const accountPromises = response.accounts.map(async account => {\r\n                        let bank\r\n                        const bankDB = await bankService.getBank(account.bank_id)\r\n                        if(bankDB){\r\n                            bank = bankDB\r\n                        }else{\r\n                            const bankOBP = await obpService.getBank(account.bank_id)\r\n                            const bankResponse = await bankService.createBank({ bank_id: bankOBP.id, full_name: bankOBP.full_name, logo: bankOBP.logo })\r\n                            bank = bankResponse\r\n                        }\r\n                        return(\r\n                            { ...account, bank:bank }\r\n                        )\r\n                    })\r\n                    const accounts = await Promise.all(accountPromises)\r\n                    dispatch({\r\n                        type: \"GET_ACCOUNTS\",\r\n                        data: { ...user, accounts: accounts }\r\n                    })\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n            }}else {\r\n            dispatch({\r\n                type: \"NO_ACCOUNTS\"\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTransactions = (user) => {\r\n    return async dispatch => {\r\n        if(user){\r\n            if(user.consent){\r\n                try {\r\n                    const transactionsPromises = user.accountIds.map(async (account) => {\r\n                        const singleAccount = await obpService.getSingleAccount(account.bank, account.account)\r\n                        const transactions = await obpService.getTransactions(account.bank, account.account)\r\n                        let bank\r\n                        const bankDB = await bankService.getBank(account.bank)\r\n                        if(bankDB){\r\n                            bank = bankDB\r\n                        }else{\r\n                            const bankOBP = await obpService.getBank(account.bank)\r\n                            const bankResponse = await bankService.createBank({ bank_id: bankOBP.id, full_name: bankOBP.full_name, logo: bankOBP.logo })\r\n                            bank = bankResponse\r\n                        }\r\n\r\n                        return(\r\n                            { ...singleAccount, transactions: transactions.transactions, bank:bank }\r\n                        )\r\n                    })\r\n                    const results = await Promise.all(transactionsPromises)\r\n                    const newUser = { ...user, accounts: results }\r\n                    dispatch({\r\n                        type:\"GET_TRANSACTIONS\",\r\n                        data: newUser\r\n                    })\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n            }else {\r\n                dispatch({\r\n                    type: \"NO_ACCOUNTS\"\r\n                })\r\n            }\r\n        }else {\r\n            dispatch({\r\n                type: \"NO_ACCOUNTS\"\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const grantView = (idState, accountIds, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await userService.addAccounts([...accountIds, ...idState])\r\n            const viewPromises = idState.map(async id => await obpService.grantView(id))\r\n            await Promise.all(viewPromises)\r\n            dispatch({\r\n                type: \"GRANT_VIEW\",\r\n                data: [[...accountIds, ...idState], response.consent]\r\n            })\r\n            cb()\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const revokeConsentSingle = (user, account, bank) => {\r\n    return async dispatch => {\r\n        try {\r\n            await obpService.revokeView({ account:account, bank:bank })\r\n            const response = await userService.revokeSingle({ account: account })\r\n            dispatch({\r\n                type: \"REVOKE_CONSENT_SINGLE\",\r\n                data: { ...user, accountIds: response.accountIds, consent: response.consent }\r\n            })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default userReducer","import React from \"react\"\r\n\r\nconst Loading = () => {\r\n    return(\r\n        <div className=\"flex items-center justify-center w-full h-full\">\r\n            <div className=\"flex justify-center items-center space-x-1 text-sm text-gray-700 \">\r\n\r\n                <svg fill='none' className=\"w-12 h-12 animate-spin\" viewBox=\"0 0 32 32\" xmlns='http://www.w3.org/2000/svg'>\r\n                    <path clipRule='evenodd'\r\n                        d='M15.165 8.53a.5.5 0 01-.404.58A7 7 0 1023 16a.5.5 0 011 0 8 8 0 11-9.416-7.874.5.5 0 01.58.404z'\r\n                        fill='currentColor' fillRule='evenodd' />\r\n                </svg>\r\n\r\n\r\n                <div className =\"text-3xl\">Loading ...</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import React from \"react\"\r\n\r\nconst TransactionList = ({ transactions }) => {\r\n    let startingDate = null\r\n    return(\r\n        <div className = \"bg-white shadow-xl rounded-lg w-1/2\">\r\n            <ul className=\"divide-y divide-gray-300\">\r\n                {transactions.map((transaction) => {\r\n                    if(transaction.details.completed !== startingDate){\r\n                        startingDate = transaction.details.completed\r\n                    }else{\r\n                        transaction.details.completed = null\r\n                    }\r\n                    return(\r\n                        <div key = {transaction.id}>\r\n                            {transaction.details.completed ? <h2>{transaction.details.completed}</h2> : console.log()}\r\n                            <li className=\"p-4 hover:bg-gray-50 cursor-pointer\">\r\n                            Balance: {transaction.details.new_balance.amount} Transfer amount: {transaction.details.value.amount} Description: {transaction.details.description}\r\n                            </li>\r\n                        </div>\r\n                    )})}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransactionList","import React from \"react\"\r\nimport Loading from \"../utils/Loading\"\r\nimport TransactionList from \"./TransactionList\"\r\nimport { Line } from \"react-chartjs-2\"\r\n\r\nconst AllAccounts = ({ transactions , totalBalance }) => {\r\n    if(transactions[0]){\r\n        transactions.sort((a,b) => {\r\n            return new Date(b.details.completed) - new Date(a.details.completed)\r\n        })\r\n        let balance = totalBalance\r\n        transactions = transactions.map(transaction => {\r\n            const newBalance = balance\r\n            balance -= Number(transaction.details.value.amount)\r\n            const date = new Date(transaction.details.completed)\r\n            const newDate =  date.getFullYear()+\"-\" + (date.getMonth()+1) + \"-\"+date.getDate()\r\n            return { ...transaction, details: { ...transaction.details, completed: newDate , new_balance: { ...transaction.details.new_balance, amount: newBalance.toFixed(2) } } }\r\n        })\r\n        const dates = transactions.map(transaction => transaction.details.completed)\r\n        const balanceList = transactions.map(transaction => transaction.details.new_balance.amount)\r\n        const data ={\r\n            labels : dates.reverse(),\r\n            datasets: [{\r\n                label: \"Balance (EUR)\",\r\n                data: balanceList.reverse(),\r\n                fill: false,\r\n                lineTension: 0.5,\r\n                backgroundColor: \"rgb(255, 99, 132)\",\r\n                borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            }]\r\n        }\r\n        const options = {\r\n            scales: {\r\n                yAxes: {\r\n                    grid: { display: true, },\r\n                    ticks: { beginAtZero: true } },\r\n                xAxes: {\r\n                    grid: { display: false, },\r\n                    ticks: {\r\n                        display: true,\r\n                        autoSkip: true,\r\n                        autoSkipPadding: 50,\r\n                    }\r\n                }\r\n            },\r\n        }\r\n        return(\r\n            <div >\r\n                <div style ={{ height: \"500px\", width: \"1000px\" }} >\r\n                    <Line data={data} options={options} />\r\n                </div>\r\n                <TransactionList transactions = {transactions}/>\r\n            </div>\r\n\r\n        )\r\n    }else if(totalBalance){\r\n        return (\r\n            <div>\r\n                <h3>Balance: {totalBalance}</h3>\r\n                No recent transactions\r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n        <Loading />\r\n    )\r\n}\r\n\r\nexport default AllAccounts","import React from \"react\"\r\nimport TransactionList from \"./TransactionList\"\r\nimport { Line } from \"react-chartjs-2\"\r\n\r\nconst SingleAccounts = ({ transactions, balance }) => {\r\n    if(transactions[0]){\r\n        transactions = transactions.map(transaction => {\r\n            const date = new Date(transaction.details.completed)\r\n            const newDate =  date.getFullYear()+\"-\" + (date.getMonth()+1) + \"-\"+date.getDate()\r\n            return { ...transaction, details: { ...transaction.details, completed: newDate } }\r\n        })\r\n        const dates = transactions.map(transaction => transaction.details.completed)\r\n        const balanceList = transactions.map(transaction => transaction.details.new_balance.amount)\r\n        const data ={\r\n            labels : dates.reverse(),\r\n            datasets: [{\r\n                label: \"Balance (EUR)\",\r\n                data: balanceList.reverse(),\r\n                fill: false,\r\n                lineTension: 0.5,\r\n                backgroundColor: \"rgb(255, 99, 132)\",\r\n                borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            }]\r\n        }\r\n        const options = {\r\n            scales: {\r\n                yAxes: {\r\n                    grid: { display: true, },\r\n                    ticks: { beginAtZero: true } },\r\n                xAxes: {\r\n                    grid: { display: false, },\r\n                    ticks: {\r\n                        display: true,\r\n                        autoSkip: true,\r\n                        autoSkipPadding: 50,\r\n                    }\r\n                } },\r\n        }\r\n        return(\r\n            <div>\r\n                <div style ={{ height: \"500px\", width: \"1000px\" }} >\r\n                    <Line data={data} options={options} />\r\n                </div>\r\n                <TransactionList transactions = {transactions}/>\r\n            </div>\r\n        )\r\n    }else if(balance){\r\n        return (\r\n            <div>\r\n                <h3>{balance.amount}</h3>\r\n                No recent transactions\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingleAccounts","import React from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport Button from \"../utils/Button\"\r\n\r\nconst NoAccounts = () => {\r\n    const history = useHistory()\r\n    const handleAccountAuth = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/consent\")\r\n    }\r\n    return(\r\n        <div className =\"addAccount\">\r\n            <h3>Please add an account to start</h3>\r\n            <Button cb ={handleAccountAuth} text =\"Add Account\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoAccounts","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getTransactions } from \"../reducers/userReducer\"\r\nimport AllAccounts from \"./transactions/AllAccounts\"\r\nimport SingleAccounts from \"./transactions/SingleAccount\"\r\nimport Button from \"./utils/Button\"\r\nimport NoAccounts from \"./transactions/NoAccounts\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route, Link\r\n} from \"react-router-dom\"\r\n\r\n\r\nconst Transaction = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    useEffect(() => {\r\n        dispatch(getTransactions(user))\r\n    }, [])\r\n    const handleRefresh = (event) => {\r\n        event.preventDefault()\r\n        dispatch(getTransactions(user))\r\n    }\r\n    const reducer = (a,b) => {\r\n        if(a){\r\n            return [...b, ...a]\r\n        }\r\n        return b\r\n    }\r\n    const sumReducer = (initial,nextValue) => {\r\n        return initial + parseFloat(nextValue.amount)\r\n    }\r\n    const accounts = user.accounts ? user.accounts : []\r\n    const allTransactionsArrays = user.accounts ?\r\n        user.accounts[0].transactions ?\r\n            user.accounts.map(account => account.transactions)\r\n            : null\r\n        : null\r\n    console.log(allTransactionsArrays)\r\n    const allBalancesArrays = user.accounts ?\r\n        user.accounts[0].balance ?\r\n            user.accounts.map(account => account.balance)\r\n            : null\r\n        : null\r\n\r\n    const allTransactions =  allTransactionsArrays ? allTransactionsArrays.reduce(reducer, []) : []\r\n    const totalBalance = allBalancesArrays ? allBalancesArrays.reduce(sumReducer,0) : 0\r\n    return(\r\n        <div>\r\n            <h1>Transactions</h1>\r\n            {user.consent ?\r\n                <div>\r\n                    <Router>\r\n                        <div className = \"space-x-4\" >\r\n                            <Link to = {\"/transactions/All_accounts\"}>\r\n                                <Button text =\"All Accounts\" />\r\n                            </Link>\r\n                            {accounts.map(account =>\r\n                                <Link to = {\"/transactions/\" + account.bank_id + \"/\" + account.id} key ={account.id}>\r\n                                    <Button text ={account.bank.full_name} />\r\n                                </Link>)}\r\n                            <Button cb = { handleRefresh } text =\"Refresh\" />\r\n                        </div>\r\n                        <Switch>\r\n                            {accounts.map(account =>\r\n                                <Route path = {\"/transactions/\" + account.bank_id + \"/\" + account.id} key = {account.id}>\r\n                                    <SingleAccounts transactions = {account.transactions} balance = {account.balance}/>\r\n                                </Route>)}\r\n                            <Route path =\"/transactions/All_accounts\">\r\n                                <AllAccounts transactions = {allTransactions} totalBalance = {totalBalance}/>\r\n                            </Route>\r\n                            <Route exact path =\"/transactions\">\r\n                                <AllAccounts transactions = {allTransactions} totalBalance = {totalBalance}/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </Router>\r\n                </div>\r\n                :\r\n                <NoAccounts />\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Transaction","const messageReducer = (state = null, action) => {\r\n    switch (action.type){\r\n    case \"SET_MESSAGE\":\r\n        return action.data\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const setMessage = (message) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_MESSAGE\",\r\n            data: message\r\n        })\r\n        setTimeout(() => dispatch({ type: \"SET_MESSAGE\", data: null }), 3000)\r\n    }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_MESSAGE\",\r\n            data: null\r\n        })\r\n    }\r\n}\r\n\r\nexport default messageReducer","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst Message = () => {\r\n    const message = useSelector(state => state.message)\r\n    const style = message ? \"alert flex flex-row items-center bg-blue-200 p-5 rounded border-b-2 border-blue-300\" : \"hidden\"\r\n    return (\r\n        <div className={style}>\r\n            <div className=\"alert-icon flex items-center bg-blue-100 border-2 border-blue-500 justify-center h-10 w-10 flex-shrink-0 rounded-full\">\r\n                <span className=\"text-blue-500\">\r\n                    <svg fill=\"currentColor\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        className=\"h-6 w-6\">\r\n                        <path fillRule=\"evenodd\"\r\n                            d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\r\n                            clipRule=\"evenodd\"></path>\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n            <div className=\"alert-content ml-4\">\r\n                <div className=\"alert-title font-semibold text-lg text-blue-800\">\r\n                Info\r\n                </div>\r\n                <div className=\"alert-description text-sm text-blue-600\">\r\n                    {message}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { login } from \"../../reducers/userReducer\"\r\nimport { useHistory } from \"react-router\"\r\nimport { setMessage } from \"../../reducers/messageReducer\"\r\nimport Message from \"../Message\"\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleLogin = (event) => {\r\n        event.preventDefault()\r\n        const email = event.target.Email.value\r\n        const password = event.target.Password.value\r\n        const cb = () => history.push(\"/\")\r\n        const messageCb = (message) => {dispatch(setMessage(message))}\r\n        dispatch(login(email,password, cb, messageCb))\r\n    }\r\n    const handleRedirect = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/signup\")\r\n    }\r\n    const inputStyle = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-blue-300 \"\r\n    return (\r\n        <section className=\"App h-screen w-full flex justify-center items-center bg-gray-700 \">\r\n            <div className=\"w-full max-w-md bg-gray-800\">\r\n                <Message />\r\n                <form onSubmit={handleLogin} className=\" bg-white shadow-md rounded px-8 py-8 pt-8 \">\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"text\" className=\"text-sm block font-bold pb-2\">EMAIL</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"Email\"\r\n                            id =\"email\"\r\n                            className={inputStyle}\r\n                            placeholder=\"John97@gmail.com\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"password\" className=\"text-sm block font-bold pb-2\">PASSWORD</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"Password\"\r\n                            id=\"password\"\r\n                            className={inputStyle}\r\n                            placeholder=\"Enter your password\"\r\n                        />\r\n                    </div>\r\n                    <button id =\"login-button\"type=\"submit\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-4\">Login</button>\r\n                    <button id =\"Signup-button\"type=\"button\" onClick={handleRedirect} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-8\">Sign up</button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { logout } from \"../../reducers/userReducer\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nconst Logout = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleLogout = (event) => {\r\n        event.preventDefault()\r\n        const cb = () => history.push(\"/\")\r\n        dispatch(logout(cb))\r\n    }\r\n    return(\r\n        <button onClick ={handleLogout}> Log out</button>\r\n    )\r\n}\r\n\r\nexport default Logout","import userService from \"../services/users\"\r\n\r\nconst signUpReducer = (state = null, action) => {\r\n    switch(action.type){\r\n    case \"SIGN_UP\":\r\n        return action.data\r\n    case \"CHECK_EMAIL_VERIFIED\":\r\n        return state\r\n    case \"VERIFY_SMS\":\r\n        return state\r\n    case \"CHANGE_NUMBER\":\r\n        return state\r\n    case \"RESEND_SMS\":\r\n        return state\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const checkEmailVerified = (cb, messageCb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await userService.checkEmailVerified()\r\n            dispatch({\r\n                type: \"CHECK_EMAIL_VERIFIED\"\r\n            })\r\n            if(response.verified) {\r\n                cb()\r\n            }else{\r\n                messageCb(\"Your email has not been verified, please verifiy your email to continue\")\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const verifySMS = (code, cb, messageCb) => {\r\n    return async dispatch => {\r\n        try{\r\n            const response = await userService.verifySMS(code)\r\n            dispatch({\r\n                type: \"VERIFY_SMS\"\r\n            })\r\n            if (response.SMSverified){\r\n                cb()\r\n            }else{\r\n                console.log(code)\r\n                messageCb(\"Wrong code\")\r\n            }\r\n        }catch (e) {\r\n            console.log(e)\r\n            console.log(code)\r\n            messageCb(\"Wrong code\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const reSendSMS = (messageCb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await userService.reSendSMS()\r\n            dispatch({\r\n                type: \"RESEND_SMS\"\r\n            })\r\n            if(response.sent){\r\n                messageCb(\"Code Sent\")\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const changeNumber = (number,cb, messageCb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await userService.changeNumber( { number })\r\n            dispatch({\r\n                type: \"CHANGE_NUMBER\"\r\n            })\r\n            if(response.numberChanged){\r\n                messageCb(\"Number Changed\")\r\n                cb()\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n            if(e.response.data.error){\r\n                messageCb(e.response.data.error)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const signup = (email, name, number, password,cb, messageCb) => {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.signup({\r\n                email, name, number, password,\r\n            })\r\n            dispatch({\r\n                type: \"SIGN_UP\",\r\n                data: email\r\n            })\r\n            cb()\r\n        } catch (e) {\r\n            console.log(e.response.data.error)\r\n            if(e.response.data.error){\r\n                messageCb(e.response.data.error)\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default signUpReducer","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { setMessage } from \"../../reducers/messageReducer\"\r\nimport { signup } from \"../../reducers/signUpReducer\"\r\nimport Message from \"../Message\"\r\n\r\nconst SignUp = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleSignup = (event) => {\r\n        event.preventDefault()\r\n        const email = event.target.Email.value\r\n        const password = event.target.Password.value\r\n        const name = event.target.Name.value\r\n        const number =event.target.Number.value\r\n        const cb = () => history.push(\"/signUpEmailStep\")\r\n        const messageCb = (message) => {dispatch(setMessage(message))}\r\n        dispatch(signup(email, name,number, password, cb, messageCb))\r\n    }\r\n    return (\r\n        <section className=\"App h-screen w-full flex justify-center items-center bg-gray-700 \">\r\n            <div className=\"w-full max-w-md bg-gray-800 \">\r\n                <Message/>\r\n                <p className = \"text-white bold md:text-center pb-4\">Step 1. Register your information</p>\r\n                <form onSubmit ={handleSignup} className=\" bg-white shadow-md rounded px-8 py-8 pt-8\">\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"text\" className=\"text-sm block font-bold pb-2\">EMAIL</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"Email\"\r\n                            id =\"email\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-blue-300 \"\r\n                            placeholder=\"John97@gmail.com\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"text\" className=\"text-sm block font-bold pb-2\">NAME</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"Name\"\r\n                            id =\"name\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-blue-300 \"\r\n                            placeholder=\"John Pham\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"text\" className=\"text-sm block font-bold pb-2\">NUMBER</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"Number\"\r\n                            id =\"number\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-blue-300 \"\r\n                            placeholder=\"+44xxxxxxxxxx\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"password\" className=\"text-sm block font-bold pb-2\">PASSWORD</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"Password\"\r\n                            id =\"password\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-blue-300\"\r\n                            placeholder=\"Enter your password\"/>\r\n                    </div>\r\n                    <button id =\"signup-button\" type=\"submit\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-4\">Sign up</button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SignUp","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { getConsent } from \"../../reducers/userReducer\"\r\nimport Button from \"../utils/Button\"\r\n\r\nconst Consent = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleConfirm =(event) => {\r\n        event.preventDefault()\r\n        dispatch(getConsent())\r\n    }\r\n    return(\r\n        <div>\r\n            <div>\r\n                <h1>Consent confirmation</h1>\r\n                <h3>You will be transfered to Open Banking Project where the Application will request the following information: </h3>\r\n                <p>Your account details </p>\r\n                <p>Your regular payments </p>\r\n                <p>Your accounts transactions </p>\r\n                <p>The application would only use these infomation to provide you services. </p>\r\n                <p>Any indentifying information is removed </p>\r\n                <Button cb = {handleConfirm} text =\"Login to the Open Banking Project \" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Consent","import React, { useEffect } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { revokeConsentSingle } from \"../reducers/userReducer\"\r\nimport Loading from \"./utils/Loading\"\r\nimport Button from \"./utils/Button\"\r\nimport NoAccounts from \"./transactions/NoAccounts\"\r\nimport { getTransactions } from \"../reducers/userReducer\"\r\n\r\nconst Accounts = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    useEffect(() => {\r\n        dispatch(getTransactions(user))\r\n    }, [dispatch])\r\n    const handleAddAccount = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/consent\")\r\n    }\r\n    const handleRevokeAccount = ( account, bank ) => {\r\n        dispatch(revokeConsentSingle(user, account, bank))\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>Accounts</h1>\r\n            {user.consent ?\r\n                <div>\r\n                    <div className = \"bg-white shadow-xl rounded-lg w-1/2\">\r\n                        <ul className=\"divide-y divide-gray-300\">\r\n                            {user.accounts ?\r\n                                user.accounts.map(account =>\r\n                                {for(let i = 0; user.accountIds.length > i; i++){\r\n                                    if(user.accountIds[i].account === account.id){\r\n                                        return(\r\n                                            <li key = {account.id} className=\"p-4 hover:bg-gray-50 cursor-pointer\">\r\n                                                <img className=\"w-10 h-10 md:w-20 md:h-20 mr-2 rounded-md overflow-hidden inline-block shadow-md\" src={account.bank.logo} />\r\n                                                <div className =\"inline-block\"><b>{account.bank.full_name}:</b> {account.id}</div>\r\n                                                <br/>\r\n                                                <div className =\"mt-4\">\r\n                                                    <Button cb = {() => handleRevokeAccount(account.id, account.bank.bank_id)} text =\"Revoke Consent\" />\r\n                                                </div>\r\n                                            </li>\r\n                                        )\r\n                                    }\r\n                                }}\r\n                                )\r\n                                :\r\n                                <Loading />\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    <Button cb = {handleAddAccount} text =\"Add Account\" />\r\n                </div>\r\n                :\r\n                <NoAccounts />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Accounts","import React from \"react\"\r\n\r\nconst About = () => {\r\n    return(\r\n        <div className=\"flex bg-white h-screen\">\r\n            <div className=\"flex items-center text-center lg:text-left px-8 md:px-12 lg:w-1/2\">\r\n                <div>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">The application connects to the Open Banking Project Api to simulate connecting to real banks with Open Banking.</p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">This application was created for as the final project for my Msc Computing and Information System course at Queen Mary University of London</p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">I can be contacted at phamhungphu97@gmail.com or at ec20104@qmul.ac.uk</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport NoAccounts from \"./transactions/NoAccounts\"\r\nimport { getTransactions } from \"../reducers/userReducer\"\r\nimport { Doughnut } from \"react-chartjs-2\"\r\nimport Loading from \"./utils/Loading\"\r\n\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    useEffect(() => {\r\n        dispatch(getTransactions(user))\r\n    }, [])\r\n    const sumReducer = (initial,nextValue) => {\r\n        return initial + parseFloat(nextValue)\r\n    }\r\n    const reducer = (a,b) => {\r\n        if(a){\r\n            return [...b, ...a]\r\n        }\r\n        return b\r\n    }\r\n    const hasBalance = user.accounts ?\r\n        user.accounts[0].balance ? true : false : false\r\n    const allTransactionsArrays = user.accounts ?\r\n        user.accounts[0].transactions ?\r\n            user.accounts.map(account => account.transactions)\r\n            : null\r\n        : null\r\n    const allTransactions =  allTransactionsArrays ? allTransactionsArrays.reduce(reducer, []) : []\r\n\r\n    const allExpensesArrays = allTransactions ?\r\n        allTransactions.filter(transaction => parseFloat(transaction.details.value.amount) < 0)\r\n        : null\r\n    const allExpenses = allExpensesArrays ? allExpensesArrays.map(expense => expense.details.value.amount) : []\r\n    const totalExpenses = allExpenses ? allExpenses.reduce(sumReducer,0) : 0\r\n\r\n    const allIncomesArrays = allTransactions ?\r\n        allTransactions.filter(transaction => parseFloat(transaction.details.value.amount) > 0)\r\n        : null\r\n    const allIncomes = allIncomesArrays ? allIncomesArrays.map(expense => expense.details.value.amount) : []\r\n    const totalIncomes = allIncomes ? allIncomes.reduce(sumReducer,0) : 0\r\n\r\n    const dataExpenses = {\r\n        labels: [\"General expenses\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\r\n        datasets: [\r\n            {\r\n                label: \"# of Votes\",\r\n                data: [totalExpenses, 0, 0, 0, 0, 0],\r\n                backgroundColor: [\r\n                    \"rgba(255, 99, 132, 0.2)\",\r\n                    \"rgba(54, 162, 235, 0.2)\",\r\n                    \"rgba(255, 206, 86, 0.2)\",\r\n                    \"rgba(75, 192, 192, 0.2)\",\r\n                    \"rgba(153, 102, 255, 0.2)\",\r\n                    \"rgba(255, 159, 64, 0.2)\",\r\n                ],\r\n                borderColor: [\r\n                    \"rgba(255, 99, 132, 1)\",\r\n                    \"rgba(54, 162, 235, 1)\",\r\n                    \"rgba(255, 206, 86, 1)\",\r\n                    \"rgba(75, 192, 192, 1)\",\r\n                    \"rgba(153, 102, 255, 1)\",\r\n                    \"rgba(255, 159, 64, 1)\",\r\n                ],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    }\r\n\r\n    const dataIncomes = {\r\n        labels: [\"Red\", \"Blue\", \"Yellow\", \"General Income\", \"Purple\", \"Orange\"],\r\n        datasets: [\r\n            {\r\n                label: \"# of Votes\",\r\n                data: [0, 0, 0, totalIncomes, 0, 0],\r\n                backgroundColor: [\r\n                    \"rgba(255, 99, 132, 0.2)\",\r\n                    \"rgba(54, 162, 235, 0.2)\",\r\n                    \"rgba(255, 206, 86, 0.2)\",\r\n                    \"rgba(75, 192, 192, 0.2)\",\r\n                    \"rgba(153, 102, 255, 0.2)\",\r\n                    \"rgba(255, 159, 64, 0.2)\",\r\n                ],\r\n                borderColor: [\r\n                    \"rgba(255, 99, 132, 1)\",\r\n                    \"rgba(54, 162, 235, 1)\",\r\n                    \"rgba(255, 206, 86, 1)\",\r\n                    \"rgba(75, 192, 192, 1)\",\r\n                    \"rgba(153, 102, 255, 1)\",\r\n                    \"rgba(255, 159, 64, 1)\",\r\n                ],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    }\r\n\r\n    const pluginsExpenses = [{\r\n        beforeDraw: function(chart) {\r\n            var width = chart.width,\r\n                height = chart.height,\r\n                ctx = chart.ctx\r\n            ctx.restore()\r\n            var fontSize = (height / 200).toFixed(2)\r\n            ctx.font = fontSize + \"em sans-serif\"\r\n            ctx.textBaseline = \"top\"\r\n            var text = `-£${-totalExpenses.toFixed(2)}`,\r\n                textX = Math.round((width - ctx.measureText(text).width) / 2),\r\n                textY = height / 2.1\r\n            ctx.fillText(text, textX, textY)\r\n            ctx.save()\r\n        }\r\n    }]\r\n\r\n    const pluginsIncomes = [{\r\n        beforeDraw: function(chart) {\r\n            var width = chart.width,\r\n                height = chart.height,\r\n                ctx = chart.ctx\r\n            ctx.restore()\r\n            var fontSize = (height / 200).toFixed(2)\r\n            ctx.font = fontSize + \"em sans-serif\"\r\n            ctx.textBaseline = \"top\"\r\n            var text = `+£${totalIncomes.toFixed(2)}`,\r\n                textX = Math.round((width - ctx.measureText(text).width) / 2),\r\n                textY = height / 2.1\r\n            ctx.fillText(text, textX, textY)\r\n            ctx.save()\r\n        }\r\n    }]\r\n\r\n    const options= {\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1 >Welcome to your budget planner</h1>\r\n            {user.consent ?\r\n                <div>\r\n                    <div >\r\n                        {totalExpenses === 0 ?\r\n                            hasBalance === false ?\r\n                                <Loading />\r\n                                :\r\n                                <h3>No recent transactions</h3>\r\n                            :\r\n                            <div >\r\n                                <div className =\"inline-block h-300px w-300px\">\r\n                                    <Doughnut data={dataIncomes} plugins={pluginsIncomes} options ={options}/>\r\n                                    <h3 className =\"px-20\">Income</h3>\r\n                                </div>\r\n                                <div className =\"inline-block h-300px w-300px ml-4\" >\r\n                                    <Doughnut data={dataExpenses} plugins={pluginsExpenses} options ={options}/>\r\n                                    <h3 className =\"px-20\">Expenses</h3>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <p>You can start by checking the Accounts you have added to the Application</p>\r\n                    <p>Or look at your Transactions</p>\r\n                </div>\r\n                : <NoAccounts />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nconst UnprotectedHome = () => {\r\n    return(\r\n        <div className=\"flex bg-white h-screen\">\r\n            <div className=\"flex items-center text-center lg:text-left px-8 md:px-12 lg:w-1/2\">\r\n                <div>\r\n                    <h2 className=\"text-3xl font-semibold text-gray-800 md:text-4xl\">Personal finance for <span className=\"text-indigo-600\">You</span></h2>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">This application would connect all finances into one covinient dashboard, from which you can start shaping your personal finance.</p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">The application connects to the Open Banking Project Api to simulate connecting to real banks with Open Banking.</p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">To see what the application would look like running you can login using:</p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">Email: testuser@gmail.com Pass: test90</p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">Or go through the sign up proccess and when asked to log in to Open Banking Project use:</p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">Username: jaakko.fi.29@example.com Pass: 8132cf </p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">Please note that the application would require you to verify your email and phone number</p>\r\n                    <div className=\"flex justify-center lg:justify-start mt-6\">\r\n                        <Link to=\"/login\"><span className=\"px-4 py-3 bg-gray-900 text-gray-200 text-xs font-semibold rounded hover:bg-gray-800\">Get Started</span></Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"hidden lg:block lg:w-1/2 \" >\r\n                <div className=\"h-full object-cover bg-hero-pattern\">\r\n                    <div className=\"h-full bg-black opacity-25\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UnprotectedHome","\r\nconst choiceReducer = (state = { banks:[] , accounts :[] }, action) => {\r\n    let newState = {}\r\n    switch (action.type){\r\n    case \"SET_BANK\":\r\n        newState = { banks: [...state.banks, action.data], accounts: [...state.accounts] }\r\n        return newState\r\n    case \"SET_ACCOUNT\":\r\n        newState = { banks:[...state.banks], accounts: [...state.accounts, action.data] }\r\n        return newState\r\n    case \"REMOVE_BANK\":\r\n        newState ={ banks: state.banks.filter(bank => bank !== action.data), accounts: state.accounts.filter(account => account.bank !== action.data) }\r\n        return newState\r\n    case \"REMOVE_ACCOUNT\":\r\n        newState ={ banks: [...state.banks], accounts: state.accounts.filter(\r\n            account => {\r\n                return (account.account !== action.data )\r\n            })\r\n        }\r\n        return newState\r\n    case \"RESET\":\r\n        return { banks:[] , accounts :[] }\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const setBank = (bank) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_BANK\",\r\n            data: bank\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeBank = (bank) => {\r\n    return dispatch => {\r\n        dispatch ({\r\n            type: \"REMOVE_BANK\",\r\n            data: bank\r\n        })\r\n    }\r\n}\r\nexport const setAccount = (account, bank) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_ACCOUNT\",\r\n            data: { account: account, bank:bank }\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeAccount = (account) => {\r\n    return dispatch => {\r\n        dispatch ({\r\n            type: \"REMOVE_ACCOUNT\",\r\n            data: account\r\n        })\r\n    }\r\n}\r\n\r\nexport const reset = () => {\r\n    return dispatch => {\r\n        dispatch ({\r\n            type: \"RESET\"\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default choiceReducer","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {  setAccount, removeAccount } from \"../../reducers/choiceReducer\"\r\n\r\nconst ChooseAccount = ({ filteredAccounts }) => {\r\n    const user = useSelector(state => state.user)\r\n    const dispatch = useDispatch()\r\n    const handleAccountChoice = (event) => {\r\n        const account = event.target.name\r\n        const bank = event.target.value\r\n        if(event.target.checked === true){\r\n            dispatch(setAccount(account, bank))\r\n        }else{\r\n            dispatch(removeAccount(account, bank))\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>Choose Accounts</h1>\r\n            <div className = \"bg-white shadow-xl rounded-lg w-1/2\">\r\n                <ul className=\"divide-y divide-gray-300\">\r\n                    {filteredAccounts.map(account =>\r\n                    {\r\n                        for(let i = 0; user.accountIds.length > i; i++ ){\r\n                            if(user.accountIds[i].account === account.id ){\r\n                                return(<div key = {account.id}></div>)\r\n                            }\r\n                        }\r\n                        return(\r\n                            <li key = {account.id} className=\"p-4 hover:bg-gray-50 cursor-pointer\">\r\n                                <label className=\"flex items-center relative w-max cursor-pointer select-none\">\r\n                                    <img className=\"w-10 h-10 md:w-20 md:h-20 mr-2 rounded-md overflow-hidden inline-block shadow-md\" src={account.bank.logo} />\r\n                                    <span className=\"mr-3\">{account.id}</span>\r\n                                    <input type =\"checkbox\" name = {account.id} onChange = {handleAccountChoice} value ={account.bank_id}\r\n                                        className=\"appearance-none transition-colors cursor-pointer w-14 h-7 rounded-full bg-gray-100\"\r\n                                    />\r\n                                    <span className=\"w-7 h-7 right-7 absolute rounded-full transform transition-transform bg-gray-200\" ></span>\r\n                                </label>\r\n                            </li>)}\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ChooseAccount","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { setBank, removeBank } from \"../../reducers/choiceReducer\"\r\n\r\nconst ChooseBank = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    const handleBankChoice = (event) => {\r\n        const bank = event.target.name\r\n        if(event.target.checked === true){\r\n            dispatch(setBank(bank))\r\n        }else{\r\n            dispatch(removeBank(bank))\r\n        }\r\n    }\r\n    let banks =[]\r\n    return(\r\n        <div>\r\n            <h1>Choose Banks</h1>\r\n            <div className = \"bg-white shadow-xl rounded-lg w-1/2\">\r\n                <ul className=\"divide-y divide-gray-300\">\r\n                    {user.accounts.map(account =>\r\n                    {for(let i = 0; banks.length > i; i++ ){\r\n                        if(banks[i] === account.bank_id ){\r\n                            return true\r\n                        }\r\n                    }\r\n                    for(let i = 0; user.accountIds.length > i; i++ ){\r\n                        if(user.accountIds[i].account === account.id ){\r\n                            return true\r\n                        }\r\n                    }\r\n                    banks.push(account.bank_id)\r\n                    return(\r\n                        <li key = {account.id} className=\"p-4 hover:bg-gray-50 cursor-pointer\">\r\n                            <label className=\"flex items-center relative w-max cursor-pointer select-none\">\r\n                                <img className=\"w-10 h-10 md:w-20 md:h-20 mr-2 rounded-md overflow-hidden inline-block shadow-md\" src={account.bank.logo} />\r\n                                <span className=\"mr-3\">{account.bank.full_name}</span>\r\n                                <input type =\"checkbox\" name = {account.bank_id} onChange ={handleBankChoice}\r\n                                    className=\"appearance-none transition-colors cursor-pointer w-14 h-7 rounded-full bg-gray-100\"/>\r\n                                <span className=\"w-7 h-7 right-7 absolute rounded-full transform transition-transform bg-gray-200\" ></span>\r\n                            </label>\r\n                        </li>\r\n                    )}\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChooseBank","import React, { useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport Button from \"../utils/Button\"\r\nimport Loading from \"../utils/Loading\"\r\nimport { reset } from \"../../reducers/choiceReducer\"\r\nimport { grantView } from \"../../reducers/userReducer\"\r\nimport { getAccounts } from \"../../reducers/userReducer\"\r\nimport ChooseAccount from \"./ChooseAccount\"\r\nimport ChooseBank from \"./ChooseBank\"\r\n\r\nconst Choose = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const user = useSelector(state => state.user)\r\n    useEffect(() => {\r\n        dispatch(getAccounts(user))\r\n    }, [])\r\n    const banksChoice = useSelector(state => state.choice.banks)\r\n    const stateId = useSelector(state => state.choice.accounts)\r\n\r\n    const handleConfirm = (event) => {\r\n        event.preventDefault()\r\n        const cb = () => history.push(\"/\")\r\n        dispatch(grantView(stateId, user.accountIds, cb))\r\n        dispatch(reset())\r\n    }\r\n    const accountsFilter = (accounts, currentAccount) => {\r\n        for(let i = 0; banksChoice.length > i; i++ ){\r\n            if(banksChoice[i] === currentAccount.bank_id){\r\n                accounts.push(currentAccount)\r\n            }\r\n        }\r\n        return accounts\r\n    }\r\n    const filteredAccounts = user.accounts ? user.accounts.reduce(accountsFilter, []): []\r\n    return(\r\n        <div>\r\n            {user.accounts ?\r\n                <ChooseBank/>\r\n                :\r\n                <Loading/>\r\n            }\r\n            {filteredAccounts[0] ?\r\n                <ChooseAccount filteredAccounts = {filteredAccounts} />\r\n                :\r\n                <div></div> }\r\n            <Button cb ={handleConfirm} text =\"Confirm\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Choose","import React from \"react\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nconst Verified = () => {\r\n    const history = useHistory()\r\n    const handleRedirect = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/login\")\r\n    }\r\n    return(\r\n        <section className=\"App h-screen w-full flex justify-center items-center bg-gray-700 \">\r\n            <div className=\"w-full max-w-md bg-gray-800\">\r\n                <p className = \"text-white bold md:text-center pb-4\">Step 4. Success</p>\r\n                <div className=\" bg-white shadow-md rounded px-8 py-8 pt-8\">\r\n                    <div className=\"px-4 pb-4\">\r\n                        <p className = \"text-black bold \">Your account has been verified please log in to continue</p>\r\n                    </div>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <button id =\"signup-button\" type=\"button\" onClick = {handleRedirect} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline \">Login</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Verified","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { setMessage } from \"../../reducers/messageReducer\"\r\nimport { verifySMS, reSendSMS } from \"../../reducers/signUpReducer\"\r\nimport Message from \"../Message\"\r\n\r\nconst SignUpSMSstep = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const messageCb = (message) => {dispatch(setMessage(message))}\r\n    const handleSMSconfirm = (event) => {\r\n        event.preventDefault()\r\n        const code = event.target.Code.value\r\n        const cb = () => history.push(\"/verified\")\r\n        dispatch(verifySMS(code, cb, messageCb))\r\n    }\r\n    const handleReSend = (event) => {\r\n        event.preventDefault()\r\n        dispatch(reSendSMS(messageCb))\r\n    }\r\n    const handleRedirect = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/changeNumber\")\r\n    }\r\n    return(\r\n        <section className=\"App h-screen w-full flex justify-center items-center bg-gray-700 \">\r\n            <div className=\"w-full max-w-md bg-gray-800\">\r\n                <Message/>\r\n                <p className = \"text-white bold md:text-center pb-4\">Step 3. SMS verification</p>\r\n                <form onSubmit ={handleSMSconfirm} className=\" bg-white shadow-md rounded px-8 py-8 pt-8\">\r\n                    <div className=\"px-4 pb-4\">\r\n                        <p className = \"text-black bold  \">Your email account has been verified</p>\r\n                        <p className = \"text-black bold  \">Please enter the code sent to your phone to continue</p>\r\n                    </div>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"text\" className=\"text-sm block font-bold pb-2\">CODE</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"Code\"\r\n                            id =\"code\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-blue-300 \"\r\n                        />\r\n                    </div>\r\n                    <button id =\"confirm-button\" type=\"submit\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-4\">Confirm</button>\r\n                    <button id =\"resend-button\" onClick={handleReSend} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-8\">Re-send SMS</button>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <p className = \"text-black bold  \">Want to use a different number ?</p>\r\n                    </div>\r\n                    <button id =\"changeNumber-button\" onClick={handleRedirect} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-4\">Change Number</button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SignUpSMSstep","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { setMessage } from \"../../reducers/messageReducer\"\r\nimport { checkEmailVerified } from \"../../reducers/signUpReducer\"\r\nimport { Redirect } from \"react-router\"\r\nimport Message from \"../Message\"\r\n\r\nconst SignUpEmailStep = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const signUpEmail = useSelector(state => state.signUpEmail)\r\n    const handleCheckVerified = (event) => {\r\n        event.preventDefault()\r\n        const cb = () => history.push(\"/signUpSMSstep\")\r\n        const messageCb = (message) => {dispatch(setMessage(message))}\r\n        dispatch(checkEmailVerified(cb, messageCb))\r\n    }\r\n    return(\r\n        <div>\r\n            {signUpEmail ?\r\n                <section className=\"App h-screen w-full flex justify-center items-center bg-gray-700 \">\r\n                    <div className=\"w-full max-w-md bg-gray-800\">\r\n                        <Message/>\r\n                        <p className = \"text-white bold md:text-center pb-4\">Step 2. Email Verification</p>\r\n                        <div className=\" bg-white shadow-md rounded px-8 py-8 pt-8\">\r\n                            <div className=\"px-4 pb-4\">\r\n                                <p className = \"text-black bold\">Please verify your email to continue the sign up process</p>\r\n                            </div>\r\n                            <div className=\"px-4 pb-4\">\r\n                                <button id =\"signup-button\" type=\"button\" onClick = {handleCheckVerified} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline \">I have verified my email</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                :\r\n                <Redirect to = \"/\"/>}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SignUpEmailStep","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { setMessage } from \"../../reducers/messageReducer\"\r\nimport { changeNumber } from \"../../reducers/signUpReducer\"\r\nimport Message from \"../Message\"\r\n\r\nconst ChangeNumber = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const messageCb = (message) => {dispatch(setMessage(message))}\r\n    const cb = () => history.push(\"/signUpSMSstep\")\r\n    const handleChangeNumber = (event) => {\r\n        event.preventDefault()\r\n        const number = event.target.Number.value\r\n        dispatch(changeNumber(number, cb, messageCb))\r\n    }\r\n    return(\r\n        <section className=\"App h-screen w-full flex justify-center items-center bg-gray-700 \">\r\n            <div className=\"w-full max-w-md bg-gray-800\">\r\n                <Message/>\r\n                <p className = \"text-white bold md:text-center pb-4\">Change your number</p>\r\n                <form onSubmit ={handleChangeNumber} className=\" bg-white shadow-md rounded px-8 py-8 pt-8\">\r\n                    <div className=\"px-4 pb-4\">\r\n                        <p className = \"text-black bold  \">Please enter your new number here</p>\r\n                        <p className = \"text-black bold  \">Make sure it starts with the country code <br/>(e.g +44)</p>\r\n                    </div>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"text\" className=\"text-sm block font-bold pb-2\">Number</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"Number\"\r\n                            id =\"number\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-blue-300 \"\r\n                        />\r\n                    </div>\r\n                    <button id =\"confirm-button\" type=\"submit\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-4\">Confirm</button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ChangeNumber","import React, { useEffect } from \"react\"\r\nimport {  useDispatch, useSelector } from \"react-redux\"\r\nimport NoMatch from \"./components/NoMatch\"\r\nimport Transaction from \"./components/Transaction\"\r\nimport Login from \"./components/users/Login\"\r\nimport Logout from \"./components/users/Logout\"\r\nimport SignUp from \"./components/users/SignUp\"\r\nimport Consent from \"./components/consents/Consent\"\r\nimport Accounts from \"./components/Accounts\"\r\nimport About from \"./components/About\"\r\nimport Message from \"./components/Message\"\r\nimport Home from \"./components/Home\"\r\nimport UnprotectedHome from \"./components/UnprotectedHome\"\r\nimport Choose from \"./components/consents/Choose\"\r\nimport Verified from \"./components/users/Verified\"\r\nimport SignUpSMSstep from \"./components/users/SignUpSMSstep\"\r\nimport SignUpEmailStep from \"./components/users/SignUpEmailStep\"\r\nimport ChangeNumber from \"./components/users/ChangeNumber\"\r\nimport { localLogin  } from \"./reducers/userReducer\"\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route, Link\r\n} from \"react-router-dom\"\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(localLogin())\r\n    }, [dispatch])\r\n    const user = useSelector(state => state.user)\r\n    const btnStyle = \"lg:inline-flex lg:w-auto w-full px-3 py-2 rounded text-gray-400 items-center justify-center hover:bg-gray-900 hover:text-white hover:shadow-lg \"\r\n    const navStyle = \"flex items-center bg-gray-800 p-3 flex-wrap\"\r\n    return (\r\n        <div className=\"App\">\r\n            {user === null ?\r\n                <Router>\r\n                    <Switch>\r\n                        <Route path =\"/login\">\r\n                            <nav className = {navStyle}>\r\n                                <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                                <Link to=\"/signup\"><span className={btnStyle}>Sign up</span></Link>\r\n                                <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                            </nav>\r\n                            <Login />\r\n                        </Route>\r\n                        <Route path =\"/signup\">\r\n                            <nav className = {navStyle}>\r\n                                <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                                <Link to=\"/login\"><span className={btnStyle}>Log in</span></Link>\r\n                                <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                            </nav>\r\n                            <SignUp />\r\n                        </Route>\r\n                        <Route path =\"/about\">\r\n                            <nav className = {navStyle}>\r\n                                <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                                <Link to=\"/login\"><span className={btnStyle}>Log in</span></Link>\r\n                                <Link to=\"/signup\"><span className={btnStyle}>Sign up</span></Link>\r\n                            </nav>\r\n                            <About />\r\n                        </Route>\r\n                        <Route path =\"/verified\">\r\n                            <nav className = {navStyle}>\r\n                                <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                                <Link to=\"/login\"><span className={btnStyle}>Log in</span></Link>\r\n                                <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                            </nav>\r\n                            <Verified />\r\n                        </Route>\r\n                        <Route exact path =\"/\">\r\n                            <nav className = {navStyle}>\r\n                                <Link to=\"/login\"><span className={btnStyle}>Login</span></Link>\r\n                                <Link to=\"/signup\"><span className={btnStyle}>Sign up</span></Link>\r\n                                <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                            </nav>\r\n                            <Message />\r\n                            <UnprotectedHome />\r\n                        </Route>\r\n                        <Route path = \"/signUpEmailStep\">\r\n                            <nav className = {navStyle}>\r\n                                <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                                <Link to=\"/login\"><span className={btnStyle}>Log in</span></Link>\r\n                                <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                            </nav>\r\n                            <SignUpEmailStep />\r\n                        </Route>\r\n                        <Route path = \"/signUpSMSstep\">\r\n                            <nav className = {navStyle}>\r\n                                <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                                <Link to=\"/login\"><span className={btnStyle}>Log in</span></Link>\r\n                                <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                            </nav>\r\n                            <SignUpSMSstep />\r\n                        </Route>\r\n                        <Route path = \"/changeNumber\">\r\n                            <nav className = {navStyle}>\r\n                                <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                                <Link to=\"/login\"><span className={btnStyle}>Log in</span></Link>\r\n                                <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                            </nav>\r\n                            <ChangeNumber />\r\n                        </Route>\r\n                        <Route path = \"*\">\r\n                            <nav className = {navStyle}>\r\n                                <Link to=\"/\"><div className={btnStyle}>Home</div></Link>\r\n                                <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                            </nav>\r\n                            <NoMatch />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n                :\r\n                <Router>\r\n                    <nav className = {navStyle}>\r\n                        <img className=\"w-7 h-7 md:w-10 md:h-10 mr-2 rounded-md overflow-hidden\" src=\"https://therminic2018.eu/wp-content/uploads/2018/07/dummy-avatar.jpg\" />\r\n                        <span className=\"lg:inline-flex lg:w-auto w-full px-3 py-2 rounded text-white items-center justify-center\">{user.name}</span>\r\n                        <Link to=\"/transactions\"><span className={btnStyle}>Transactions</span></Link>\r\n                        <Link to=\"/accounts\"><span className={btnStyle}>Accounts</span></Link>\r\n                        <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                        <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                        <div className=\"block w-px h-6 mx-3 bg-gray-400 dark:bg-gray-700\"></div>\r\n                        <span className={btnStyle}>\r\n                            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path  d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"></path>\r\n                            </svg>\r\n                            <Logout />\r\n                        </span>\r\n                    </nav>\r\n                    <Switch>\r\n                        <Route path =\"/transactions\">\r\n                            <Transaction />\r\n                        </Route>\r\n                        <Route path = \"/accounts\">\r\n                            <Accounts />\r\n                        </Route>\r\n                        <Route path = \"/about\">\r\n                            <About />\r\n                        </Route>\r\n                        <Route path = \"/consent\">\r\n                            <Consent/>\r\n                        </Route>\r\n                        <Route path = \"/choose\">\r\n                            <Choose/>\r\n                        </Route>\r\n                        <Route exact path =\"/\">\r\n                            <Home />\r\n                        </Route>\r\n                        <Route path =\"*\">\r\n                            <NoMatch />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport messageReducer from \"./reducers/messageReducer\"\r\nimport choiceReducer from \"./reducers/choiceReducer\"\r\nimport signUpReducer from \"./reducers/signUpReducer\"\r\n\r\n\r\nconst combinedReducer = combineReducers({\r\n    user: userReducer,\r\n    message: messageReducer,\r\n    choice: choiceReducer,\r\n    signUpEmail: signUpReducer\r\n})\r\nconst store = createStore(\r\n    combinedReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Provider } from \"react-redux\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport store from \"./store\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}