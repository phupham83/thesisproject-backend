{"version":3,"sources":["components/NoMatch.js","services/users.js","services/obp.js","reducers/userReducer.js","components/Transaction.js","reducers/messageReducer.js","components/Message.js","components/Login.js","components/Logout.js","components/SignUp.js","components/Consent.js","components/Accounts.js","App.js","store.js","reportWebVitals.js","index.js"],"names":["NoMatch","baseUrl","login","credentials","a","axios","post","response","data","localLogin","get","logOut","signup","respone","getConsent","window","location","href","getAccounts","getTransactions","userReducer","state","action","type","accounts","transactions","console","log","Transaction","dispatch","useDispatch","user","useSelector","useEffect","consent","obpService","history","useHistory","map","transaction","details","new_balance","amount","value","description","id","className","onClick","event","preventDefault","push","setMessage","message","setTimeout","messageReducer","Message","style","border","padding","borderWidth","display","Login","onSubmit","username","target","Username","password","Password","cb","messageCb","userService","name","Logout","logout","SignUp","Name","error","Consent","to","Accounts","account","bank_id","App","path","exact","combinedReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec222534.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst NoMatch = () => {\r\n    return(\r\n        <h3>404 Not Found</h3>\r\n    )\r\n}\r\n\r\nexport default NoMatch","import axios from \"axios\"\r\nconst baseUrl = \"/api/login\"\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nconst localLogin = async () => {\r\n    const response = await axios.get(baseUrl + \"/local_login\")\r\n    return response.data\r\n}\r\n\r\nconst logOut = async () => {\r\n    const response = await axios.get(baseUrl + \"/logout\")\r\n    return response.data\r\n}\r\n\r\nconst signup = async credentials => {\r\n    const respone = await axios.post(\"/api/users\", credentials)\r\n    return respone.data\r\n}\r\n\r\n\r\nexport default { login, signup, localLogin, logOut }","import axios from \"axios\"\r\nconst baseUrl = \"/api/obpApi\"\r\n\r\nconst getConsent = () => {\r\n    // await axios.get(\"/api/obpApi/connect\")\r\n    window.location.href = baseUrl + \"/connect\"\r\n}\r\n\r\nconst getAccounts = async () => {\r\n    const response = await axios.get(baseUrl + \"/getMyAccounts\")\r\n    return response.data\r\n}\r\n\r\nconst getTransactions = async () => {\r\n    const response = await axios.get(baseUrl + \"/getTransactions\")\r\n    return response.data\r\n}\r\n\r\nexport default { getConsent, getAccounts, getTransactions }","import userService from \"../services/users\"\r\nimport obpService from \"../services/obp\"\r\n\r\nconst userReducer = (state = null, action) => {\r\n    let newState\r\n    switch (action.type) {\r\n    case \"LOGIN\":\r\n        return { ... action.data, accounts:[], transactions:[] }\r\n    case \"LOCAL_LOGIN\":\r\n        if(action.data) {\r\n            return { ... action.data, accounts:[], transactions:[]  }\r\n        }else {\r\n            return action.data\r\n        }\r\n    case \"LOGOUT\":\r\n        return null\r\n    case \"SIGN_UP\":\r\n        console.log(action.data)\r\n        return state\r\n    case \"GET_CONSENT\":\r\n        console.log(action.data)\r\n        return state\r\n    case \"GET_ACCOUNTS\":\r\n        newState = { ...state, accounts: action.data.accounts }\r\n        return newState\r\n    case \"NO_ACCOUNTS\":\r\n        return state\r\n    case \"GET_TRANSACTIONS\":\r\n        newState = { ...state, transactions: action.data.transactions }\r\n        return newState\r\n    default:\r\n        console.log(\"\")\r\n    }\r\n    return state\r\n}\r\n\r\nexport const login = (username, password, cb, messageCb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login({\r\n                username, password,\r\n            })\r\n            dispatch ({\r\n                type: \"LOGIN\",\r\n                data: user,\r\n            })\r\n            cb()\r\n        } catch (exception) {\r\n            console.log(exception)\r\n            messageCb(\"Wrong username or password\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const localLogin = () => {\r\n    return ( async dispatch =>\r\n    {\r\n        const user = await userService.localLogin()\r\n        dispatch ({\r\n            type: \"LOCAL_LOGIN\",\r\n            data: user\r\n        })}\r\n    )\r\n}\r\n\r\nexport const logout = (cb) => {\r\n    return ( async dispatch =>\r\n    {\r\n        await userService.logOut()\r\n        dispatch ({\r\n            type: \"LOGOUT\"\r\n        })\r\n        cb()\r\n    }\r\n    )\r\n}\r\n\r\nexport const signup = (username, name, password,cb, messageCb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await userService.signup({\r\n                username, name, password,\r\n            })\r\n            dispatch({\r\n                type: \"SIGN_UP\",\r\n                data: response\r\n            })\r\n            messageCb(\"Sign up successful\")\r\n            cb()\r\n        } catch (e) {\r\n            console.log(e)\r\n            messageCb(e.response.data.error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getConsent = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await obpService.getConsent()\r\n            dispatch({\r\n                type: \"GET_CONSENT\",\r\n                data: response\r\n            })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAccounts = (user) => {\r\n    return async dispatch => {\r\n        if (user.consent){\r\n            try {\r\n                const response = await obpService.getAccounts()\r\n                dispatch({\r\n                    type: \"GET_ACCOUNTS\",\r\n                    data: response\r\n                })\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: \"NO_ACCOUNTS\"\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTransactions = (user) => {\r\n    return async dispatch => {\r\n        if(user.consent){\r\n            try {\r\n                const response = await obpService.getTransactions()\r\n                dispatch({\r\n                    type:\"GET_TRANSACTIONS\",\r\n                    data: response\r\n                })\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        }else {\r\n            dispatch({\r\n                type: \"NO_ACCOUNTS\"\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default userReducer","import React, { useEffect } from \"react\"\r\nimport { useDispatch,useSelector } from \"react-redux\"\r\nimport { getTransactions } from \"../reducers/userReducer\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nconst Transaction = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    useEffect(() => {\r\n        dispatch(getTransactions(user))\r\n    }, [dispatch])\r\n    const history = useHistory()\r\n    const handleAccountAuth = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/consent\")\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>Transactions</h1>\r\n            {user.consent ?\r\n                <div>\r\n                    <ul>\r\n                        {user.transactions.map(transaction =>\r\n                            <li key = {transaction.id}>\r\n                        Balance: {transaction.details.new_balance.amount} Transfer amount: {transaction.details.value.amount} Description: {transaction.details.description}\r\n                            </li>)}\r\n                    </ul>\r\n                </div>\r\n                :\r\n                <div className =\"addAccount\">\r\n                    <p>Please add an account to start</p>\r\n                    <button onClick ={handleAccountAuth}>Add account</button>\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Transaction","const messageReducer = (state = null, action) => {\r\n    switch (action.type){\r\n    case \"SET_MESSAGE\":\r\n        return action.data\r\n    default:\r\n        console.log(\"\")\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setMessage = (message) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_MESSAGE\",\r\n            data: message\r\n        })\r\n        setTimeout(() => dispatch({ type: \"SET_MESSAGE\", data: null }), 3000)\r\n    }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_MESSAGE\",\r\n            data: null\r\n        })\r\n    }\r\n}\r\n\r\nexport default messageReducer","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst Message = () => {\r\n    const message = useSelector(state => state.message)\r\n    const style = {\r\n        border: \"solid\",\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        display: message ? \"\" : \"none\"\r\n    }\r\n    return (\r\n        <div style={style}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { login } from \"../reducers/userReducer\"\r\nimport { useHistory } from \"react-router\"\r\nimport { setMessage } from \"../reducers/messageReducer\"\r\nimport Message from \"./Message\"\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleLogin = (event) => {\r\n        event.preventDefault()\r\n        const username = event.target.Username.value\r\n        const password = event.target.Password.value\r\n        const cb = () => history.push(\"/\")\r\n        const messageCb = (message) => {dispatch(setMessage(message))}\r\n        dispatch(login(username,password, cb, messageCb))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Message />\r\n            <h2>Log in to application</h2>\r\n            <form onSubmit={handleLogin}>\r\n                <div>\r\n      Username\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"Username\"\r\n                        id =\"username\"\r\n                    />\r\n                </div>\r\n                <div>\r\n      Password\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"Password\"\r\n                        id=\"password\"\r\n                    />\r\n                </div>\r\n                <button id =\"login-button\"type=\"submit\">Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { logout } from \"../reducers/userReducer\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nconst Logout = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleLogout = (event) => {\r\n        event.preventDefault()\r\n        const cb = () => history.push(\"/\")\r\n        dispatch(logout(cb))\r\n    }\r\n    return(\r\n        <button onClick ={handleLogout}>Log out</button>\r\n    )\r\n}\r\n\r\nexport default Logout","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { signup } from \"../reducers/userReducer\"\r\nimport { setMessage } from \"../reducers/messageReducer\"\r\nimport Message from \"./Message\"\r\n\r\nconst SignUp = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleSignup = (event) => {\r\n        event.preventDefault()\r\n        const username = event.target.Username.value\r\n        const password = event.target.Password.value\r\n        const name = event.target.Name.value\r\n        const cb = () => history.push(\"/\")\r\n        const messageCb = (message) => {dispatch(setMessage(message))}\r\n        dispatch(signup(username, name, password, cb, messageCb))\r\n    }\r\n    return (\r\n        <div>\r\n            <Message />\r\n            <h2>Sign up for the application</h2>\r\n            <form onSubmit ={handleSignup}>\r\n                <div>\r\n                    Username<input type=\"text\" name=\"Username\" id =\"username\"/>\r\n                </div>\r\n                <div>\r\n                    Name<input type=\"text\" name=\"Name\" id =\"name\"/>\r\n                </div>\r\n                <div>\r\n                    Password<input type=\"password\" name=\"Password\" id =\"password\"/>\r\n                </div>\r\n                <button id =\"signup-button\" type=\"submit\">Sign up</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { getConsent } from \"../reducers/userReducer\"\r\nimport { Redirect } from \"react-router\"\r\n\r\nconst Consent = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n\r\n    const handleConfirm =(event) => {\r\n        event.preventDefault()\r\n        dispatch(getConsent())\r\n    }\r\n    return(\r\n        <div>\r\n            {user ? <div>\r\n                <h1>Consent confirmation</h1>\r\n                <p>By accepting you are allowing your data to be accessed</p>\r\n                <button onClick ={handleConfirm}>Confirm</button>\r\n            </div> :\r\n                <Redirect to =\"/\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Consent","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {  getAccounts } from \"../reducers/userReducer\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nconst Accounts = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    useEffect(() => {\r\n        dispatch(getAccounts(user))\r\n    }, [])\r\n    const history = useHistory()\r\n    const handleAccountAuth = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/consent\")\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>Accounts</h1>\r\n            {user.consent ?\r\n                <div className = \"showAccount\">\r\n                    <ul>\r\n                        {user.accounts.map(account =>\r\n                            <li key = {account.id}>\r\n                                {account.bank_id}\r\n                            </li>)}\r\n                    </ul>\r\n                </div>\r\n                :\r\n                <div className =\"addAccount\">\r\n                    <p>Please add an account to start</p>\r\n                    <button onClick ={handleAccountAuth}>Add account</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Accounts","import React, { useEffect } from \"react\"\r\nimport {  useDispatch, useSelector } from \"react-redux\"\r\nimport NoMatch from \"./components/NoMatch\"\r\nimport Transaction from \"./components/Transaction\"\r\nimport Login from \"./components/Login\"\r\nimport Logout from \"./components/Logout\"\r\nimport SignUp from \"./components/SignUp\"\r\nimport Consent from \"./components/Consent\"\r\nimport Accounts from \"./components/Accounts\"\r\nimport Message from \"./components/Message\"\r\nimport { localLogin  } from \"./reducers/userReducer\"\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route, Link\r\n} from \"react-router-dom\"\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(localLogin())\r\n    }, [dispatch])\r\n\r\n    const user = useSelector(state => state.user)\r\n    const padding = {\r\n        padding: 5\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {user === null ?\r\n                <Router>\r\n                    <Switch>\r\n                        <Route path =\"/login\">\r\n                            <Link style={padding} to=\"/\">Home</Link>\r\n                            <Login />\r\n                        </Route>\r\n                        <Route path =\"/signup\">\r\n                            <Link style={padding} to=\"/\">Home</Link>\r\n                            <SignUp />\r\n                        </Route>\r\n                        <Route exact path =\"/\">\r\n                            <div>\r\n                                <Link style={padding} to=\"/login\">Login</Link>\r\n                                <Link style={padding} to=\"/signup\">Sign Up</Link>\r\n                            </div>\r\n                            <Message />\r\n                        </Route>\r\n                        <Route path = \"*\">\r\n                            <Link style={padding} to=\"/\">Home</Link>\r\n                            <NoMatch />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n                :\r\n                <Router>\r\n                    <div>\r\n                        <Link style={padding} to=\"/transactions\">Transactions</Link>\r\n                        <Link style={padding} to=\"/accounts\">Accounts</Link>\r\n                        <Link style={padding} to=\"/\">Home</Link>\r\n                        <p>{user.username} logged in <Logout /></p>\r\n                    </div>\r\n                    <Switch>\r\n                        <Route path =\"/transactions\">\r\n                            <Transaction />\r\n                        </Route>\r\n                        <Route path = \"/accounts\">\r\n                            <Accounts />\r\n                        </Route>\r\n                        <Route path = \"/consent\">\r\n                            <Consent/>\r\n                        </Route>\r\n                        <Route exact path =\"/\">\r\n                            <h1>Welcome to your budget planner</h1>\r\n                        </Route>\r\n                        <Route path =\"*\">\r\n                            <Link style={padding} to=\"/\">Home</Link>\r\n                            <NoMatch />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport messageReducer from \"./reducers/messageReducer\"\r\n\r\n\r\n\r\nconst combinedReducer = combineReducers({\r\n    user: userReducer,\r\n    message: messageReducer\r\n})\r\nconst store = createStore(\r\n    combinedReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Provider } from \"react-redux\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport store from \"./store\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}