{"version":3,"sources":["components/utils/Button.js","components/NoMatch.js","services/users.js","services/obp.js","services/banks.js","reducers/userReducer.js","components/utils/Loading.js","components/transactions/TransactionList.js","components/transactions/AllAccounts.js","components/transactions/SingleAccount.js","components/transactions/NoAccounts.js","reducers/filterReducer.js","components/utils/TimeFilter.js","components/Transaction.js","reducers/messageReducer.js","components/Message.js","components/users/Login.js","components/users/Logout.js","reducers/signUpReducer.js","components/users/SignUp.js","components/consents/Consent.js","components/Accounts.js","components/About.js","categories.js","components/Home.js","components/UnprotectedHome.js","reducers/choiceReducer.js","components/consents/ChooseAccount.js","components/consents/ChooseBank.js","components/consents/Choose.js","components/users/Verified.js","components/users/SignUpSMSstep.js","components/users/SignUpEmailStep.js","components/users/ChangeNumber.js","components/Footer.js","components/Overview.js","reducers/budgetChoicesReducer.js","components/utils/SetBudget.js","components/utils/UpdateBudget.js","App.js","store.js","reportWebVitals.js","index.js"],"names":["Button","cb","text","onClick","className","NoMatch","to","baseUrl","login","credentials","a","axios","post","response","data","localLogin","get","logOut","signup","respone","revoke","put","revokeSingle","account","addAccounts","accountIds","changeNumber","number","setBudget","budget","checkEmailVerified","verifySMS","code","reSendSMS","getAccounts","getTransactions","bankid","id","getSingleAccount","getBalance","getBank","getConsent","window","location","href","grantView","revokeView","createBank","bank","bank_id","user","dispatch","consent","transactionsPromises","map","obpService","singleAccount","transactions","bankService","bankDB","bankOBP","full_name","logo","bankResponse","Promise","all","results","newUser","accounts","type","console","log","userService","userReducer","state","action","Loading","fill","viewBox","xmlns","clipRule","d","fillRule","TransactionList","startingDate","transaction","details","completed","description","src","stroke","strokeLinecap","strokeLinejoin","strokeWidth","other_account","holder","name","value","amount","AllAccounts","totalBalance","timeFilter","sort","b","Date","filteredTransactions","time","dateNow","oneJan","getFullYear","numberOfDays","Math","floor","weekNow","ceil","getDay","filter","date","getMonth","getDate","weekThen","filterTransactions","balance","dates","newBalance","Number","newDate","new_balance","toFixed","balanceList","labels","reverse","datasets","label","lineTension","backgroundColor","borderColor","length","style","height","width","options","scales","yAxes","grid","display","ticks","beginAtZero","xAxes","autoSkip","autoSkipPadding","SingleAccounts","NoAccounts","history","useHistory","event","preventDefault","push","filterReducer","TimeFilter","useDispatch","useSelector","onChange","target","setFilter","defaultValue","Transaction","useEffect","allTransactionsArrays","allBalancesArrays","allTransactions","reduce","initial","nextValue","parseFloat","path","SingleAccount","exact","setMessage","message","setTimeout","messageReducer","Message","Login","inputStyle","onSubmit","email","Email","password","Password","messageCb","error","htmlFor","placeholder","Logout","logout","signUpReducer","SignUp","Name","Consent","Accounts","handleRevokeAccount","revokeConsentSingle","i","About","setCategories","sumReducer","allExpensesArrays","allExpensesBillsArrays","allExpensesGroceriesArrays","allExpensesFoodDrinkArrays","allExpensesTransportArrays","allExpensesBills","expense","allExpensesGroceries","allExpensesFoodDrink","allExpensesTransport","allExpenses","totalExpenses","totalExpensesBills","totalExpensesGroceries","totalExpensesFoodDrink","totalExpensesTransport","generalExpenses","allIncomesArrays","allIncomesIncomeArrays","allIncomes","income","allIncomesIncome","totalIncomesIncome","totalIncomes","bills","foodDrink","transport","groceries","generalExpense","generalIncome","filteredLength","Budget","daysInMonths","months","handleBudgetRedirect","categoriesTotal","totalBudget","indexAxis","stacked","UnprotectedHome","choiceReducer","banks","ChooseAccount","filteredAccounts","handleAccountChoice","checked","setAccount","removeAccount","ChooseBank","handleBankChoice","setBank","removeBank","Choose","e","accountPromises","banksChoice","choice","stateId","currentAccount","idState","viewPromises","Verified","SignUpSMSstep","Code","SMSverified","sent","SignUpEmailStep","signUpEmail","verified","ChangeNumber","numberChanged","Footer","Home","hasBalance","dataExpenses","borderWidth","borderRadius","hoverOffset","spacing","dataIncomes","plugins","legend","category","setBudgetChoice","budgetChoicesReducer","SetBudget","budgetChoices","handleSetBudgetChoice","min","max","String","App","btnStyle","navStyle","Overview","UpdateBudget","combinedReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4496f518.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Button = ({ cb, text }) => {\r\n    return(\r\n        <button onClick ={cb} className =\"px-4 py-3 bg-gray-200 text-gray-500 text-xs font-semibold rounded hover:bg-gray-600 hover:text-white\">{text}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from \"react\"\r\nimport Button from \"./utils/Button\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst NoMatch = () => {\r\n    return(\r\n        <div className=\"h-screen w-screen bg-gray-100 flex items-center\">\r\n            <div className=\"container flex flex-col md:flex-row items-center justify-center px-5 text-gray-700\">\r\n                <div className=\"max-w-md\">\r\n                    <div className=\"text-5xl font-dark font-bold\">404</div>\r\n                    <h2>Sorry we couldn`t find this page. </h2>\r\n                    <p>But dont worry, you can find plenty of other things on our homepage.</p>\r\n                    <Link to =\"/\"><Button text = \"Back to homepage\"/></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoMatch","import axios from \"axios\"\r\nconst baseUrl = \"/api/login\"\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nconst localLogin = async () => {\r\n    const response = await axios.get(baseUrl + \"/local_login\")\r\n    return response.data\r\n}\r\n\r\nconst logOut = async () => {\r\n    const response = await axios.get(baseUrl + \"/logout\")\r\n    return response.data\r\n}\r\n\r\nconst signup = async credentials => {\r\n    const respone = await axios.post(\"/api/users\", credentials)\r\n    return respone.data\r\n}\r\n\r\nconst revoke = async () => {\r\n    const response = await axios.put(\"/api/users/revoke\")\r\n    return response.data\r\n}\r\n\r\nconst revokeSingle = async (account) => {\r\n    const response = await axios.put(\"/api/users/revokeSingle\", account)\r\n    return response.data\r\n}\r\n\r\nconst addAccounts = async accountIds => {\r\n    const response = await axios.put(\"/api/users/addAccounts\", accountIds)\r\n    return response.data\r\n}\r\n\r\nconst changeNumber = async number => {\r\n    const response = await axios.put(\"/api/users/changeNumber\", number)\r\n    return response.data\r\n}\r\n\r\nconst setBudget = async budget => {\r\n    const response = await axios.put(\"/api/users/setBudget\", budget)\r\n    return response.data\r\n}\r\n\r\nconst checkEmailVerified = async () => {\r\n    const response = await axios.get(\"/api/users/checkEmailVerified\" )\r\n    return response.data\r\n}\r\n\r\nconst verifySMS = async code => {\r\n    const response = await axios.get(\"/api/users/verifySMS/\" + code)\r\n    return response.data\r\n}\r\n\r\nconst reSendSMS = async () => {\r\n    const response = await axios.get(\"/api/users/reSendSMS\")\r\n    return response.data\r\n}\r\n\r\nexport default { login, signup, localLogin, logOut, revoke, addAccounts,revokeSingle, checkEmailVerified, verifySMS,reSendSMS, changeNumber, setBudget }","import axios from \"axios\"\r\nconst baseUrl = \"/api/obpApi\"\r\n\r\nconst getConsent = () => {\r\n    // await axios.get(\"/api/obpApi/connect\")\r\n    window.location.href = baseUrl + \"/connect\"\r\n}\r\n\r\nconst getAccounts = async () => {\r\n    const response = await axios.get(baseUrl + \"/getMyAccounts\")\r\n    return response.data\r\n}\r\n\r\nconst getTransactions = async (bankid, id) => {\r\n    const response = await axios.get(baseUrl + \"/getTransactions/\" + bankid + \"/\" + id)\r\n    return response.data\r\n}\r\n\r\nconst getSingleAccount = async (bankid, id) => {\r\n    const response = await axios.get(baseUrl + \"/getAccount/\" + bankid + \"/\" + id)\r\n    return response.data\r\n}\r\n\r\nconst getBalance = async (bankid) => {\r\n    const response = await axios.get(baseUrl + \"/getBalance/\" + bankid)\r\n    return response.data\r\n}\r\n\r\nconst getBank = async (bankid) => {\r\n    const response = await axios.get(baseUrl + \"/getBank/\" + bankid)\r\n    return response.data\r\n}\r\n\r\nconst grantView = async id => {\r\n    const response = await axios.post(baseUrl + \"/grantView\", id)\r\n    return response.data\r\n}\r\n\r\nconst revokeView = async id => {\r\n    const response = await axios.post(baseUrl + \"/revokeView\", id)\r\n    return response.data\r\n}\r\n\r\nexport default { getConsent, getAccounts, getTransactions, getBalance, grantView, getSingleAccount, revokeView, getBank }","import axios from \"axios\"\r\nconst baseUrl = \"/api/banks\"\r\n\r\nconst createBank = async bank => {\r\n    const response = await axios.post(baseUrl, bank)\r\n    return response.data\r\n}\r\n\r\nconst getBank = async bank_id => {\r\n    const response = await axios.get(baseUrl + \"/\" +bank_id)\r\n    return response.data\r\n}\r\n\r\nexport default { createBank, getBank }","import userService from \"../services/users\"\r\nimport obpService from \"../services/obp\"\r\nimport bankService from \"../services/banks\"\r\n\r\nconst userReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n    case \"LOGIN\":\r\n        return action.data\r\n    case \"LOCAL_LOGIN\":\r\n        if(action.data) {\r\n            return action.data\r\n        }else {\r\n            return action.data\r\n        }\r\n    case \"LOGOUT\":\r\n        return null\r\n    case \"GET_CONSENT\":\r\n        return state\r\n    case \"GRANT_VIEW\":\r\n        return { ...state, accountIds: action.data[0], consent: action.data[1] }\r\n    case \"REVOKE_CONSENT_SINGLE\":\r\n        return action.data\r\n    case \"SET_BUDGET\":\r\n        return { ...state, budget: action.data }\r\n    case \"GET_ACCOUNTS\":\r\n        return action.data\r\n    case \"NO_ACCOUNTS\":\r\n        return state\r\n    case \"GET_TRANSACTIONS\":\r\n        return action.data\r\n    case \"GET_BALANCE\":\r\n        return action.data\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const login = (email, password, cb, messageCb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login({\r\n                email, password,\r\n            })\r\n            dispatch ({\r\n                type: \"LOGIN\",\r\n                data: user,\r\n            })\r\n            cb()\r\n        } catch (exception) {\r\n            if(exception.response.data.error === \"User has not verified their email\"){\r\n                messageCb(exception.response.data.error)\r\n            }else if(exception.response.data.error === \"Wrong password\"){\r\n                messageCb(exception.response.data.error)\r\n            }else if(exception.response.data.error === \"User has not verified their phone\"){\r\n                messageCb(exception.response.data.error)\r\n            }else{\r\n                console.log(exception)\r\n                messageCb(\"Wrong user\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const localLogin = () => {\r\n    return ( async dispatch =>\r\n    {\r\n        const user = await userService.localLogin()\r\n        dispatch ({\r\n            type: \"LOCAL_LOGIN\",\r\n            data: user\r\n        })}\r\n    )\r\n}\r\n\r\nexport const logout = (cb) => {\r\n    return ( async dispatch =>\r\n    {\r\n        await userService.logOut()\r\n        dispatch ({\r\n            type: \"LOGOUT\"\r\n        })\r\n        cb()\r\n    }\r\n    )\r\n}\r\n\r\nexport const getConsent = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await obpService.getConsent()\r\n            dispatch({\r\n                type: \"GET_CONSENT\",\r\n                data: response\r\n            })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAccounts = (user) => {\r\n    return async dispatch => {\r\n        if (user.consent){\r\n            if(user.accounts){\r\n                try {\r\n                    dispatch({\r\n                        type: \"GET_ACCOUNTS\",\r\n                        data: { ...user }\r\n                    })\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n            }else{\r\n                try {\r\n                    const response = await obpService.getAccounts()\r\n                    const accountPromises = response.accounts.map(async account => {\r\n                        let bank\r\n                        const bankDB = await bankService.getBank(account.bank_id)\r\n                        if(bankDB){\r\n                            bank = bankDB\r\n                        }else{\r\n                            const bankOBP = await obpService.getBank(account.bank_id)\r\n                            const bankResponse = await bankService.createBank({ bank_id: bankOBP.id, full_name: bankOBP.full_name, logo: bankOBP.logo })\r\n                            bank = bankResponse\r\n                        }\r\n                        return(\r\n                            { ...account, bank:bank }\r\n                        )\r\n                    })\r\n                    const accounts = await Promise.all(accountPromises)\r\n                    dispatch({\r\n                        type: \"GET_ACCOUNTS\",\r\n                        data: { ...user, accounts: accounts }\r\n                    })\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n            }}else {\r\n            dispatch({\r\n                type: \"NO_ACCOUNTS\"\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTransactions = (user) => {\r\n    return async dispatch => {\r\n        if(user){\r\n            if(user.consent){\r\n                try {\r\n                    const transactionsPromises = user.accountIds.map(async (account) => {\r\n                        const singleAccount = await obpService.getSingleAccount(account.bank, account.account)\r\n                        const transactions = await obpService.getTransactions(account.bank, account.account)\r\n                        let bank\r\n                        const bankDB = await bankService.getBank(account.bank)\r\n                        if(bankDB){\r\n                            bank = bankDB\r\n                        }else{\r\n                            const bankOBP = await obpService.getBank(account.bank)\r\n                            const bankResponse = await bankService.createBank({ bank_id: bankOBP.id, full_name: bankOBP.full_name, logo: bankOBP.logo })\r\n                            bank = bankResponse\r\n                        }\r\n\r\n                        return(\r\n                            { ...singleAccount, transactions: transactions.transactions, bank:bank }\r\n                        )\r\n                    })\r\n                    const results = await Promise.all(transactionsPromises)\r\n                    const newUser = { ...user, accounts: results }\r\n                    dispatch({\r\n                        type:\"GET_TRANSACTIONS\",\r\n                        data: newUser\r\n                    })\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n            }else {\r\n                dispatch({\r\n                    type: \"NO_ACCOUNTS\"\r\n                })\r\n            }\r\n        }else {\r\n            dispatch({\r\n                type: \"NO_ACCOUNTS\"\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const grantView = (idState, accountIds, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await userService.addAccounts([...accountIds, ...idState])\r\n            const viewPromises = idState.map(async id => await obpService.grantView(id))\r\n            await Promise.all(viewPromises)\r\n            dispatch({\r\n                type: \"GRANT_VIEW\",\r\n                data: [[...accountIds, ...idState], response.consent]\r\n            })\r\n            cb()\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const revokeConsentSingle = (user, account, bank) => {\r\n    return async dispatch => {\r\n        try {\r\n            await obpService.revokeView({ account:account, bank:bank })\r\n            const response = await userService.revokeSingle({ account: account })\r\n            dispatch({\r\n                type: \"REVOKE_CONSENT_SINGLE\",\r\n                data: { ...user, accountIds: response.accountIds, consent: response.consent }\r\n            })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const setBudget = (budget, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await userService.setBudget(budget)\r\n            dispatch({\r\n                type: \"SET_BUDGET\",\r\n                data: response.budget\r\n            })\r\n            cb()\r\n        } catch (e){\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport default userReducer","import React from \"react\"\r\n\r\nconst Loading = () => {\r\n    return(\r\n        <div className=\"flex items-center justify-center w-full h-screen\">\r\n            <div className=\"flex justify-center items-center space-x-1 text-sm text-gray-700 \">\r\n\r\n                <svg fill='none' className=\"w-12 h-12 animate-spin\" viewBox=\"0 0 32 32\" xmlns='http://www.w3.org/2000/svg'>\r\n                    <path clipRule='evenodd'\r\n                        d='M15.165 8.53a.5.5 0 01-.404.58A7 7 0 1023 16a.5.5 0 011 0 8 8 0 11-9.416-7.874.5.5 0 01.58.404z'\r\n                        fill='currentColor' fillRule='evenodd' />\r\n                </svg>\r\n\r\n\r\n                <div className =\"text-3xl\">Loading ...</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import React from \"react\"\r\n\r\nconst TransactionList = ({ transactions }) => {\r\n    let startingDate = null\r\n    return(\r\n        <div className = \"bg-white shadow-xl rounded-lg \">\r\n            <ul className=\"divide-y divide-gray-300\">\r\n                {transactions.map((transaction) => {\r\n                    if(transaction.details.completed !== startingDate){\r\n                        startingDate = transaction.details.completed\r\n                    }else{\r\n                        transaction.details.completed = null\r\n                    }\r\n                    return(\r\n                        <div key = {transaction.id}>\r\n                            {transaction.details.completed ? <h2 className=\"bg-gray-100 p-2 \">{transaction.details.completed}</h2> : true}\r\n                            <li className=\"flex p-4 hover:bg-gray-50 cursor-pointer justify-between\">\r\n                                {transaction.details.description === \"Groceries\" ?\r\n                                    <span className =\"flex-1\" >\r\n                                        <span>\r\n                                            <img className=\"h-9 w-9 rounded-md overflow-hidden inline-block object-fill\" src=\"https://static.wixstatic.com/media/e6c22f_099d12f4992f4e8a918666753eb4cc2b~mv2.png/v1/fill/w_280,h_280,al_c,q_90/file.jpg\" />\r\n                                        </span>\r\n                                        <span className=\"ml-2\">\r\n                                            <b>{\"TESCO STORES\"}</b>\r\n                                        </span>\r\n                                    </span>\r\n                                    :\r\n                                    transaction.details.description === \"Transport\" ?\r\n                                        <span className =\"flex-1\" >\r\n                                            <span>\r\n                                                <img className=\"h-9 w-9 rounded-md overflow-hidden inline-block object-fill\" src=\"https://bookazi.com/wp-content/uploads/2020/07/pco-license.png\" />\r\n                                            </span>\r\n                                            <span className=\"ml-2\">\r\n                                                <b>{\"TFL TRAVEL\"}</b>\r\n                                            </span>\r\n                                        </span>\r\n                                        :\r\n                                        transaction.details.description === \"Food & Drink\" ?\r\n                                            <span className =\"flex-1\" >\r\n                                                <span>\r\n                                                    <img className=\"h-9 w-9 rounded-md overflow-hidden inline-block object-fill\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/07/Just_eat_%28allo_resto%29_logo.png\" />\r\n                                                </span>\r\n                                                <span className=\"ml-2\">\r\n                                                    <b>{\"Just Eat\"}</b>\r\n                                                </span>\r\n                                            </span>\r\n                                            :\r\n                                            transaction.details.description === \"Bills\" ?\r\n                                                <span className =\"flex-1\" >\r\n                                                    <span>\r\n                                                        <img className=\"h-9 w-9 rounded-md overflow-hidden inline-block object-fill\" src=\"https://resource.esriuk.com/wp-content/uploads/2019/02/severn_trent_water_logo.png\" />\r\n                                                    </span>\r\n                                                    <span className=\"ml-2\">\r\n                                                        <b>{\"Seven Trent Water\"}</b>\r\n                                                    </span>\r\n                                                </span>\r\n                                                :\r\n                                                transaction.details.description === \"Income\" ?\r\n                                                    <span className =\"flex-1\" >\r\n                                                        <span>\r\n                                                            <img className=\"h-9 w-9 rounded-md overflow-hidden inline-block object-fill\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/EY_logo_2019.svg/768px-EY_logo_2019.svg.png\" />\r\n                                                        </span>\r\n                                                        <span className=\"ml-2\">\r\n                                                            <b>{\"EY\"}</b>\r\n                                                        </span>\r\n                                                    </span>\r\n                                                    :\r\n                                                    <span className =\"flex-1\" >\r\n                                                        <span className =\"bg-blue-100 p-1.5 rounded\">\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 inline-block text-blue-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\" />\r\n                                                            </svg>\r\n                                                        </span>\r\n                                                        <span className=\"ml-2\">\r\n                                                            <b>{transaction.other_account.holder.name !== \"\" ? transaction.other_account.holder.name: \"Account Holder\" }</b>\r\n                                                        </span>\r\n                                                    </span>\r\n                                }\r\n                                <span className =\"flex-1\"  >{transaction.details.description}</span>\r\n                                <span className=\"flex-1\"><span className ={transaction.details.value.amount < 0 ? \"float-right\" : \" float-right bg-green-100 text-green-600 rounded p-1\"}><b>{transaction.details.value.amount > 0 ? \"+\" : \"-\"}€{transaction.details.value.amount > 0 ? transaction.details.value.amount : -transaction.details.value.amount }</b> </span></span>\r\n                            </li>\r\n                        </div>\r\n                    )})}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import React from \"react\"\r\nimport Loading from \"../utils/Loading\"\r\nimport TransactionList from \"./TransactionList\"\r\nimport { Line } from \"react-chartjs-2\"\r\n\r\nconst AllAccounts = ({ transactions , totalBalance, timeFilter }) => {\r\n    if(transactions[0]){\r\n        transactions.sort((a,b) => {\r\n            return new Date(b.details.completed) - new Date(a.details.completed)\r\n        })\r\n        const filterTransactions = (transactions, time) => {\r\n            const dateNow = new Date()\r\n            const oneJan = new Date(dateNow.getFullYear(),0,1)\r\n            const numberOfDays = Math.floor((dateNow - oneJan) / (24 * 60 * 60 * 1000))\r\n            const weekNow = Math.ceil(( dateNow.getDay() + 1 + numberOfDays) / 7)\r\n            if(time === \"Today\"){\r\n                return(transactions.filter(transaction => {\r\n                    const date = new Date(transaction.details.completed)\r\n                    return(\r\n                        date.getFullYear() === dateNow.getFullYear() && date.getMonth() === dateNow.getMonth() && date.getDate() === dateNow.getDate()\r\n                    )\r\n                }))\r\n            }else if(time === \"This week\"){\r\n                return(transactions.filter(transaction => {\r\n                    const date = new Date(transaction.details.completed)\r\n                    let weekThen\r\n                    const oneJan = new Date(date.getFullYear(),0,1)\r\n                    const numberOfDays = Math.floor((date - oneJan) / (24 * 60 * 60 * 1000))\r\n                    weekThen = Math.ceil(( date.getDay() + 1 + numberOfDays) / 7)\r\n                    return(date.getFullYear() === dateNow.getFullYear() && weekNow === weekThen)\r\n                }))\r\n            }else if(time === \"Last week\"){\r\n                return(transactions.filter(transaction => {\r\n                    const date = new Date(transaction.details.completed)\r\n                    let weekThen\r\n                    const oneJan = new Date(date.getFullYear(),0,1)\r\n                    const numberOfDays = Math.floor((date - oneJan) / (24 * 60 * 60 * 1000))\r\n                    weekThen = Math.ceil(( date.getDay() + 1 + numberOfDays) / 7)\r\n                    return(date.getFullYear() === dateNow.getFullYear() && weekNow === weekThen -1)\r\n                }))\r\n            }else if(time === \"This month\"){\r\n                return(transactions.filter(transaction => {\r\n                    const date = new Date(transaction.details.completed)\r\n                    return(\r\n                        date.getFullYear() === dateNow.getFullYear() && date.getMonth() === dateNow.getMonth()\r\n                    )\r\n                }))\r\n            }else if(time === \"Last month\"){\r\n                return(transactions.filter(transaction => {\r\n                    const date = new Date(transaction.details.completed)\r\n                    return(\r\n                        date.getFullYear() === dateNow.getFullYear() && date.getMonth() === (dateNow.getMonth() - 1)\r\n                    )\r\n                }))\r\n            }else if(time === \"This year\"){\r\n                return(transactions.filter(transaction => {\r\n                    const date = new Date(transaction.details.completed)\r\n                    return(\r\n                        date.getFullYear() === dateNow.getFullYear()\r\n                    )\r\n                }))\r\n            }else if(time === \"Last year\"){\r\n                return(transactions.filter(transaction => {\r\n                    const date = new Date(transaction.details.completed)\r\n                    return(\r\n                        date.getFullYear() === (dateNow.getFullYear() - 1)\r\n                    )\r\n                }))\r\n            }else if(time === \"All\"){\r\n                return transactions\r\n            }\r\n        }\r\n\r\n        let filteredTransactions = filterTransactions(transactions, timeFilter)\r\n\r\n        let balance = totalBalance\r\n        filteredTransactions = filteredTransactions.map(transaction => {\r\n            const newBalance = balance\r\n            balance -= Number(transaction.details.value.amount)\r\n            const date = new Date(transaction.details.completed)\r\n            const newDate =  date.getFullYear()+\"-\" + (date.getMonth()+1) + \"-\"+date.getDate()\r\n            return { ...transaction, details: { ...transaction.details, completed: newDate , new_balance: { ...transaction.details.new_balance, amount: newBalance.toFixed(2) } } }\r\n        })\r\n        const dates = filteredTransactions.map(transaction => transaction.details.completed)\r\n        const balanceList = filteredTransactions.map(transaction => transaction.details.new_balance.amount)\r\n        const data ={\r\n            labels : dates.reverse(),\r\n            datasets: [{\r\n                label: \"Balance (EUR)\",\r\n                data: balanceList.reverse(),\r\n                fill: false,\r\n                lineTension: 0.5,\r\n                backgroundColor: \"rgb(255, 99, 132)\",\r\n                borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            }]\r\n        }\r\n        const options = {\r\n            scales: {\r\n                yAxes: {\r\n                    grid: { display: true, },\r\n                    ticks: { beginAtZero: true } },\r\n                xAxes: {\r\n                    grid: { display: false, },\r\n                    ticks: {\r\n                        display: true,\r\n                        autoSkip: true,\r\n                        autoSkipPadding: 50,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(filteredTransactions.length !== 0){\r\n            return(\r\n                <div >\r\n                    <h3>{`Balance: €${totalBalance.toFixed(2)}`}</h3>\r\n                    <div style ={{ height: \"500px\", width: \"1000px\" } } className=\"mb-4\">\r\n                        <Line data={data} options={options} />\r\n                    </div>\r\n                    <hr className =\"mb-8 mt-8\"/>\r\n                    <TransactionList transactions = {filteredTransactions}/>\r\n                </div>\r\n            )\r\n        }else {\r\n            return (\r\n                <div>\r\n                    <h3>{`Balance: €${totalBalance.toFixed(2)}`}</h3>\r\n                    {`No transactions ${timeFilter}`}\r\n                </div>\r\n            )\r\n        }\r\n    }else if(totalBalance){\r\n        return (\r\n            <div>\r\n                <h3>{`Balance: €${totalBalance.toFixed(2)}`}</h3>\r\n                No recent transactions\r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n        <Loading />\r\n    )\r\n}\r\n\r\nexport default AllAccounts","import React from \"react\"\r\nimport TransactionList from \"./TransactionList\"\r\nimport { Line } from \"react-chartjs-2\"\r\n\r\nconst SingleAccounts = ({ transactions, balance, timeFilter }) => {\r\n    if(transactions[0]){\r\n        const filterTransactions = (transactions, time) => {\r\n            const dateNow = new Date()\r\n            const oneJan = new Date(dateNow.getFullYear(),0,1)\r\n            const numberOfDays = Math.floor((dateNow - oneJan) / (24 * 60 * 60 * 1000))\r\n            const weekNow = Math.ceil(( dateNow.getDay() + 1 + numberOfDays) / 7)\r\n            if(time === \"Today\"){\r\n                return(transactions.filter(transaction => {\r\n                    const date = new Date(transaction.details.completed)\r\n                    return(\r\n                        date.getFullYear() === dateNow.getFullYear() && date.getMonth() === dateNow.getMonth() && date.getDate() === dateNow.getDate()\r\n                    )\r\n                }))\r\n            }else if(time === \"This week\"){\r\n                return(transactions.filter(transaction => {\r\n                    const date = new Date(transaction.details.completed)\r\n                    let weekThen\r\n                    const oneJan = new Date(date.getFullYear(),0,1)\r\n                    const numberOfDays = Math.floor((date - oneJan) / (24 * 60 * 60 * 1000))\r\n                    weekThen = Math.ceil(( date.getDay() + 1 + numberOfDays) / 7)\r\n                    return(date.getFullYear() === dateNow.getFullYear() && weekNow === weekThen)\r\n                }))\r\n            }else if(time === \"Last week\"){\r\n                return(transactions.filter(transaction => {\r\n                    const date = new Date(transaction.details.completed)\r\n                    let weekThen\r\n                    const oneJan = new Date(date.getFullYear(),0,1)\r\n                    const numberOfDays = Math.floor((date - oneJan) / (24 * 60 * 60 * 1000))\r\n                    weekThen = Math.ceil(( date.getDay() + 1 + numberOfDays) / 7)\r\n                    return(date.getFullYear() === dateNow.getFullYear() && weekNow  === weekThen -1)\r\n                }))\r\n            }else if(time === \"This month\"){\r\n                return(transactions.filter(transaction => {\r\n                    const date = new Date(transaction.details.completed)\r\n                    return(\r\n                        date.getFullYear() === dateNow.getFullYear() && date.getMonth() === dateNow.getMonth()\r\n                    )\r\n                }))\r\n            }else if(time === \"Last month\"){\r\n                return(transactions.filter(transaction => {\r\n                    const date = new Date(transaction.details.completed)\r\n                    return(\r\n                        date.getFullYear() === dateNow.getFullYear() && date.getMonth() === (dateNow.getMonth() -1)\r\n                    )\r\n                }))\r\n            }else if(time === \"This year\"){\r\n                return(transactions.filter(transaction => {\r\n                    const date = new Date(transaction.details.completed)\r\n                    return(\r\n                        date.getFullYear() === dateNow.getFullYear()\r\n                    )\r\n                }))\r\n            }else if(time === \"Last year\"){\r\n                return(transactions.filter(transaction => {\r\n                    const date = new Date(transaction.details.completed)\r\n                    return(\r\n                        date.getFullYear() === (dateNow.getFullYear() - 1)\r\n                    )\r\n                }))\r\n            }else if(time === \"All\"){\r\n                return transactions\r\n            }\r\n        }\r\n        let filteredTransactions = filterTransactions(transactions, timeFilter)\r\n        filteredTransactions = filteredTransactions.map(transaction => {\r\n            const date = new Date(transaction.details.completed)\r\n            const newDate =  date.getFullYear()+\"-\" + (date.getMonth()+1) + \"-\"+date.getDate()\r\n            return { ...transaction, details: { ...transaction.details, completed: newDate } }\r\n        })\r\n        const dates = filteredTransactions.map(transaction => transaction.details.completed)\r\n        const balanceList = filteredTransactions.map(transaction => transaction.details.new_balance.amount)\r\n        const data ={\r\n            labels : dates.reverse(),\r\n            datasets: [{\r\n                label: \"Balance (EUR)\",\r\n                data: balanceList.reverse(),\r\n                fill: false,\r\n                lineTension: 0.5,\r\n                backgroundColor: \"rgb(255, 99, 132)\",\r\n                borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            }]\r\n        }\r\n        const options = {\r\n            scales: {\r\n                yAxes: {\r\n                    grid: { display: true, },\r\n                    ticks: { beginAtZero: true } },\r\n                xAxes: {\r\n                    grid: { display: false, },\r\n                    ticks: {\r\n                        display: true,\r\n                        autoSkip: true,\r\n                        autoSkipPadding: 50,\r\n                    }\r\n                } },\r\n        }\r\n        if(filteredTransactions.length !== 0){\r\n            return(\r\n                <div >\r\n                    <h3>{`Balance: €${balance.amount}`}</h3>\r\n                    <div style ={{ height: \"500px\", width: \"1000px\" }} className=\"mb-4\">\r\n                        <Line data={data} options={options} />\r\n                    </div>\r\n                    <hr className =\"mb-8 mt-8\"/>\r\n                    <TransactionList transactions = {filteredTransactions}/>\r\n                </div>\r\n            )\r\n        }else {\r\n            return (\r\n                <div>\r\n                    <h3>{`Balance: €${balance.amount}`}</h3>\r\n                    {`No transactions ${timeFilter}`}\r\n                </div>\r\n            )\r\n        }\r\n    }else if(balance){\r\n        return (\r\n            <div>\r\n                <h3>{`Balance: €${balance.amount}`}</h3>\r\n                No recent transactions\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingleAccounts","import React from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport Button from \"../utils/Button\"\r\n\r\nconst NoAccounts = () => {\r\n    const history = useHistory()\r\n    const handleAccountAuth = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/consent\")\r\n    }\r\n    return(\r\n        <div className =\"addAccount\">\r\n            <h3>Please add an account to start</h3>\r\n            <Button cb ={handleAccountAuth} text =\"Add Account\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoAccounts","const filterReducer = (state = \"All\", action) => {\r\n    switch(action.type){\r\n    case \"SET_FILTER\":\r\n        return action.data\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const setFilter = (timeFilter) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_FILTER\",\r\n            data: timeFilter\r\n        })\r\n    }\r\n}\r\n\r\nexport default filterReducer","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setFilter } from \"../../reducers/filterReducer\"\r\nconst TimeFilter = () => {\r\n    const dispatch = useDispatch()\r\n    const timeFilter = useSelector(state => state.timeFilter)\r\n    const changeFilter = (event) => {\r\n        const time = event.target.value\r\n        dispatch(setFilter(time))\r\n    }\r\n\r\n    return(\r\n        <select name=\"time\" id=\"time\" onChange ={changeFilter} defaultValue={timeFilter} className=\"rounded shadow-md h-15 w-30\">\r\n            <option value=\"Today\">Today</option>\r\n            <option value=\"This week\">This week</option>\r\n            <option value=\"Last week\">Last week</option>\r\n            <option value=\"This month\">This month</option>\r\n            <option value=\"Last month\">Last month</option>\r\n            <option value=\"This year\">This year</option>\r\n            <option value=\"Last year\">Last year</option>\r\n            <option value=\"All\">All</option>\r\n        </select>\r\n\r\n    )\r\n}\r\n\r\nexport default TimeFilter\r\n","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getTransactions } from \"../reducers/userReducer\"\r\nimport AllAccounts from \"./transactions/AllAccounts\"\r\nimport SingleAccounts from \"./transactions/SingleAccount\"\r\nimport Button from \"./utils/Button\"\r\nimport NoAccounts from \"./transactions/NoAccounts\"\r\nimport TimeFilter from \"./utils/TimeFilter\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route, Link\r\n} from \"react-router-dom\"\r\n\r\n\r\nconst Transaction = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    const timeFilter = useSelector(state => state.timeFilter)\r\n    useEffect(() => {\r\n        dispatch(getTransactions(user))\r\n    }, [])\r\n    const handleRefresh = (event) => {\r\n        event.preventDefault()\r\n        dispatch(getTransactions(user))\r\n    }\r\n    const reducer = (a,b) => {\r\n        if(a){\r\n            return [...b, ...a]\r\n        }\r\n        return b\r\n    }\r\n    const sumReducer = (initial,nextValue) => {\r\n        return initial + parseFloat(nextValue.amount)\r\n    }\r\n    const accounts = user.accounts ? user.accounts : []\r\n    const allTransactionsArrays = user.accounts ?\r\n        user.accounts[0].transactions ?\r\n            user.accounts.map(account => account.transactions)\r\n            : null\r\n        : null\r\n    const allBalancesArrays = user.accounts ?\r\n        user.accounts[0].balance ?\r\n            user.accounts.map(account => account.balance)\r\n            : null\r\n        : null\r\n\r\n    const allTransactions =  allTransactionsArrays ? allTransactionsArrays.reduce(reducer, []) : []\r\n    const totalBalance = allBalancesArrays ? allBalancesArrays.reduce(sumReducer,0) : 0\r\n    return(\r\n        <div className=\"flex justify-center\">\r\n            {user.consent ?\r\n                <div className=\"px-8 py-8 pt-8\">\r\n                    <h1 className =\"mb-4\">Transactions</h1>\r\n                    <hr className =\"mb-8\"/>\r\n                    <Router>\r\n                        <div className = \"space-x-4 mb-8\" >\r\n                            <Link to = {\"/transactions/All_accounts\"}>\r\n                                <Button text =\"All Accounts\" />\r\n                            </Link>\r\n                            {accounts.map(account =>\r\n                                <Link to = {\"/transactions/\" + account.bank_id + \"/\" + account.id} key ={account.id}>\r\n                                    <Button text ={account.bank.full_name} />\r\n                                </Link>)}\r\n                            <Button cb = { handleRefresh } text =\"Refresh\" />\r\n                            <span>Time period: </span>\r\n                            <TimeFilter />\r\n                        </div>\r\n                        <Switch>\r\n                            {accounts.map(account =>\r\n                                <Route path = {\"/transactions/\" + account.bank_id + \"/\" + account.id} key = {account.id}>\r\n                                    <SingleAccounts transactions = {account.transactions} balance = {account.balance} timeFilter = {timeFilter}/>\r\n                                </Route>)}\r\n                            <Route path =\"/transactions/All_accounts\">\r\n                                <AllAccounts transactions = {allTransactions} totalBalance = {totalBalance} timeFilter = {timeFilter}/>\r\n                            </Route>\r\n                            <Route exact path =\"/transactions\">\r\n                                <AllAccounts transactions = {allTransactions} totalBalance = {totalBalance} timeFilter = {timeFilter}/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </Router>\r\n                </div>\r\n                :\r\n                <NoAccounts />\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Transaction","const messageReducer = (state = null, action) => {\r\n    switch (action.type){\r\n    case \"SET_MESSAGE\":\r\n        return action.data\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const setMessage = (message) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_MESSAGE\",\r\n            data: message\r\n        })\r\n        setTimeout(() => dispatch({ type: \"SET_MESSAGE\", data: null }), 3000)\r\n    }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_MESSAGE\",\r\n            data: null\r\n        })\r\n    }\r\n}\r\n\r\nexport default messageReducer","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst Message = () => {\r\n    const message = useSelector(state => state.message)\r\n    const style = message ? \"alert flex flex-row items-center bg-blue-200 p-5 rounded border-b-2 border-blue-300\" : \"hidden\"\r\n    return (\r\n        <div className={style}>\r\n            <div className=\"alert-icon flex items-center bg-blue-100 border-2 border-blue-500 justify-center h-10 w-10 flex-shrink-0 rounded-full\">\r\n                <span className=\"text-blue-500\">\r\n                    <svg fill=\"currentColor\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        className=\"h-6 w-6\">\r\n                        <path fillRule=\"evenodd\"\r\n                            d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\r\n                            clipRule=\"evenodd\"></path>\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n            <div className=\"alert-content ml-4\">\r\n                <div className=\"alert-title font-semibold text-lg text-blue-800\">\r\n                Info\r\n                </div>\r\n                <div className=\"alert-description text-sm text-blue-600\">\r\n                    {message}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { login } from \"../../reducers/userReducer\"\r\nimport { useHistory } from \"react-router\"\r\nimport { setMessage } from \"../../reducers/messageReducer\"\r\nimport Message from \"../Message\"\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleLogin = (event) => {\r\n        event.preventDefault()\r\n        const email = event.target.Email.value\r\n        const password = event.target.Password.value\r\n        const cb = () => history.push(\"/\")\r\n        const messageCb = (message) => {dispatch(setMessage(message))}\r\n        dispatch(login(email,password, cb, messageCb))\r\n    }\r\n    const handleRedirect = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/signup\")\r\n    }\r\n    const inputStyle = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-blue-300 \"\r\n    return (\r\n        <section className=\"App h-screen w-full flex justify-center items-center bg-gray-700 \">\r\n            <div className=\"w-full max-w-md bg-gray-800\">\r\n                <Message />\r\n                <form onSubmit={handleLogin} className=\" bg-white shadow-md rounded px-8 py-8 pt-8 \">\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"text\" className=\"text-sm block font-bold pb-2\">EMAIL</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"Email\"\r\n                            id =\"email\"\r\n                            className={inputStyle}\r\n                            placeholder=\"John97@gmail.com\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"password\" className=\"text-sm block font-bold pb-2\">PASSWORD</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"Password\"\r\n                            id=\"password\"\r\n                            className={inputStyle}\r\n                            placeholder=\"Enter your password\"\r\n                        />\r\n                    </div>\r\n                    <button id =\"login-button\"type=\"submit\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-4\">\r\n                        Login\r\n                    </button>\r\n                    <button id =\"Signup-button\"type=\"button\" onClick={handleRedirect} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-8\">Sign up</button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { logout } from \"../../reducers/userReducer\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nconst Logout = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleLogout = (event) => {\r\n        event.preventDefault()\r\n        const cb = () => history.push(\"/\")\r\n        dispatch(logout(cb))\r\n    }\r\n    return(\r\n        <button onClick ={handleLogout}> Log out</button>\r\n    )\r\n}\r\n\r\nexport default Logout","import userService from \"../services/users\"\r\n\r\nconst signUpReducer = (state = null, action) => {\r\n    switch(action.type){\r\n    case \"SIGN_UP\":\r\n        return action.data\r\n    case \"CHECK_EMAIL_VERIFIED\":\r\n        return state\r\n    case \"VERIFY_SMS\":\r\n        return state\r\n    case \"CHANGE_NUMBER\":\r\n        return state\r\n    case \"RESEND_SMS\":\r\n        return state\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const checkEmailVerified = (cb, messageCb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await userService.checkEmailVerified()\r\n            dispatch({\r\n                type: \"CHECK_EMAIL_VERIFIED\"\r\n            })\r\n            if(response.verified) {\r\n                cb()\r\n            }else{\r\n                messageCb(\"Your email has not been verified, please verifiy your email to continue\")\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const verifySMS = (code, cb, messageCb) => {\r\n    return async dispatch => {\r\n        try{\r\n            const response = await userService.verifySMS(code)\r\n            dispatch({\r\n                type: \"VERIFY_SMS\"\r\n            })\r\n            if (response.SMSverified){\r\n                cb()\r\n            }else{\r\n                console.log(code)\r\n                messageCb(\"Wrong code\")\r\n            }\r\n        }catch (e) {\r\n            console.log(e)\r\n            console.log(code)\r\n            messageCb(\"Wrong code\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const reSendSMS = (messageCb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await userService.reSendSMS()\r\n            dispatch({\r\n                type: \"RESEND_SMS\"\r\n            })\r\n            if(response.sent){\r\n                messageCb(\"Code Sent\")\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const changeNumber = (number,cb, messageCb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await userService.changeNumber( { number })\r\n            dispatch({\r\n                type: \"CHANGE_NUMBER\"\r\n            })\r\n            if(response.numberChanged){\r\n                messageCb(\"Number Changed\")\r\n                cb()\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n            if(e.response.data.error){\r\n                messageCb(e.response.data.error)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const signup = (email, name, number, password,cb, messageCb) => {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.signup({\r\n                email, name, number, password,\r\n            })\r\n            dispatch({\r\n                type: \"SIGN_UP\",\r\n                data: email\r\n            })\r\n            cb()\r\n        } catch (e) {\r\n            console.log(e.response.data.error)\r\n            if(e.response.data.error){\r\n                messageCb(e.response.data.error)\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default signUpReducer","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { setMessage } from \"../../reducers/messageReducer\"\r\nimport { signup } from \"../../reducers/signUpReducer\"\r\nimport Message from \"../Message\"\r\n\r\nconst SignUp = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleSignup = (event) => {\r\n        event.preventDefault()\r\n        const email = event.target.Email.value\r\n        const password = event.target.Password.value\r\n        const name = event.target.Name.value\r\n        const number =event.target.Number.value\r\n        const cb = () => history.push(\"/signUpEmailStep\")\r\n        const messageCb = (message) => {dispatch(setMessage(message))}\r\n        dispatch(signup(email, name,number, password, cb, messageCb))\r\n    }\r\n    return (\r\n        <section className=\"App h-screen w-full flex justify-center items-center bg-gray-700 \">\r\n            <div className=\"w-full max-w-md bg-gray-800 \">\r\n                <Message/>\r\n                <p className = \"text-white bold md:text-center pb-4\">Step 1. Register your information</p>\r\n                <form onSubmit ={handleSignup} className=\" bg-white shadow-md rounded px-8 py-8 pt-8\">\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"text\" className=\"text-sm block font-bold pb-2\">EMAIL</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"Email\"\r\n                            id =\"email\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-blue-300 \"\r\n                            placeholder=\"John97@gmail.com\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"text\" className=\"text-sm block font-bold pb-2\">NAME</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"Name\"\r\n                            id =\"name\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-blue-300 \"\r\n                            placeholder=\"John Pham\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"text\" className=\"text-sm block font-bold pb-2\">NUMBER</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"Number\"\r\n                            id =\"number\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-blue-300 \"\r\n                            placeholder=\"+44xxxxxxxxxx\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"password\" className=\"text-sm block font-bold pb-2\">PASSWORD</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"Password\"\r\n                            id =\"password\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-blue-300\"\r\n                            placeholder=\"Enter your password\"/>\r\n                    </div>\r\n                    <button id =\"signup-button\" type=\"submit\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-4\">Sign up</button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SignUp","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { getConsent } from \"../../reducers/userReducer\"\r\nimport Button from \"../utils/Button\"\r\n\r\nconst Consent = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleConfirm =(event) => {\r\n        event.preventDefault()\r\n        dispatch(getConsent())\r\n    }\r\n    return(\r\n        <div className=\"flex justify-center w-full items-center h-screen\">\r\n            <div className=\"w-full max-w-4xl px-8 py-8 pt-8 shadow-md rounded self-center\">\r\n                <h1>Consent confirmation</h1>\r\n                <h3 className =\"mt-4\">You will be transfered to Open Banking Project where the Application will request the following information: </h3>\r\n                <p>- Your account details </p>\r\n                <p>- Your regular payments </p>\r\n                <p>- Your accounts transactions </p>\r\n                <p>- The application would only use these infomation to provide you services. </p>\r\n                <p className=\"mb-10\">- Any indentifying information is removed </p>\r\n                <Button cb = {handleConfirm} text =\"Login to the Open Banking Project \" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Consent","import React, { useEffect } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { revokeConsentSingle } from \"../reducers/userReducer\"\r\nimport Loading from \"./utils/Loading\"\r\nimport Button from \"./utils/Button\"\r\nimport NoAccounts from \"./transactions/NoAccounts\"\r\nimport { getTransactions } from \"../reducers/userReducer\"\r\n\r\nconst Accounts = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    useEffect(() => {\r\n        dispatch(getTransactions(user))\r\n    }, [dispatch])\r\n    const handleAddAccount = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/consent\")\r\n    }\r\n    const handleRevokeAccount = ( account, bank ) => {\r\n        dispatch(revokeConsentSingle(user, account, bank))\r\n    }\r\n    return(\r\n        <div className=\"flex justify-center\">\r\n            {user.consent ?\r\n                <div className=\"flex-initial px-8 py-8 pt-8\">\r\n                    <h1 className =\"mb-4\">Accounts</h1>\r\n                    <hr className =\"mb-8\"/>\r\n                    <div className = \"bg-white shadow-xl rounded-lg \">\r\n                        <ul className=\"divide-y divide-gray-300\">\r\n                            {user.accounts ?\r\n                                user.accounts.map(account =>\r\n                                {for(let i = 0; user.accountIds.length > i; i++){\r\n                                    if(user.accountIds[i].account === account.id){\r\n                                        return(\r\n                                            <li key = {account.id} className=\"flex p-4 hover:bg-gray-50 cursor-pointer justify-between items-center\">\r\n                                                <img className=\"flex-intial w-10 h-10 md:w-20 md:h-20 mr-2 rounded-md overflow-hidden  shadow-md\" src={account.bank.logo} />\r\n                                                <div className =\"flex-1 ml-10 mr-10 \"><b>{account.bank.full_name}:</b> {account.id}</div>\r\n                                                <div className =\"flex-intial\">\r\n                                                    <Button cb = {() => handleRevokeAccount(account.id, account.bank.bank_id)} text =\"Revoke Consent\" />\r\n                                                </div>\r\n                                            </li>\r\n                                        )\r\n                                    }\r\n                                }}\r\n                                )\r\n                                :\r\n                                <Loading />\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    <div className =\"mt-4 ml-4\">\r\n                        <Button cb = {handleAddAccount} text =\"Add Account\" />\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <h1 className =\"mb-4\">Accounts</h1>\r\n                    <NoAccounts />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Accounts","import React from \"react\"\r\n\r\nconst About = () => {\r\n    return(\r\n        <div className=\"flex bg-white h-screen\">\r\n            <div className=\"flex items-center text-center lg:text-left px-8 md:px-12 lg:w-1/2\">\r\n                <div>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">The application connects to the Open Banking Project Api to simulate connecting to real banks with Open Banking.</p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">This application was created for as the final project for my Msc Computing and Information System course at Queen Mary University of London</p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">I can be contacted at phamhungphu97@gmail.com or at ec20104@qmul.ac.uk</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","const setCategories = (allTransactions, timeFilter) => {\r\n    const sumReducer = (initial,nextValue) => {\r\n        return initial + parseFloat(nextValue)\r\n    }\r\n    const filterTransactions = (transactions, time) => {\r\n        const dateNow = new Date()\r\n        const oneJan = new Date(dateNow.getFullYear(),0,1)\r\n        const numberOfDays = Math.floor((dateNow - oneJan) / (24 * 60 * 60 * 1000))\r\n        const weekNow = Math.ceil(( dateNow.getDay() + 1 + numberOfDays) / 7)\r\n\r\n        if(time === \"Today\"){\r\n            return(transactions.filter(transaction => {\r\n                const date = new Date(transaction.details.completed)\r\n                return(\r\n                    date.getFullYear() === dateNow.getFullYear() && date.getMonth() === dateNow.getMonth() && date.getDate() === dateNow.getDate()\r\n                )\r\n            }))\r\n        }else if(time === \"This month\"){\r\n            return(transactions.filter(transaction => {\r\n                const date = new Date(transaction.details.completed)\r\n                return(\r\n                    date.getFullYear() === dateNow.getFullYear() && date.getMonth() === dateNow.getMonth()\r\n                )\r\n            }))\r\n        }else if(time === \"Last month\"){\r\n            return(transactions.filter(transaction => {\r\n                const date = new Date(transaction.details.completed)\r\n                return(\r\n                    date.getFullYear() === dateNow.getFullYear() && date.getMonth() === (dateNow.getMonth() - 1)\r\n                )\r\n            }))\r\n        }else if(time === \"This week\"){\r\n            return(transactions.filter(transaction => {\r\n                const date = new Date(transaction.details.completed)\r\n                let weekThen\r\n                if(date.getFullYear() === dateNow.getFullYear()){\r\n                    const oneJan = new Date(date.getFullYear(),0,1)\r\n                    const numberOfDays = Math.floor((date- oneJan) / (24 * 60 * 60 * 1000))\r\n                    weekThen = Math.ceil(( date.getDay() + 1 + numberOfDays) / 7)\r\n                    return(weekNow === weekThen)\r\n                }\r\n            }))\r\n        }else if(time === \"Last week\"){\r\n            return(transactions.filter(transaction => {\r\n                const date = new Date(transaction.details.completed)\r\n                let weekThen\r\n                if(date.getFullYear() === dateNow.getFullYear()){\r\n                    const oneJan = new Date(date.getFullYear(),0,1)\r\n                    const numberOfDays = Math.floor((date- oneJan) / (24 * 60 * 60 * 1000))\r\n                    weekThen = Math.ceil(( date.getDay() + 1 + numberOfDays) / 7)\r\n                    return(weekNow === weekThen -1)\r\n                }\r\n            }))\r\n        }else if(time === \"This year\"){\r\n            return(transactions.filter(transaction => {\r\n                const date = new Date(transaction.details.completed)\r\n                return(\r\n                    date.getFullYear() === dateNow.getFullYear()\r\n                )\r\n            }))\r\n        }else if(time === \"Last year\"){\r\n            return(transactions.filter(transaction => {\r\n                const date = new Date(transaction.details.completed)\r\n                return(\r\n                    date.getFullYear() === (dateNow.getFullYear() -1)\r\n                )\r\n            }))\r\n        }else if(time === \"All\"){\r\n            return transactions\r\n        }\r\n    }\r\n    const filteredTransactions = filterTransactions(allTransactions, timeFilter)\r\n\r\n    const allExpensesArrays = filteredTransactions ?\r\n        filteredTransactions.filter(transaction => parseFloat(transaction.details.value.amount) < 0)\r\n        : null\r\n    const allExpensesBillsArrays = filteredTransactions ?\r\n        filteredTransactions.filter(transaction => transaction.details.description === \"Bills\")\r\n        : null\r\n    const allExpensesGroceriesArrays = filteredTransactions ?\r\n        filteredTransactions.filter(transaction => transaction.details.description === \"Groceries\")\r\n        : null\r\n    const allExpensesFoodDrinkArrays = filteredTransactions ?\r\n        filteredTransactions.filter(transaction => transaction.details.description === \"Food & Drink\")\r\n        : null\r\n    const allExpensesTransportArrays = filteredTransactions ?\r\n        filteredTransactions.filter(transaction => transaction.details.description === \"Transport\")\r\n        : null\r\n\r\n    const allExpensesBills = allExpensesBillsArrays ? allExpensesBillsArrays.map(expense => expense.details.value.amount) : 0\r\n    const allExpensesGroceries = allExpensesGroceriesArrays ? allExpensesGroceriesArrays.map(expense => expense.details.value.amount) : 0\r\n    const allExpensesFoodDrink = allExpensesFoodDrinkArrays ? allExpensesFoodDrinkArrays.map(expense => expense.details.value.amount) : 0\r\n    const allExpensesTransport = allExpensesTransportArrays ? allExpensesTransportArrays.map(expense => expense.details.value.amount) : 0\r\n    const allExpenses = allExpensesArrays ? allExpensesArrays.map(expense => expense.details.value.amount) : []\r\n\r\n    const totalExpenses = allExpenses ? allExpenses.reduce(sumReducer,0): 0\r\n    const totalExpensesBills = allExpensesBills ? allExpensesBills.reduce(sumReducer,0): 0\r\n    const totalExpensesGroceries = allExpensesGroceries ? allExpensesGroceries.reduce(sumReducer,0): 0\r\n    const totalExpensesFoodDrink = allExpensesFoodDrink ? allExpensesFoodDrink.reduce(sumReducer,0): 0\r\n    const totalExpensesTransport = allExpensesTransport ? allExpensesTransport.reduce(sumReducer,0): 0\r\n    const generalExpenses = totalExpenses  - totalExpensesBills - totalExpensesGroceries - totalExpensesFoodDrink - totalExpensesTransport\r\n\r\n    const allIncomesArrays = filteredTransactions ?\r\n        filteredTransactions.filter(transaction => parseFloat(transaction.details.value.amount) > 0)\r\n        : null\r\n    const allIncomesIncomeArrays = filteredTransactions ?\r\n        filteredTransactions.filter(transaction => transaction.details.description === \"Income\")\r\n        : null\r\n\r\n    const allIncomes = allIncomesArrays ? allIncomesArrays.map(income => income.details.value.amount) : []\r\n    const allIncomesIncome = allIncomesIncomeArrays ? allIncomesIncomeArrays.map(income => income.details.value.amount) : 0\r\n    const totalIncomesIncome = allIncomesIncome ? allIncomesIncome.reduce(sumReducer,0) : 0\r\n    const totalIncomes = allIncomes ? allIncomes.reduce(sumReducer,0) : 0\r\n    const generalIncomes = totalIncomes - totalIncomesIncome\r\n    return ({\r\n        bills:  totalExpensesBills,\r\n        foodDrink: totalExpensesFoodDrink,\r\n        transport: totalExpensesTransport,\r\n        groceries: totalExpensesGroceries,\r\n        generalExpense: generalExpenses,\r\n        totalExpenses: totalExpenses,\r\n        income: totalIncomesIncome,\r\n        generalIncome: generalIncomes,\r\n        totalIncomes: totalIncomes,\r\n        filteredLength: filteredTransactions.length\r\n    })\r\n}\r\n\r\n\r\nexport default setCategories","import React, { useEffect } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport NoAccounts from \"./transactions/NoAccounts\"\r\nimport { getTransactions } from \"../reducers/userReducer\"\r\nimport Loading from \"./utils/Loading\"\r\nimport { Bar } from \"react-chartjs-2\"\r\nimport setCategories from \"../categories\"\r\nimport Button from \"./utils/Button\"\r\n\r\nconst Budget = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        dispatch(getTransactions(user))\r\n    }, [])\r\n    const reducer = (a,b) => {\r\n        if(a){\r\n            return [...b, ...a]\r\n        }\r\n        return b\r\n    }\r\n\r\n    const daysInMonths = [31,29,31,30,31,30,31,31,30,31,30,31]\r\n    const months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\", \"May\",\"Jun\", \"Jul\", \"Aug\",\"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n    const date = new Date()\r\n    const handleBudgetRedirect = (event) => {\r\n        event.preventDefault()\r\n        user.budget.length !== 0 ?\r\n            history.push(\"/updateBudget\"):\r\n            history.push(\"/setBudget\")\r\n    }\r\n    const sumReducer = (initial,nextValue) => {\r\n        return initial + parseFloat(nextValue.amount)\r\n    }\r\n    const allTransactionsArrays = user.accounts ?\r\n        user.accounts[0].transactions ?\r\n            user.accounts.map(account => account.transactions)\r\n            : null\r\n        : null\r\n    const allTransactions =  allTransactionsArrays ? allTransactionsArrays.reduce(reducer, []) : []\r\n\r\n    const allBalancesArrays = user.accounts ?\r\n        user.accounts[0].balance ?\r\n            user.accounts.map(account => account.balance)\r\n            : null\r\n        : null\r\n\r\n    const totalBalance = allBalancesArrays ? allBalancesArrays.reduce(sumReducer,0) : 0\r\n    const categoriesTotal = setCategories(allTransactions, \"This month\")\r\n    const totalBudget = user.budget[0] +user.budget[1] +user.budget[2] +user.budget[3] +user.budget[4]\r\n    const data = {\r\n        labels: [\"Total Expenses\", \"Bills\", \"Transport\", \"Food and Drink\", \"Groceries\", \"General Expense\"],\r\n        datasets: [\r\n            {\r\n                label: \"Actual\",\r\n                data: [-categoriesTotal.totalExpenses, -categoriesTotal.bills, -categoriesTotal.transport, -categoriesTotal.foodDrink, -categoriesTotal.groceries, -categoriesTotal.generalExpense],\r\n                backgroundColor: \"rgba(75, 192, 192, 0.5)\",\r\n            },\r\n            {\r\n                label: \"Budget Goal\",\r\n                data: [totalBudget, user.budget[0], user.budget[2], user.budget[1], user.budget[3], user.budget[4]],\r\n                backgroundColor: \"rgba(193, 185, 185, 0.5)\",\r\n            },\r\n        ],\r\n    }\r\n\r\n    const options = {\r\n        indexAxis: \"y\",\r\n        scales: {\r\n            yAxes: {\r\n                grid: { display: false, },\r\n                stacked: true\r\n            },\r\n            xAxes: {\r\n                stacked: true\r\n            }\r\n        },\r\n    }\r\n    console.log()\r\n    return(\r\n        <div className=\"flex justify-center\">\r\n            {user.consent ?\r\n                user.budget.length !== 0 ?\r\n                    <div className=\"px-8 py-8 pt-8\">\r\n                        <h1 className =\"mb-4\">{`Hi ${user.name}, welcome to your budget planner`}</h1>\r\n                        <hr className =\"mb-8\"/>\r\n                        {categoriesTotal.filteredLength !== 0 ?\r\n                            <div >\r\n                                {totalBudget + categoriesTotal.totalExpenses > 0 ?\r\n                                    <span className =\"mb-8 bg-green-100 text-green-600 rounded-full p-2 flex items-center\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                        </svg>\r\n                                        {`You are on track with ${daysInMonths[date.getMonth()] - date.getDate()} days left`}\r\n                                    </span>\r\n                                    :\r\n                                    <span className =\"mb-8 bg-gray-100 text-black rounded-full p-2 flex items-center\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\r\n                                        </svg>\r\n                                        {`You are over budget by €${-(totalBudget + categoriesTotal.totalExpenses).toFixed(2)}`}\r\n                                    </span>\r\n                                }\r\n                                <h2>{`€${totalBalance.toFixed(2)}`}</h2>\r\n                                <h3 className =\"mb-4\">{`01 ${months[date.getMonth()]} - ${daysInMonths[date.getMonth()]} ${months[date.getMonth()]} ${date.getFullYear()}`}</h3>\r\n                                <div className =\"mb-8\" style ={{ height: \"400px\", width: \"800px\" }}>\r\n                                    <Bar data={data} options={options} />\r\n                                </div>\r\n                                <hr className =\"mb-8\"/>\r\n                                <h3 className =\"mb-4\">Budget feeling too restrictive ?</h3>\r\n                                <Button cb ={handleBudgetRedirect} text=\"Update Budget\"/>\r\n                            </div>\r\n                            :\r\n                            <Loading />\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <h1 className =\"mb-4\">{`Hi ${user.name}, welcome to your budget planner`}</h1>\r\n                        <hr className =\"mb-8\"/>\r\n                        <h3>Budgeting</h3>\r\n                        <p className= \"mb-4\" >Take the first step to controlling your finances now by setting a budget.</p>\r\n                        <Button cb ={handleBudgetRedirect} text=\"Set Budget\"/>\r\n                        <h3 className= \"mt-4\">Transactions</h3>\r\n                        <p className= \"mb-4\" >Check out the transactions of all your accounts in one convinient location.</p>\r\n                        <Button cb ={() => {history.push(\"/transactions\")}} text=\"Transactions\"/>\r\n                        <h3 className= \"mt-4\">Overview</h3>\r\n                        <p className= \"mb-4\" >See your transactions categorised here.</p>\r\n                        <Button cb ={() => {history.push(\"/overview\")}} text=\"Overview\"/>\r\n                        <h3 className= \"mt-4\">Accounts</h3>\r\n                        <p className= \"mb-4\" >Add or review your accounts.</p>\r\n                        <Button cb ={() => {history.push(\"/accounts\")}} text=\"Accounts\"/>\r\n                    </div>\r\n                :\r\n                <div>\r\n                    <h1 className =\"mb-4\">{`Hi ${user.name}, welcome to your budget planner`}</h1>\r\n                    <hr className =\"mb-8\"/>\r\n                    <NoAccounts />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Budget","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nconst UnprotectedHome = () => {\r\n    return(\r\n        <div className=\"flex bg-white h-screen\">\r\n            <div className=\"flex items-center text-center lg:text-left px-8 md:px-12 lg:w-1/2\">\r\n                <div>\r\n                    <h2 className=\"text-3xl font-semibold text-gray-800 md:text-4xl\">Personal finance for <span className=\"text-indigo-600\">You</span></h2>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">This application would connect all finances into one covinient dashboard, from which you can start shaping your personal finance.</p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">The application connects to the Open Banking Project Api to simulate connecting to real banks with Open Banking.</p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">To see what the application would look like running you can login using:</p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">Email: testuser@gmail.com Pass: test90</p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">Or go through the sign up proccess and when asked to log in to Open Banking Project use:</p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">Username: jaakko.fi.29@example.com Pass: 8132cf </p>\r\n                    <p className=\"mt-2 text-sm text-gray-500 md:text-base\">Please note that the application would require you to verify your email and phone number</p>\r\n                    <div className=\"flex justify-center lg:justify-start mt-6\">\r\n                        <Link to=\"/login\"><span className=\"px-4 py-3 bg-gray-900 text-gray-200 text-xs font-semibold rounded hover:bg-gray-800\">Get Started</span></Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"hidden lg:block lg:w-1/2 \" >\r\n                <div className=\"h-full bg-hero-pattern bg-center bg-no-repeat bg-cover\">\r\n                    <div className=\"h-full bg-black opacity-25\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UnprotectedHome","const choiceReducer = (state = { banks:[] , accounts :[] }, action) => {\r\n    let newState = {}\r\n    switch (action.type){\r\n    case \"SET_BANK\":\r\n        newState = { banks: [...state.banks, action.data], accounts: [...state.accounts] }\r\n        return newState\r\n    case \"SET_ACCOUNT\":\r\n        newState = { banks:[...state.banks], accounts: [...state.accounts, action.data] }\r\n        return newState\r\n    case \"REMOVE_BANK\":\r\n        newState ={ banks: state.banks.filter(bank => bank !== action.data), accounts: state.accounts.filter(account => account.bank !== action.data) }\r\n        return newState\r\n    case \"REMOVE_ACCOUNT\":\r\n        newState ={ banks: [...state.banks], accounts: state.accounts.filter(\r\n            account => {\r\n                return (account.account !== action.data )\r\n            })\r\n        }\r\n        return newState\r\n    case \"RESET\":\r\n        return { banks:[] , accounts :[] }\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const setBank = (bank) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_BANK\",\r\n            data: bank\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeBank = (bank) => {\r\n    return dispatch => {\r\n        dispatch ({\r\n            type: \"REMOVE_BANK\",\r\n            data: bank\r\n        })\r\n    }\r\n}\r\nexport const setAccount = (account, bank) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_ACCOUNT\",\r\n            data: { account: account, bank:bank }\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeAccount = (account) => {\r\n    return dispatch => {\r\n        dispatch ({\r\n            type: \"REMOVE_ACCOUNT\",\r\n            data: account\r\n        })\r\n    }\r\n}\r\n\r\nexport const reset = () => {\r\n    return dispatch => {\r\n        dispatch ({\r\n            type: \"RESET\"\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default choiceReducer","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {  setAccount, removeAccount } from \"../../reducers/choiceReducer\"\r\n\r\nconst ChooseAccount = ({ filteredAccounts }) => {\r\n    const user = useSelector(state => state.user)\r\n    const dispatch = useDispatch()\r\n    const handleAccountChoice = (event) => {\r\n        const account = event.target.name\r\n        const bank = event.target.value\r\n        if(event.target.checked === true){\r\n            dispatch(setAccount(account, bank))\r\n        }else{\r\n            dispatch(removeAccount(account, bank))\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>Choose Accounts</h1>\r\n            <div className = \"bg-white shadow-xl rounded-lg\">\r\n                <ul className=\"divide-y divide-gray-300\">\r\n                    {filteredAccounts.map(account =>\r\n                    {\r\n                        for(let i = 0; user.accountIds.length > i; i++ ){\r\n                            if(user.accountIds[i].account === account.id ){\r\n                                return(<div key = {account.id}></div>)\r\n                            }\r\n                        }\r\n                        return(\r\n                            <li key = {account.id} className=\"p-4 hover:bg-gray-50 cursor-pointer\">\r\n                                <label className=\"flex items-center relative w-max cursor-pointer select-none\">\r\n                                    <img className=\"w-10 h-10 md:w-20 md:h-20 mr-2 rounded-md overflow-hidden inline-block shadow-md\" src={account.bank.logo} />\r\n                                    <span className=\"mr-3\">{account.id}</span>\r\n                                    <input type =\"checkbox\" name = {account.id} onChange = {handleAccountChoice} value ={account.bank_id}\r\n                                        className=\"appearance-none transition-colors cursor-pointer w-14 h-7 rounded-full bg-gray-100\"\r\n                                    />\r\n                                    <span className=\"w-7 h-7 right-7 absolute rounded-full transform transition-transform bg-gray-200\" ></span>\r\n                                </label>\r\n                            </li>)}\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ChooseAccount","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { setBank, removeBank } from \"../../reducers/choiceReducer\"\r\n\r\nconst ChooseBank = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    const handleBankChoice = (event) => {\r\n        const bank = event.target.name\r\n        if(event.target.checked === true){\r\n            dispatch(setBank(bank))\r\n        }else{\r\n            dispatch(removeBank(bank))\r\n        }\r\n    }\r\n    let banks =[]\r\n    return(\r\n        <div>\r\n            <h1>Choose Banks</h1>\r\n            <div className = \"bg-white shadow-xl rounded-lg\">\r\n                <ul className=\"divide-y divide-gray-300\">\r\n                    {user.accounts.map(account =>\r\n                    {for(let i = 0; banks.length > i; i++ ){\r\n                        if(banks[i] === account.bank_id ){\r\n                            return true\r\n                        }\r\n                    }\r\n                    for(let i = 0; user.accountIds.length > i; i++ ){\r\n                        if(user.accountIds[i].account === account.id ){\r\n                            return true\r\n                        }\r\n                    }\r\n                    banks.push(account.bank_id)\r\n                    return(\r\n                        <li key = {account.id} className=\"p-4 hover:bg-gray-50 cursor-pointer\">\r\n                            <label className=\"flex items-center relative w-max cursor-pointer select-none \">\r\n                                <img className=\" w-10 h-10 md:w-20 md:h-20 mr-2 rounded-md overflow-hidden inline-block shadow-md\" src={account.bank.logo} />\r\n                                <span className=\"mr-3 \">{account.bank.full_name}</span>\r\n                                <input type =\"checkbox\" name = {account.bank_id} onChange ={handleBankChoice}\r\n                                    className=\"appearance-none transition-colors cursor-pointer w-14 h-7 rounded-full bg-gray-100\"/>\r\n                                <span className=\"w-7 h-7 right-7 absolute rounded-full transform transition-transform bg-gray-200\" ></span>\r\n                            </label>\r\n                        </li>\r\n                    )}\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChooseBank","import React, { useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport Button from \"../utils/Button\"\r\nimport Loading from \"../utils/Loading\"\r\nimport { reset } from \"../../reducers/choiceReducer\"\r\nimport { grantView } from \"../../reducers/userReducer\"\r\nimport { getAccounts } from \"../../reducers/userReducer\"\r\nimport ChooseAccount from \"./ChooseAccount\"\r\nimport ChooseBank from \"./ChooseBank\"\r\n\r\nconst Choose = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const user = useSelector(state => state.user)\r\n    useEffect(() => {\r\n        dispatch(getAccounts(user))\r\n    }, [])\r\n    const banksChoice = useSelector(state => state.choice.banks)\r\n    const stateId = useSelector(state => state.choice.accounts)\r\n\r\n    const handleConfirm = (event) => {\r\n        event.preventDefault()\r\n        const cb = () => history.push(\"/\")\r\n        dispatch(grantView(stateId, user.accountIds, cb))\r\n        dispatch(reset())\r\n    }\r\n    const accountsFilter = (accounts, currentAccount) => {\r\n        for(let i = 0; banksChoice.length > i; i++ ){\r\n            if(banksChoice[i] === currentAccount.bank_id){\r\n                accounts.push(currentAccount)\r\n            }\r\n        }\r\n        return accounts\r\n    }\r\n    const filteredAccounts = user.accounts ? user.accounts.reduce(accountsFilter, []): []\r\n    return(\r\n        <div className=\"flex justify-center\">\r\n            <div>\r\n                {user.accounts ?\r\n                    <ChooseBank/>\r\n                    :\r\n                    <Loading/>\r\n                }\r\n                {filteredAccounts[0] ?\r\n                    <div>\r\n                        <ChooseAccount filteredAccounts = {filteredAccounts} />\r\n                        <Button cb ={handleConfirm} text =\"Confirm\"/>\r\n                    </div>\r\n                    :\r\n                    <div></div> }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Choose","import React from \"react\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nconst Verified = () => {\r\n    const history = useHistory()\r\n    const handleRedirect = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/login\")\r\n    }\r\n    return(\r\n        <section className=\"App h-screen w-full flex justify-center items-center bg-gray-700 \">\r\n            <div className=\"w-full max-w-md bg-gray-800\">\r\n                <p className = \"text-white bold md:text-center pb-4\">Step 4. Success</p>\r\n                <div className=\" bg-white shadow-md rounded px-8 py-8 pt-8\">\r\n                    <div className=\"px-4 pb-4\">\r\n                        <p className = \"text-black bold \">Your account has been verified please log in to continue</p>\r\n                    </div>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <button id =\"signup-button\" type=\"button\" onClick = {handleRedirect} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline \">Login</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Verified","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { setMessage } from \"../../reducers/messageReducer\"\r\nimport { verifySMS, reSendSMS } from \"../../reducers/signUpReducer\"\r\nimport Message from \"../Message\"\r\n\r\nconst SignUpSMSstep = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const messageCb = (message) => {dispatch(setMessage(message))}\r\n    const handleSMSconfirm = (event) => {\r\n        event.preventDefault()\r\n        const code = event.target.Code.value\r\n        const cb = () => history.push(\"/verified\")\r\n        dispatch(verifySMS(code, cb, messageCb))\r\n    }\r\n    const handleReSend = (event) => {\r\n        event.preventDefault()\r\n        dispatch(reSendSMS(messageCb))\r\n    }\r\n    const handleRedirect = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/changeNumber\")\r\n    }\r\n    return(\r\n        <section className=\"App h-screen w-full flex justify-center items-center bg-gray-700 \">\r\n            <div className=\"w-full max-w-md bg-gray-800\">\r\n                <Message/>\r\n                <p className = \"text-white bold md:text-center pb-4\">Step 3. SMS verification</p>\r\n                <form onSubmit ={handleSMSconfirm} className=\" bg-white shadow-md rounded px-8 py-8 pt-8\">\r\n                    <div className=\"px-4 pb-4\">\r\n                        <p className = \"text-black bold  \">Your email account has been verified</p>\r\n                        <p className = \"text-black bold  \">Please enter the code sent to your phone to continue</p>\r\n                    </div>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"text\" className=\"text-sm block font-bold pb-2\">CODE</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"Code\"\r\n                            id =\"code\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-blue-300 \"\r\n                        />\r\n                    </div>\r\n                    <button id =\"confirm-button\" type=\"submit\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-4\">Confirm</button>\r\n                    <button id =\"resend-button\" onClick={handleReSend} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-8\">Re-send SMS</button>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <p className = \"text-black bold  \">Want to use a different number ?</p>\r\n                    </div>\r\n                    <button id =\"changeNumber-button\" onClick={handleRedirect} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-4\">Change Number</button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SignUpSMSstep","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { setMessage } from \"../../reducers/messageReducer\"\r\nimport { checkEmailVerified } from \"../../reducers/signUpReducer\"\r\nimport { Redirect } from \"react-router\"\r\nimport Message from \"../Message\"\r\n\r\nconst SignUpEmailStep = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const signUpEmail = useSelector(state => state.signUpEmail)\r\n    const handleCheckVerified = (event) => {\r\n        event.preventDefault()\r\n        const cb = () => history.push(\"/signUpSMSstep\")\r\n        const messageCb = (message) => {dispatch(setMessage(message))}\r\n        dispatch(checkEmailVerified(cb, messageCb))\r\n    }\r\n    return(\r\n        <div>\r\n            {signUpEmail ?\r\n                <section className=\"App h-screen w-full flex justify-center items-center bg-gray-700 \">\r\n                    <div className=\"w-full max-w-md bg-gray-800\">\r\n                        <Message/>\r\n                        <p className = \"text-white bold md:text-center pb-4\">Step 2. Email Verification</p>\r\n                        <div className=\" bg-white shadow-md rounded px-8 py-8 pt-8\">\r\n                            <div className=\"px-4 pb-4\">\r\n                                <p className = \"text-black bold\">Please verify your email to continue the sign up process</p>\r\n                            </div>\r\n                            <div className=\"px-4 pb-4\">\r\n                                <button id =\"signup-button\" type=\"button\" onClick = {handleCheckVerified} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline \">I have verified my email</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                :\r\n                <Redirect to = \"/\"/>}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SignUpEmailStep","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { setMessage } from \"../../reducers/messageReducer\"\r\nimport { changeNumber } from \"../../reducers/signUpReducer\"\r\nimport Message from \"../Message\"\r\n\r\nconst ChangeNumber = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const messageCb = (message) => {dispatch(setMessage(message))}\r\n    const cb = () => history.push(\"/signUpSMSstep\")\r\n    const handleChangeNumber = (event) => {\r\n        event.preventDefault()\r\n        const number = event.target.Number.value\r\n        dispatch(changeNumber(number, cb, messageCb))\r\n    }\r\n    return(\r\n        <section className=\"App h-screen w-full flex justify-center items-center bg-gray-700 \">\r\n            <div className=\"w-full max-w-md bg-gray-800\">\r\n                <Message/>\r\n                <p className = \"text-white bold md:text-center pb-4\">Change your number</p>\r\n                <form onSubmit ={handleChangeNumber} className=\" bg-white shadow-md rounded px-8 py-8 pt-8\">\r\n                    <div className=\"px-4 pb-4\">\r\n                        <p className = \"text-black bold  \">Please enter your new number here</p>\r\n                        <p className = \"text-black bold  \">Make sure it starts with the country code <br/>(e.g +44)</p>\r\n                    </div>\r\n                    <div className=\"px-4 pb-4\">\r\n                        <label htmlFor=\"text\" className=\"text-sm block font-bold pb-2\">Number</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"Number\"\r\n                            id =\"number\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-blue-300 \"\r\n                        />\r\n                    </div>\r\n                    <button id =\"confirm-button\" type=\"submit\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-4\">Confirm</button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ChangeNumber","import React from \"react\"\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer className =\"flex items-center bg-gray-800 p-3 justify-end\">\r\n            <p >(C) 2020 Phu Pham (ec20104@qmul.ac.uk - Student ID: 200773869), all rights reserved</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport NoAccounts from \"./transactions/NoAccounts\"\r\nimport { getTransactions } from \"../reducers/userReducer\"\r\nimport { Doughnut } from \"react-chartjs-2\"\r\nimport Loading from \"./utils/Loading\"\r\nimport TimeFilter from \"./utils/TimeFilter\"\r\nimport setCategories from \"../categories\"\r\n\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    const timeFilter = useSelector(state => state.timeFilter)\r\n    useEffect(() => {\r\n        dispatch(getTransactions(user))\r\n    }, [])\r\n    const reducer = (a,b) => {\r\n        if(a){\r\n            return [...b, ...a]\r\n        }\r\n        return b\r\n    }\r\n    const hasBalance = user.accounts ?\r\n        user.accounts[0].balance ? true : false : false\r\n    const allTransactionsArrays = user.accounts ?\r\n        user.accounts[0].transactions ?\r\n            user.accounts.map(account => account.transactions)\r\n            : null\r\n        : null\r\n    const allTransactions =  allTransactionsArrays ? allTransactionsArrays.reduce(reducer, []) : []\r\n\r\n\r\n    const categoriesTotal = setCategories(allTransactions, timeFilter)\r\n    const dataExpenses = {\r\n        labels: [\"General expenses\", \"Bills\", \"Groceries\", \"Food & Drink\", \"Transport\", \"Orange\"],\r\n        datasets: [\r\n            {\r\n                label: \"# of Votes\",\r\n                data: [categoriesTotal.generalExpense, categoriesTotal.bills , categoriesTotal.groceries , categoriesTotal.foodDrink , categoriesTotal.transport , 0],\r\n                backgroundColor: [\r\n                    \"rgba(255, 99, 132, 0.5)\",\r\n                    \"rgba(54, 162, 235, 0.5)\",\r\n                    \"rgba(255, 206, 86, 0.5)\",\r\n                    \"rgba(75, 192, 192, 0.5)\",\r\n                    \"rgba(153, 102, 255, 0.5)\",\r\n                    \"rgba(255, 159, 64, 0.5)\",\r\n                ],\r\n                borderColor: [\r\n                    \"rgba(255, 99, 132, 0)\",\r\n                    \"rgba(54, 162, 235, 0)\",\r\n                    \"rgba(255, 206, 86, 0)\",\r\n                    \"rgba(75, 192, 192, 0)\",\r\n                    \"rgba(153, 102, 255, 0)\",\r\n                    \"rgba(255, 159, 64, 0)\",\r\n                ],\r\n                borderWidth: 0,\r\n                borderRadius: 5,\r\n                hoverOffset: 10,\r\n                spacing: 2\r\n            },\r\n        ],\r\n    }\r\n\r\n    const dataIncomes = {\r\n        labels: [\"Red\", \"Blue\", \"Yellow\", \"General Income\", \"Income\", \"Orange\"],\r\n        datasets: [\r\n            {\r\n                label: \"# of Votes\",\r\n                data: [0, 0, 0, categoriesTotal.generalIncome , categoriesTotal.income, 0],\r\n                backgroundColor: [\r\n                    \"rgba(255, 99, 132, 0.5)\",\r\n                    \"rgba(54, 162, 235, 0.5)\",\r\n                    \"rgba(255, 206, 86, 0.5)\",\r\n                    \"rgba(75, 192, 192, 0.5)\",\r\n                    \"rgba(153, 102, 255, 0.5)\",\r\n                    \"rgba(255, 159, 64, 0.5)\",\r\n                ],\r\n                borderColor: [\r\n                    \"rgba(255, 99, 132, 0)\",\r\n                    \"rgba(54, 162, 235, 0)\",\r\n                    \"rgba(255, 206, 86, 0)\",\r\n                    \"rgba(75, 192, 192, 0)\",\r\n                    \"rgba(153, 102, 255, 0)\",\r\n                    \"rgba(255, 159, 64, 0)\",\r\n                ],\r\n                borderWidth: 0,\r\n                borderRadius: 5,\r\n                hoverOffset: 10,\r\n                spacing: 2\r\n            },\r\n        ],\r\n    }\r\n\r\n\r\n    const options= {\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n            }\r\n        }\r\n    }\r\n\r\n    const categories = [\"Bills\", \"Groceries\", \"Food & Drink\", \"Transport\", \"General Expenses\"]\r\n    return(\r\n        <div className=\"flex justify-center\">\r\n            {user.consent ?\r\n                <div className=\"px-8 py-8 pt-8\">\r\n                    <h1 className =\"mb-4\">Overview</h1>\r\n                    <hr className =\"mb-8\"/>\r\n                    <div >\r\n                        {categoriesTotal.filteredLength === 0 ?\r\n                            hasBalance === false ?\r\n                                <Loading />\r\n                                :\r\n                                <div>\r\n                                    <h3>{`No recent transactions ${timeFilter}`}</h3>\r\n                                    <TimeFilter />\r\n                                </div>\r\n                            :\r\n                            <div className =\"mt-8\">\r\n                                <div className =\" inline-block \" style ={{ height: \"300px\", width: \"300px\" }} >\r\n                                    <Doughnut data={dataIncomes} options ={options}/>\r\n                                    <h3 className =\"px-20 pt-6 text-green-600\">{`Incomes: +€${categoriesTotal.totalIncomes.toFixed(2)}`}</h3>\r\n                                </div>\r\n                                <div className =\" inline-block ml-4 \" style ={{ height: \"300px\", width: \"300px\" }} >\r\n                                    <Doughnut data={dataExpenses} options ={options}/>\r\n                                    <h3 className =\"px-20 pt-6\">{`Expenses: -€${-categoriesTotal.totalExpenses.toFixed(2)}`}</h3>\r\n                                </div>\r\n                                <span>Time period: </span>\r\n                                <TimeFilter />\r\n                                <hr className=\"mt-8 mb-4\"/>\r\n                                <h3>Spendings</h3>\r\n                                <ul className=\"divide-y divide-gray-300\">\r\n                                    {categories.map(category => {\r\n                                        if(category === \"Bills\"){\r\n                                            if(categoriesTotal.bills === 0){\r\n                                                return true\r\n                                            }\r\n                                            return(\r\n                                                <li key = {category} className=\"flex p-4 hover:bg-gray-50 cursor-pointer justify-between items-center\">\r\n                                                    <span className =\"bg-blue-100 p-1.5 rounded\">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\r\n                                                        </svg>\r\n                                                    </span>\r\n                                                    <div className =\"flex-1 ml-10 mr-10 \">{category}</div>\r\n                                                    <div className =\"flex-intial\">\r\n                                                        <b>{`-€${-categoriesTotal.bills.toFixed(2)}`}</b>\r\n                                                    </div>\r\n                                                </li>\r\n                                            )\r\n                                        }\r\n                                        if(category === \"Groceries\"){\r\n                                            if(categoriesTotal.groceries === 0){\r\n                                                return true\r\n                                            }\r\n                                            return(\r\n                                                <li key = {category} className=\"flex p-4 hover:bg-gray-50 cursor-pointer justify-between items-center\">\r\n                                                    <span className =\"bg-yellow-100 p-1.5 rounded\">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                                                        </svg>\r\n                                                    </span>\r\n                                                    <div className =\"flex-1 ml-10 mr-10 \">{category}</div>\r\n                                                    <div className =\"flex-intial\">\r\n                                                        <b>{`-€${-categoriesTotal.groceries.toFixed(2)}`}</b>\r\n                                                    </div>\r\n                                                </li>\r\n                                            )\r\n                                        }\r\n                                        if(category === \"Food & Drink\"){\r\n                                            if(categoriesTotal.foodDrink === 0){\r\n                                                return true\r\n                                            }\r\n                                            return(\r\n                                                <li key = {category} className=\"flex p-4 hover:bg-gray-50 cursor-pointer justify-between items-center\">\r\n                                                    <span className =\"bg-green-100 p-1.5 rounded\">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 15.546c-.523 0-1.046.151-1.5.454a2.704 2.704 0 01-3 0 2.704 2.704 0 00-3 0 2.704 2.704 0 01-3 0 2.704 2.704 0 00-3 0 2.704 2.704 0 01-3 0 2.701 2.701 0 00-1.5-.454M9 6v2m3-2v2m3-2v2M9 3h.01M12 3h.01M15 3h.01M21 21v-7a2 2 0 00-2-2H5a2 2 0 00-2 2v7h18zm-3-9v-2a2 2 0 00-2-2H8a2 2 0 00-2 2v2h12z\" />\r\n                                                        </svg>\r\n                                                    </span>\r\n                                                    <div className =\"flex-1 ml-10 mr-10 \">{category}</div>\r\n                                                    <div className =\"flex-intial\">\r\n                                                        <b>{`-€${-categoriesTotal.foodDrink.toFixed(2)}`}</b>\r\n                                                    </div>\r\n                                                </li>\r\n                                            )\r\n                                        }\r\n                                        if(category === \"Transport\"){\r\n                                            if(categoriesTotal.transport === 0){\r\n                                                return true\r\n                                            }\r\n                                            return(\r\n                                                <li key = {category} className=\"flex p-4 hover:bg-gray-50 cursor-pointer justify-between items-center\">\r\n                                                    <span className =\"bg-purple-200 p-1.5 rounded\">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                            <path d=\"M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16V6a1 1 0 00-1-1H4a1 1 0 00-1 1v10a1 1 0 001 1h1m8-1a1 1 0 01-1 1H9m4-1V8a1 1 0 011-1h2.586a1 1 0 01.707.293l3.414 3.414a1 1 0 01.293.707V16a1 1 0 01-1 1h-1m-6-1a1 1 0 001 1h1M5 17a2 2 0 104 0m-4 0a2 2 0 114 0m6 0a2 2 0 104 0m-4 0a2 2 0 114 0\" />\r\n                                                        </svg>\r\n                                                    </span>\r\n                                                    <div className =\"flex-1 ml-10 mr-10 \">{category}</div>\r\n                                                    <div className =\"flex-intial\">\r\n                                                        <b>{`-€${-categoriesTotal.transport.toFixed(2)}`}</b>\r\n                                                    </div>\r\n                                                </li>\r\n                                            )\r\n                                        }\r\n                                        if(category === \"General Expenses\"){\r\n                                            if(categoriesTotal.generalExpense === 0){\r\n                                                return true\r\n                                            }\r\n                                            return(\r\n                                                <li key = {category} className=\"flex p-4 hover:bg-gray-50 cursor-pointer justify-between items-center\">\r\n                                                    <span className =\"bg-red-200 p-1.5 rounded\">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\r\n                                                        </svg>\r\n                                                    </span>\r\n                                                    <div className =\"flex-1 ml-10 mr-10 \">{category}</div>\r\n                                                    <div className =\"flex-intial\">\r\n                                                        <b>{`-€${-categoriesTotal.generalExpense.toFixed(2)}`}</b>\r\n                                                    </div>\r\n                                                </li>\r\n                                            )\r\n                                        }\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <h1 className =\"mb-4\">Overview</h1>\r\n                    <NoAccounts />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","const budgetChoicesReducer = (state = { bills: 0, foodDrink: 0, transport: 0, groceries: 0, generalExpense: 0 }, action) => {\r\n    switch(action.type){\r\n    case\"SET_BUDGET_CHOICE_BILLS\":\r\n        return { ...state, bills: action.data }\r\n    case\"SET_BUDGET_CHOICE_FOOD_AND_DRINK\":\r\n        return { ...state, foodDrink: action.data }\r\n    case\"SET_BUDGET_CHOICE_TRANSPORT\":\r\n        return { ...state, transport: action.data }\r\n    case\"SET_BUDGET_CHOICE_GROCERIES\":\r\n        return { ...state, groceries: action.data }\r\n    case\"SET_BUDGET_CHOICE_GENERAL_EXPENSE\":\r\n        return { ...state, generalExpense: action.data }\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const setBudgetChoice = (choice) => {\r\n    return dispatch => {\r\n        if(choice.name === \"Bills\"){\r\n            dispatch({\r\n                type: \"SET_BUDGET_CHOICE_BILLS\",\r\n                data: parseFloat(choice.amount)\r\n            })\r\n        }else if(choice.name === \"FoodandDrink\"){\r\n            dispatch({\r\n                type: \"SET_BUDGET_CHOICE_FOOD_AND_DRINK\",\r\n                data: parseFloat(choice.amount)\r\n            })\r\n        }else if(choice.name === \"Transport\"){\r\n            dispatch({\r\n                type: \"SET_BUDGET_CHOICE_TRANSPORT\",\r\n                data: parseFloat(choice.amount)\r\n            })\r\n        }else if(choice.name === \"Groceries\"){\r\n            dispatch({\r\n                type: \"SET_BUDGET_CHOICE_GROCERIES\",\r\n                data: parseFloat(choice.amount)\r\n            })\r\n        }else if(choice.name === \"GeneralExpense\"){\r\n            dispatch({\r\n                type: \"SET_BUDGET_CHOICE_GENERAL_EXPENSE\",\r\n                data: parseFloat(choice.amount)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default budgetChoicesReducer","import React, { useEffect } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setBudget } from \"../../reducers/userReducer\"\r\nimport { setBudgetChoice } from \"../../reducers/budgetChoicesReducer\"\r\nimport { getTransactions } from \"../../reducers/userReducer\"\r\nimport setCategories from \"../../categories\"\r\nimport Loading from \"./Loading\"\r\n\r\nconst SetBudget = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const user = useSelector(state => state.user)\r\n    const budgetChoices = useSelector(state => state.budgetChoices)\r\n    const totalBudget = budgetChoices.bills + budgetChoices.foodDrink + budgetChoices.transport + budgetChoices.groceries + budgetChoices.generalExpense\r\n    const reducer = (a,b) => {\r\n        if(a){\r\n            return [...b, ...a]\r\n        }\r\n        return b\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getTransactions(user))\r\n    }, [])\r\n    const handleSetBudget = (event) => {\r\n        event.preventDefault()\r\n        const cb = () => {history.push(\"/\")}\r\n        const budget = [budgetChoices.bills, budgetChoices.foodDrink, budgetChoices.transport, budgetChoices.groceries, budgetChoices.generalExpense ]\r\n        dispatch(setBudget(budget, cb))\r\n    }\r\n    const handleSetBudgetChoice = (event) => {\r\n        const name = event.target.name\r\n        const amount = event.target.value\r\n        dispatch(setBudgetChoice({ name:name, amount:amount }))\r\n    }\r\n\r\n    const allTransactionsArrays = user.accounts ?\r\n        user.accounts[0].transactions ?\r\n            user.accounts.map(account => account.transactions)\r\n            : null\r\n        : null\r\n\r\n\r\n    const allTransactions =  allTransactionsArrays ? allTransactionsArrays.reduce(reducer, []) : []\r\n    const categoriesTotal = setCategories(allTransactions, \"Last month\")\r\n    useEffect(() => {\r\n        dispatch(setBudgetChoice({ name:\"Bills\", amount:(-categoriesTotal.bills.toFixed(2)) }))\r\n        dispatch(setBudgetChoice({ name:\"FoodandDrink\", amount:(-categoriesTotal.foodDrink.toFixed(2)) }))\r\n        dispatch(setBudgetChoice({ name:\"Transport\", amount:(-categoriesTotal.transport.toFixed(2)) }))\r\n        dispatch(setBudgetChoice({ name:\"Groceries\", amount:(-categoriesTotal.groceries.toFixed(2)) }))\r\n        dispatch(setBudgetChoice({ name:\"GeneralExpense\", amount:(-categoriesTotal.generalExpense.toFixed(2)) }))\r\n    }, [user])\r\n    const inputStyle = \" w-full  \"\r\n    return(\r\n        <div >\r\n            {user.consent ?\r\n                categoriesTotal.filteredLength === 0 ?\r\n                    <Loading />\r\n                    :\r\n                    <div className=\"flex justify-center\">\r\n                        <div>\r\n                            <h1 className =\"mb-4\">Set Budget</h1>\r\n                            <hr className =\"mb-8\"/>\r\n                            <h3 className= \"block px-4 \">{`Total budget: €${totalBudget.toFixed(2)}`}</h3>\r\n                            <p className= \"text-black block px-4 \">Select your budget for this month</p>\r\n                            <p className= \"text-black block px-4 \">Total expenses last month: <b>€{-categoriesTotal.totalExpenses.toFixed(2)}</b></p>\r\n                            <form onSubmit={handleSetBudget} className=\" bg-white shadow-md rounded px-8 py-8 pt-8 \">\r\n                                <div className=\"px-4 pb-4  \">\r\n                                    <span className =\"flex items-center pb-2\">\r\n                                        <span className =\"bg-blue-100 p-1.5 rounded \">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 \" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        <label htmlFor=\"range\" className=\"text-sm block font-bold pl-5\">Bills</label>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"range\"\r\n                                        name=\"Bills\"\r\n                                        id =\"Bills\"\r\n                                        min = \"0\"\r\n                                        max = \"200\"\r\n                                        defaultValue = {String(-categoriesTotal.bills.toFixed(0))}\r\n                                        className={inputStyle}\r\n                                        onChange = {handleSetBudgetChoice}\r\n                                    />\r\n                                    <span className=\"inline-block\" ><b>€{budgetChoices.bills}</b> (Spent: <b>€{-categoriesTotal.bills.toFixed(2)}</b> last month )</span>\r\n                                </div>\r\n                                <div className=\"px-4 pb-4\">\r\n                                    <span className =\"flex items-center pb-2\">\r\n                                        <span className =\"bg-green-100 p-1.5 rounded\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 15.546c-.523 0-1.046.151-1.5.454a2.704 2.704 0 01-3 0 2.704 2.704 0 00-3 0 2.704 2.704 0 01-3 0 2.704 2.704 0 00-3 0 2.704 2.704 0 01-3 0 2.701 2.701 0 00-1.5-.454M9 6v2m3-2v2m3-2v2M9 3h.01M12 3h.01M15 3h.01M21 21v-7a2 2 0 00-2-2H5a2 2 0 00-2 2v7h18zm-3-9v-2a2 2 0 00-2-2H8a2 2 0 00-2 2v2h12z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        <label htmlFor=\"range\" className=\"text-sm block font-bold pl-5\">Food and Drink</label>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"range\"\r\n                                        name=\"FoodandDrink\"\r\n                                        id =\"FoodandDrink\"\r\n                                        min = \"0\"\r\n                                        max = \"200\"\r\n                                        defaultValue = {String(-categoriesTotal.foodDrink.toFixed(0))}\r\n                                        className={inputStyle}\r\n                                        onChange = {handleSetBudgetChoice}\r\n                                    />\r\n                                    <span className=\"inline-block\"><b>€{budgetChoices.foodDrink}</b> (Spent: <b>€{-categoriesTotal.foodDrink.toFixed(2)}</b> last month )</span>\r\n                                </div>\r\n                                <div className=\"px-4 pb-4\">\r\n                                    <span className =\"flex items-center pb-2\">\r\n                                        <span className =\"bg-purple-200 p-1.5 rounded\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                <path d=\"M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16V6a1 1 0 00-1-1H4a1 1 0 00-1 1v10a1 1 0 001 1h1m8-1a1 1 0 01-1 1H9m4-1V8a1 1 0 011-1h2.586a1 1 0 01.707.293l3.414 3.414a1 1 0 01.293.707V16a1 1 0 01-1 1h-1m-6-1a1 1 0 001 1h1M5 17a2 2 0 104 0m-4 0a2 2 0 114 0m6 0a2 2 0 104 0m-4 0a2 2 0 114 0\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        <label htmlFor=\"range\" className=\"text-sm block font-bold pl-5\">Transport</label>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"range\"\r\n                                        name=\"Transport\"\r\n                                        id =\"Transport\"\r\n                                        min = \"0\"\r\n                                        max = \"200\"\r\n                                        defaultValue = {String(-categoriesTotal.transport.toFixed(0))}\r\n                                        className={inputStyle}\r\n                                        onChange = {handleSetBudgetChoice}\r\n                                    />\r\n                                    <span className=\"inline-block\"><b>€{budgetChoices.transport}</b> (Spent: <b>€{-categoriesTotal.transport.toFixed(2)}</b> last month )</span>\r\n                                </div>\r\n                                <div className=\"px-4 pb-4\">\r\n                                    <span className =\"flex items-center pb-2\">\r\n                                        <span className =\"bg-yellow-100 p-1.5 rounded\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        <label htmlFor=\"range\" className=\"text-sm block font-bold pl-5\">Groceries</label>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"range\"\r\n                                        name=\"Groceries\"\r\n                                        id =\"Groceries\"\r\n                                        min = \"0\"\r\n                                        max = \"200\"\r\n                                        defaultValue = {String(-categoriesTotal.groceries.toFixed(0))}\r\n                                        className={inputStyle}\r\n                                        onChange = {handleSetBudgetChoice}\r\n                                    />\r\n                                    <span className=\"inline-block\"><b>€{budgetChoices.groceries}</b> (Spent: <b>€{-categoriesTotal.groceries.toFixed(2)}</b> last month )</span>\r\n                                </div>\r\n                                <div className=\"px-4 pb-4\">\r\n                                    <span className =\"flex items-center pb-2\">\r\n                                        <span className =\"bg-red-200 p-1.5 rounded\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        <label htmlFor=\"range\" className=\"text-sm block font-bold pl-5\">Groceries</label>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"range\"\r\n                                        name=\"GeneralExpense\"\r\n                                        id =\"GeneralExpense\"\r\n                                        min = \"0\"\r\n                                        max = \"200\"\r\n                                        defaultValue = {String(-categoriesTotal.generalExpense.toFixed(0))}\r\n                                        className={inputStyle}\r\n                                        onChange = {handleSetBudgetChoice}\r\n                                    />\r\n                                    <span className=\"inline-block\"><b>€{budgetChoices.generalExpense}</b> (Spent: <b>€{-categoriesTotal.generalExpense.toFixed(2)}</b> last month )</span>\r\n                                </div>\r\n                                <button id =\"login-button\"type=\"submit\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-4\">\r\n                                Confirm\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"h-screen\"></div>\r\n                    </div>\r\n                :\r\n                <Loading />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetBudget","import React, { useEffect } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setBudget } from \"../../reducers/userReducer\"\r\nimport { setBudgetChoice } from \"../../reducers/budgetChoicesReducer\"\r\nimport { getTransactions } from \"../../reducers/userReducer\"\r\nimport setCategories from \"../../categories\"\r\nimport Loading from \"./Loading\"\r\n\r\nconst SetBudget = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const user = useSelector(state => state.user)\r\n    const budgetChoices = useSelector(state => state.budgetChoices)\r\n    const totalBudget = budgetChoices.bills + budgetChoices.foodDrink + budgetChoices.transport + budgetChoices.groceries + budgetChoices.generalExpense\r\n    const reducer = (a,b) => {\r\n        if(a){\r\n            return [...b, ...a]\r\n        }\r\n        return b\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getTransactions(user))\r\n    }, [])\r\n    const handleSetBudget = (event) => {\r\n        event.preventDefault()\r\n        const cb = () => {history.push(\"/\")}\r\n        const budget = [budgetChoices.bills, budgetChoices.foodDrink, budgetChoices.transport, budgetChoices.groceries, budgetChoices.generalExpense ]\r\n        dispatch(setBudget(budget, cb))\r\n    }\r\n    const handleSetBudgetChoice = (event) => {\r\n        const name = event.target.name\r\n        const amount = event.target.value\r\n        dispatch(setBudgetChoice({ name:name, amount:amount }))\r\n    }\r\n\r\n    const allTransactionsArrays = user.accounts ?\r\n        user.accounts[0].transactions ?\r\n            user.accounts.map(account => account.transactions)\r\n            : null\r\n        : null\r\n\r\n\r\n    const allTransactions =  allTransactionsArrays ? allTransactionsArrays.reduce(reducer, []) : []\r\n    const categoriesTotal = setCategories(allTransactions, \"This month\")\r\n    useEffect(() => {\r\n        dispatch(setBudgetChoice({ name:\"Bills\", amount:(-categoriesTotal.bills.toFixed(2)) }))\r\n        dispatch(setBudgetChoice({ name:\"FoodandDrink\", amount:(-categoriesTotal.foodDrink.toFixed(2)) }))\r\n        dispatch(setBudgetChoice({ name:\"Transport\", amount:(-categoriesTotal.transport.toFixed(2)) }))\r\n        dispatch(setBudgetChoice({ name:\"Groceries\", amount:(-categoriesTotal.groceries.toFixed(2)) }))\r\n        dispatch(setBudgetChoice({ name:\"GeneralExpense\", amount:(-categoriesTotal.generalExpense.toFixed(2)) }))\r\n    }, [user])\r\n    const inputStyle = \" w-full  \"\r\n    return(\r\n        <div >\r\n            {user.consent ?\r\n                categoriesTotal.filteredLength === 0 ?\r\n                    <Loading />\r\n                    :\r\n                    <div className=\"flex justify-center\">\r\n                        <div>\r\n                            <h1 className =\"mb-4\">Set Budget</h1>\r\n                            <hr className =\"mb-8\"/>\r\n                            <h3 className= \"block px-4 \">{`Total budget: €${totalBudget.toFixed(2)}`}</h3>\r\n                            <p className= \"text-black block px-4 \">Select your budget for this month</p>\r\n                            <p className= \"text-black block px-4 \">Total expenses this month: <b>€{-categoriesTotal.totalExpenses.toFixed(2)}</b></p>\r\n                            <form onSubmit={handleSetBudget} className=\" bg-white shadow-md rounded px-8 py-8 pt-8 \">\r\n                                <div className=\"px-4 pb-4  \">\r\n                                    <span className =\"flex items-center pb-2\">\r\n                                        <span className =\"bg-blue-100 p-1.5 rounded \">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 \" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        <label htmlFor=\"range\" className=\"text-sm block font-bold pl-5\">Bills</label>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"range\"\r\n                                        name=\"Bills\"\r\n                                        id =\"Bills\"\r\n                                        min = \"0\"\r\n                                        max = \"200\"\r\n                                        defaultValue = {String(-categoriesTotal.bills.toFixed(0))}\r\n                                        className={inputStyle}\r\n                                        onChange = {handleSetBudgetChoice}\r\n                                    />\r\n                                    <span className=\"inline-block\" ><b>€{budgetChoices.bills}</b> (Spent: <b>€{-categoriesTotal.bills.toFixed(2)}</b> this month )</span>\r\n                                </div>\r\n                                <div className=\"px-4 pb-4\">\r\n                                    <span className =\"flex items-center pb-2\">\r\n                                        <span className =\"bg-green-100 p-1.5 rounded\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 15.546c-.523 0-1.046.151-1.5.454a2.704 2.704 0 01-3 0 2.704 2.704 0 00-3 0 2.704 2.704 0 01-3 0 2.704 2.704 0 00-3 0 2.704 2.704 0 01-3 0 2.701 2.701 0 00-1.5-.454M9 6v2m3-2v2m3-2v2M9 3h.01M12 3h.01M15 3h.01M21 21v-7a2 2 0 00-2-2H5a2 2 0 00-2 2v7h18zm-3-9v-2a2 2 0 00-2-2H8a2 2 0 00-2 2v2h12z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        <label htmlFor=\"range\" className=\"text-sm block font-bold pl-5\">Food and Drink</label>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"range\"\r\n                                        name=\"FoodandDrink\"\r\n                                        id =\"FoodandDrink\"\r\n                                        min = \"0\"\r\n                                        max = \"200\"\r\n                                        defaultValue = {String(-categoriesTotal.foodDrink.toFixed(0))}\r\n                                        className={inputStyle}\r\n                                        onChange = {handleSetBudgetChoice}\r\n                                    />\r\n                                    <span className=\"inline-block\"><b>€{budgetChoices.foodDrink}</b> (Spent: <b>€{-categoriesTotal.foodDrink.toFixed(2)}</b> this month )</span>\r\n                                </div>\r\n                                <div className=\"px-4 pb-4\">\r\n                                    <span className =\"flex items-center pb-2\">\r\n                                        <span className =\"bg-purple-200 p-1.5 rounded\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                <path d=\"M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16V6a1 1 0 00-1-1H4a1 1 0 00-1 1v10a1 1 0 001 1h1m8-1a1 1 0 01-1 1H9m4-1V8a1 1 0 011-1h2.586a1 1 0 01.707.293l3.414 3.414a1 1 0 01.293.707V16a1 1 0 01-1 1h-1m-6-1a1 1 0 001 1h1M5 17a2 2 0 104 0m-4 0a2 2 0 114 0m6 0a2 2 0 104 0m-4 0a2 2 0 114 0\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        <label htmlFor=\"range\" className=\"text-sm block font-bold pl-5\">Transport</label>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"range\"\r\n                                        name=\"Transport\"\r\n                                        id =\"Transport\"\r\n                                        min = \"0\"\r\n                                        max = \"200\"\r\n                                        defaultValue = {String(-categoriesTotal.transport.toFixed(0))}\r\n                                        className={inputStyle}\r\n                                        onChange = {handleSetBudgetChoice}\r\n                                    />\r\n                                    <span className=\"inline-block\"><b>€{budgetChoices.transport}</b> (Spent: <b>€{-categoriesTotal.transport.toFixed(2)}</b> this month )</span>\r\n                                </div>\r\n                                <div className=\"px-4 pb-4\">\r\n                                    <span className =\"flex items-center pb-2\">\r\n                                        <span className =\"bg-yellow-100 p-1.5 rounded\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        <label htmlFor=\"range\" className=\"text-sm block font-bold pl-5\">Groceries</label>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"range\"\r\n                                        name=\"Groceries\"\r\n                                        id =\"Groceries\"\r\n                                        min = \"0\"\r\n                                        max = \"200\"\r\n                                        defaultValue = {String(-categoriesTotal.groceries.toFixed(0))}\r\n                                        className={inputStyle}\r\n                                        onChange = {handleSetBudgetChoice}\r\n                                    />\r\n                                    <span className=\"inline-block\"><b>€{budgetChoices.groceries}</b> (Spent: <b>€{-categoriesTotal.groceries.toFixed(2)}</b> this month )</span>\r\n                                </div>\r\n                                <div className=\"px-4 pb-4\">\r\n                                    <span className =\"flex items-center pb-2\">\r\n                                        <span className =\"bg-red-200 p-1.5 rounded\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        <label htmlFor=\"range\" className=\"text-sm block font-bold pl-5\">Groceries</label>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"range\"\r\n                                        name=\"GeneralExpense\"\r\n                                        id =\"GeneralExpense\"\r\n                                        min = \"0\"\r\n                                        max = \"200\"\r\n                                        defaultValue = {String(-categoriesTotal.generalExpense.toFixed(0))}\r\n                                        className={inputStyle}\r\n                                        onChange = {handleSetBudgetChoice}\r\n                                    />\r\n                                    <span className=\"inline-block\"><b>€{budgetChoices.generalExpense}</b> (Spent: <b>€{-categoriesTotal.generalExpense.toFixed(2)}</b> this month )</span>\r\n                                </div>\r\n                                <button id =\"login-button\"type=\"submit\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-4\">\r\n                                Confirm\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"h-screen\"></div>\r\n                    </div>\r\n                :\r\n                <Loading />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetBudget","import React, { useEffect } from \"react\"\r\nimport {  useDispatch, useSelector } from \"react-redux\"\r\nimport NoMatch from \"./components/NoMatch\"\r\nimport Transaction from \"./components/Transaction\"\r\nimport Login from \"./components/users/Login\"\r\nimport Logout from \"./components/users/Logout\"\r\nimport SignUp from \"./components/users/SignUp\"\r\nimport Consent from \"./components/consents/Consent\"\r\nimport Accounts from \"./components/Accounts\"\r\nimport About from \"./components/About\"\r\nimport Message from \"./components/Message\"\r\nimport Home from \"./components/Home\"\r\nimport UnprotectedHome from \"./components/UnprotectedHome\"\r\nimport Choose from \"./components/consents/Choose\"\r\nimport Verified from \"./components/users/Verified\"\r\nimport SignUpSMSstep from \"./components/users/SignUpSMSstep\"\r\nimport SignUpEmailStep from \"./components/users/SignUpEmailStep\"\r\nimport ChangeNumber from \"./components/users/ChangeNumber\"\r\nimport Footer from \"./components/Footer\"\r\nimport Overview from \"./components/Overview\"\r\nimport SetBudget from \"./components/utils/SetBudget\"\r\nimport UpdateBudget from \"./components/utils/UpdateBudget\"\r\nimport { localLogin  } from \"./reducers/userReducer\"\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route, Link\r\n} from \"react-router-dom\"\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(localLogin())\r\n    }, [dispatch])\r\n    const user = useSelector(state => state.user)\r\n    const btnStyle = \"lg:inline-flex lg:w-auto w-full px-3 py-2 rounded text-gray-400 items-center justify-center hover:bg-gray-900 hover:text-white hover:shadow-lg \"\r\n    const navStyle = \"flex items-center bg-gray-800 p-3 flex-wrap\"\r\n    return (\r\n        <div>\r\n            <div >\r\n                {user === null ?\r\n                    <Router>\r\n                        <Switch>\r\n                            <Route path =\"/login\">\r\n                                <nav className = {navStyle}>\r\n                                    <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                                    <Link to=\"/signup\"><span className={btnStyle}>Sign up</span></Link>\r\n                                    <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                                </nav>\r\n                                <Login />\r\n                            </Route>\r\n                            <Route path =\"/signup\">\r\n                                <nav className = {navStyle}>\r\n                                    <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                                    <Link to=\"/login\"><span className={btnStyle}>Log in</span></Link>\r\n                                    <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                                </nav>\r\n                                <SignUp />\r\n                            </Route>\r\n                            <Route path =\"/about\">\r\n                                <nav className = {navStyle}>\r\n                                    <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                                    <Link to=\"/login\"><span className={btnStyle}>Log in</span></Link>\r\n                                    <Link to=\"/signup\"><span className={btnStyle}>Sign up</span></Link>\r\n                                </nav>\r\n                                <About />\r\n                            </Route>\r\n                            <Route path =\"/verified\">\r\n                                <nav className = {navStyle}>\r\n                                    <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                                    <Link to=\"/login\"><span className={btnStyle}>Log in</span></Link>\r\n                                    <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                                </nav>\r\n                                <Verified />\r\n                            </Route>\r\n                            <Route exact path =\"/\">\r\n                                <nav className = {navStyle}>\r\n                                    <Link to=\"/login\"><span className={btnStyle}>Login</span></Link>\r\n                                    <Link to=\"/signup\"><span className={btnStyle}>Sign up</span></Link>\r\n                                    <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                                </nav>\r\n                                <Message />\r\n                                <UnprotectedHome />\r\n                            </Route>\r\n                            <Route path = \"/signUpEmailStep\">\r\n                                <nav className = {navStyle}>\r\n                                    <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                                    <Link to=\"/login\"><span className={btnStyle}>Log in</span></Link>\r\n                                    <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                                </nav>\r\n                                <SignUpEmailStep />\r\n                            </Route>\r\n                            <Route path = \"/signUpSMSstep\">\r\n                                <nav className = {navStyle}>\r\n                                    <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                                    <Link to=\"/login\"><span className={btnStyle}>Log in</span></Link>\r\n                                    <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                                </nav>\r\n                                <SignUpSMSstep />\r\n                            </Route>\r\n                            <Route path = \"/changeNumber\">\r\n                                <nav className = {navStyle}>\r\n                                    <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                                    <Link to=\"/login\"><span className={btnStyle}>Log in</span></Link>\r\n                                    <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                                </nav>\r\n                                <ChangeNumber />\r\n                            </Route>\r\n                            <Route path = \"*\">\r\n                                <nav className = {navStyle}>\r\n                                    <Link to=\"/\"><div className={btnStyle}>Home</div></Link>\r\n                                    <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                                </nav>\r\n                                <NoMatch />\r\n                            </Route>\r\n                        </Switch>\r\n                    </Router>\r\n                    :\r\n                    <Router>\r\n                        <nav className = {navStyle}>\r\n                            <img className=\"w-7 h-7 md:w-10 md:h-10 mr-2 rounded-md overflow-hidden\" src=\"https://therminic2018.eu/wp-content/uploads/2018/07/dummy-avatar.jpg\" />\r\n                            <span className=\"lg:inline-flex lg:w-auto w-full px-3 py-2 rounded text-white items-center justify-center\">{user.name}</span>\r\n                            <Link to=\"/\"><span className={btnStyle}>Home</span></Link>\r\n                            <Link to=\"/overview\"><span className={btnStyle}>Overview</span></Link>\r\n                            <Link to=\"/transactions\"><span className={btnStyle}>Transactions</span></Link>\r\n                            <Link to=\"/accounts\"><span className={btnStyle}>Accounts</span></Link>\r\n                            <Link to=\"/about\"><span className={btnStyle}>About</span></Link>\r\n                            <div className=\"block w-px h-6 mx-3 bg-gray-400 dark:bg-gray-700 \"></div>\r\n                            <span className={btnStyle + \"ml-auto\"}>\r\n                                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path  d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"></path>\r\n                                </svg>\r\n                                <Logout />\r\n                            </span>\r\n                        </nav>\r\n                        <Switch>\r\n                            <Route path =\"/transactions\">\r\n                                <Transaction />\r\n                            </Route>\r\n                            <Route path = \"/accounts\">\r\n                                <Accounts />\r\n                            </Route>\r\n                            <Route path = \"/about\">\r\n                                <About />\r\n                            </Route>\r\n                            <Route path = \"/consent\">\r\n                                <Consent/>\r\n                            </Route>\r\n                            <Route path = \"/overview\">\r\n                                <Overview />\r\n                            </Route>\r\n                            <Route path = \"/setBudget\">\r\n                                <SetBudget />\r\n                            </Route>\r\n                            <Route path = \"/updateBudget\">\r\n                                <UpdateBudget />\r\n                            </Route>\r\n                            <Route path = \"/choose\">\r\n                                <Choose/>\r\n                            </Route>\r\n                            <Route exact path =\"/\">\r\n                                <Home />\r\n                            </Route>\r\n                            <Route path =\"*\">\r\n                                <NoMatch />\r\n                            </Route>\r\n                        </Switch>\r\n                    </Router>\r\n                }\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport messageReducer from \"./reducers/messageReducer\"\r\nimport choiceReducer from \"./reducers/choiceReducer\"\r\nimport signUpReducer from \"./reducers/signUpReducer\"\r\nimport filterReducer from \"./reducers/filterReducer\"\r\nimport budgetChoicesReducer from \"./reducers/budgetChoicesReducer\"\r\n\r\n\r\n\r\nconst combinedReducer = combineReducers({\r\n    user: userReducer,\r\n    message: messageReducer,\r\n    choice: choiceReducer,\r\n    signUpEmail: signUpReducer,\r\n    timeFilter: filterReducer,\r\n    budgetChoices: budgetChoicesReducer\r\n})\r\nconst store = createStore(\r\n    combinedReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Provider } from \"react-redux\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport store from \"./store\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}