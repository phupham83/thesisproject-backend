{"version":3,"sources":["components/NoMatch.js","services/users.js","services/obp.js","reducers/userReducer.js","components/transactions/AllAccounts.js","components/transactions/SingleAccount.js","components/Transaction.js","reducers/messageReducer.js","components/Message.js","components/users/Login.js","components/users/Logout.js","components/users/SignUp.js","components/Consent.js","components/Accounts.js","App.js","store.js","reportWebVitals.js","index.js"],"names":["NoMatch","baseUrl","login","credentials","a","axios","post","response","data","localLogin","get","logOut","signup","respone","revoke","put","getConsent","window","location","href","getAccounts","getTransactions","bankid","id","getBalance","userReducer","state","action","type","console","log","accounts","AllAccounts","transactions","totalBalance","sort","b","Date","details","completed","balance","map","transaction","newBalance","Number","value","amount","toFixed","description","SingleAccounts","balances","new_balance","Transaction","dispatch","useDispatch","user","useSelector","useEffect","consent","obpService","reducer","transactionsPromises","account","bank_id","reduce","initial","item","account_id","push","Promise","all","results","newUser","history","useHistory","allTransactionsArrays","allBalancesArrays","allTransactions","nextValue","to","path","SingleAccount","exact","className","onClick","event","preventDefault","setMessage","message","setTimeout","messageReducer","Message","style","border","padding","borderWidth","display","Login","onSubmit","username","target","Username","password","Password","cb","messageCb","userService","name","Logout","logout","SignUp","Name","error","Consent","Accounts","App","combinedReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6ae6e27.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst NoMatch = () => {\r\n    return(\r\n        <h3>404 Not Found</h3>\r\n    )\r\n}\r\n\r\nexport default NoMatch","import axios from \"axios\"\r\nconst baseUrl = \"/api/login\"\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nconst localLogin = async () => {\r\n    const response = await axios.get(baseUrl + \"/local_login\")\r\n    return response.data\r\n}\r\n\r\nconst logOut = async () => {\r\n    const response = await axios.get(baseUrl + \"/logout\")\r\n    return response.data\r\n}\r\n\r\nconst signup = async credentials => {\r\n    const respone = await axios.post(\"/api/users\", credentials)\r\n    return respone.data\r\n}\r\n\r\nconst revoke = async () => {\r\n    const response = await axios.put(\"/api/users/revoke\")\r\n    return response.data\r\n}\r\n\r\n\r\nexport default { login, signup, localLogin, logOut, revoke }","import axios from \"axios\"\r\nconst baseUrl = \"/api/obpApi\"\r\n\r\nconst getConsent = () => {\r\n    // await axios.get(\"/api/obpApi/connect\")\r\n    window.location.href = baseUrl + \"/connect\"\r\n}\r\n\r\nconst getAccounts = async () => {\r\n    const response = await axios.get(baseUrl + \"/getMyAccounts\")\r\n    return response.data\r\n}\r\n\r\nconst getTransactions = async (bankid, id) => {\r\n    const response = await axios.get(baseUrl + \"/getTransactions/\" + bankid + \"/\" + id)\r\n    return response.data\r\n}\r\n\r\nconst getBalance = async (bankid) => {\r\n    const response = await axios.get(baseUrl + \"/getBalance/\" + bankid)\r\n    return response.data\r\n}\r\n\r\nexport default { getConsent, getAccounts, getTransactions, getBalance }","import userService from \"../services/users\"\r\nimport obpService from \"../services/obp\"\r\n\r\nconst userReducer = (state = null, action) => {\r\n    let newState\r\n    switch (action.type) {\r\n    case \"LOGIN\":\r\n        return action.data\r\n    case \"LOCAL_LOGIN\":\r\n        if(action.data) {\r\n            return action.data\r\n        }else {\r\n            return action.data\r\n        }\r\n    case \"LOGOUT\":\r\n        return null\r\n    case \"SIGN_UP\":\r\n        console.log(action.data)\r\n        return state\r\n    case \"GET_CONSENT\":\r\n        console.log(action.data)\r\n        return state\r\n    case \"REVOKE_CONSENT\":\r\n        return action.data\r\n    case \"GET_ACCOUNTS\":\r\n        newState = { ...state, accounts: action.data }\r\n        return newState\r\n    case \"NO_ACCOUNTS\":\r\n        return state\r\n    case \"GET_TRANSACTIONS\":\r\n        return action.data\r\n    case \"GET_BALANCE\":\r\n        return action.data\r\n    default:\r\n        console.log(\"\")\r\n    }\r\n    return state\r\n}\r\n\r\nexport const login = (username, password, cb, messageCb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login({\r\n                username, password,\r\n            })\r\n            dispatch ({\r\n                type: \"LOGIN\",\r\n                data: user,\r\n            })\r\n            cb()\r\n        } catch (exception) {\r\n            console.log(exception)\r\n            messageCb(\"Wrong username or password\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const localLogin = () => {\r\n    return ( async dispatch =>\r\n    {\r\n        const user = await userService.localLogin()\r\n        dispatch ({\r\n            type: \"LOCAL_LOGIN\",\r\n            data: user\r\n        })}\r\n    )\r\n}\r\n\r\nexport const logout = (cb) => {\r\n    return ( async dispatch =>\r\n    {\r\n        await userService.logOut()\r\n        dispatch ({\r\n            type: \"LOGOUT\"\r\n        })\r\n        cb()\r\n    }\r\n    )\r\n}\r\n\r\nexport const signup = (username, name, password,cb, messageCb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await userService.signup({\r\n                username, name, password,\r\n            })\r\n            dispatch({\r\n                type: \"SIGN_UP\",\r\n                data: response\r\n            })\r\n            messageCb(\"Sign up successful\")\r\n            cb()\r\n        } catch (e) {\r\n            console.log(e)\r\n            messageCb(e.response.data.error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getConsent = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await obpService.getConsent()\r\n            dispatch({\r\n                type: \"GET_CONSENT\",\r\n                data: response\r\n            })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAccounts = (user) => {\r\n    return async dispatch => {\r\n        if (user.consent){\r\n            try {\r\n                const response = await obpService.getAccounts()\r\n                dispatch({\r\n                    type: \"GET_ACCOUNTS\",\r\n                    data: response.accounts\r\n                })\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: \"NO_ACCOUNTS\"\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTransactions = (user) => {\r\n    return async dispatch => {\r\n        if(user.consent){\r\n            try {\r\n                const data = await obpService.getAccounts()\r\n                const reducer = (a,b) => {\r\n                    if(a && b){\r\n                        return [...b, ...a]\r\n                    }\r\n                    return b\r\n                }\r\n                const transactionsPromises = data.accounts.map(async (account) => {\r\n                    const response = await obpService.getBalance(account.bank_id)\r\n                    const transactions = await obpService.getTransactions(account.bank_id, account.id)\r\n                    const balances = response.accounts.reduce((initial, item) => {\r\n                        if(item.account_id === account.id){\r\n                            initial.push(item.balances.reduce(reducer))\r\n                            return initial\r\n                        }else{\r\n                            return initial\r\n                        }\r\n                    },[])\r\n                    return(\r\n                        { ...account, transactions: transactions.transactions, balances: balances }\r\n                    )\r\n                })\r\n                const results = await Promise.all(transactionsPromises)\r\n                const newUser = { ...user, accounts: results }\r\n                dispatch({\r\n                    type:\"GET_TRANSACTIONS\",\r\n                    data: newUser\r\n                })\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        }else {\r\n            dispatch({\r\n                type: \"NO_ACCOUNTS\"\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n// export const getBalance = (user) => {\r\n//     return async dispatch => {\r\n//         if(user.consent){\r\n//             try {\r\n//                 const data = await obpService.getAccounts()\r\n//                 const balancePromises = data.accounts.map(async (account) => {\r\n//                     const response = await obpService.getBalance(account.bank_id)\r\n//                     const balances = response.accounts.map(account => account.balances)\r\n//                     return(\r\n//                         { ...account, balance: balances }\r\n//                     )\r\n//                 })\r\n//                 const results = await Promise.all(balancePromises)\r\n//                 const newUser = { ...user, accounts: results }\r\n//                 dispatch({\r\n//                     type:\"GET_BALANCE\",\r\n//                     data: newUser\r\n//                 })\r\n//             } catch (e) {\r\n//                 console.log(e)\r\n//             }\r\n//         }else{\r\n//             dispatch({\r\n//                 type:\"NO_ACCOUNTS\"\r\n//             })\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport const revokeConsent = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await userService.revoke()\r\n            dispatch({\r\n                type: \"REVOKE_CONSENT\",\r\n                data: response\r\n            })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport default userReducer","import React from \"react\"\r\n\r\nconst AllAccounts = ({ transactions , totalBalance }) => {\r\n    if(transactions[0]){\r\n        transactions.sort((a,b) => {\r\n            return new Date(b.details.completed) - new Date(a.details.completed)\r\n        })\r\n        let balance = totalBalance\r\n        return(\r\n            <ul>\r\n                {transactions.map((transaction) =>\r\n                {\r\n                    const newBalance = balance\r\n                    balance -= Number(transaction.details.value.amount)\r\n                    return(\r\n                        <li key = {transaction.id}>\r\n                            Balance: {newBalance.toFixed(2)} Transfer amount: {transaction.details.value.amount} Description: {transaction.details.description} Completed: {transaction.details.completed}\r\n                        </li>)})}\r\n            </ul>\r\n        )\r\n    }\r\n    return(\r\n        <h1>Loading ...</h1>\r\n    )\r\n}\r\n\r\nexport default AllAccounts","import React from \"react\"\r\n\r\nconst SingleAccounts = ({ transactions, balances }) => {\r\n    if(transactions[0]){\r\n        return(\r\n            <ul>\r\n                {transactions.map(transaction =>\r\n                    <li key = {transaction.id}>\r\n                            Balance: {transaction.details.new_balance.amount} Transfer amount: {transaction.details.value.amount} Description: {transaction.details.description}\r\n                    </li>)}\r\n            </ul>\r\n        )\r\n    }else if(balances[0]){\r\n        return (\r\n            <ul>\r\n                {balances.map(balance =>\r\n                    <li key = {balance.amount}>\r\n                            Balance: {balance.amount}\r\n                    </li>)}\r\n            </ul>\r\n        )\r\n    }\r\n    return(\r\n        <h1>Loading ...</h1>\r\n    )\r\n}\r\n\r\nexport default SingleAccounts","import React, { useEffect } from \"react\"\r\nimport { useDispatch,useSelector } from \"react-redux\"\r\nimport { getTransactions } from \"../reducers/userReducer\"\r\nimport { useHistory } from \"react-router\"\r\nimport AllAccounts from \"./transactions/AllAccounts\"\r\nimport SingleAccounts from \"./transactions/SingleAccount\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route, Link\r\n} from \"react-router-dom\"\r\n\r\n\r\nconst Transaction = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    useEffect(() => {\r\n        dispatch(getTransactions(user))\r\n    }, [dispatch])\r\n    const history = useHistory()\r\n    const handleAccountAuth = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/consent\")\r\n    }\r\n    const reducer = (a,b) => {\r\n        if(a){\r\n            return [...b, ...a]\r\n        }\r\n        return b\r\n    }\r\n    const sumReducer = (initial,nextValue) => {\r\n        const reducer = (a,b) => {\r\n            return a + Number(b.amount)\r\n        }\r\n        const sum = nextValue.reduce(reducer,0)\r\n        return initial + sum\r\n    }\r\n    const accounts = user.accounts ? user.accounts : []\r\n    const allTransactionsArrays = user.accounts ?\r\n        user.accounts[0].transactions ?\r\n            user.accounts.map(account => account.transactions)\r\n            : null\r\n        : null\r\n\r\n    const allBalancesArrays = user.accounts ?\r\n        user.accounts[0].balances ?\r\n            user.accounts.map(account => account.balances)\r\n            : null\r\n        : null\r\n\r\n    const allTransactions =  allTransactionsArrays ? allTransactionsArrays.reduce(reducer, []) : []\r\n    const totalBalance = allBalancesArrays ? allBalancesArrays.reduce(sumReducer,0) : 0\r\n\r\n    return(\r\n        <div>\r\n            <h1>Transactions</h1>\r\n            {user.consent ?\r\n                <div>\r\n                    <Router>\r\n                        <div>\r\n                            <Link to = {\"/transactions/All_accounts\"}>\r\n                                <button>All accounts</button>\r\n                            </Link>\r\n                            {accounts.map(account =>\r\n                                <Link to = {\"/transactions/\" + account.bank_id + \"/\" + account.id} key ={account.id}>\r\n                                    <button>{account.bank_id}</button>\r\n                                </Link>)}\r\n                        </div>\r\n                        <Switch>\r\n                            {accounts.map(account =>\r\n                                <Route path = {\"/transactions/\" + account.bank_id + \"/\" + account.id} key = {account.id}>\r\n                                    <SingleAccounts transactions = {account.transactions} balances = {account.balances}/>\r\n                                </Route>)}\r\n                            <Route path =\"/transactions/All_accounts\">\r\n                                <AllAccounts transactions = {allTransactions} totalBalance = {totalBalance}/>\r\n                            </Route>\r\n                            <Route exact path =\"/transactions\">\r\n                                <AllAccounts transactions = {allTransactions} totalBalance = {totalBalance}/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </Router>\r\n                </div>\r\n                :\r\n                <div className =\"addAccount\">\r\n                    <p>Please add an account to start</p>\r\n                    <button onClick ={handleAccountAuth}>Add account</button>\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Transaction","const messageReducer = (state = null, action) => {\r\n    switch (action.type){\r\n    case \"SET_MESSAGE\":\r\n        return action.data\r\n    default:\r\n        console.log(\"\")\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setMessage = (message) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_MESSAGE\",\r\n            data: message\r\n        })\r\n        setTimeout(() => dispatch({ type: \"SET_MESSAGE\", data: null }), 3000)\r\n    }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_MESSAGE\",\r\n            data: null\r\n        })\r\n    }\r\n}\r\n\r\nexport default messageReducer","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst Message = () => {\r\n    const message = useSelector(state => state.message)\r\n    const style = {\r\n        border: \"solid\",\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        display: message ? \"\" : \"none\"\r\n    }\r\n    return (\r\n        <div style={style}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { login } from \"../../reducers/userReducer\"\r\nimport { useHistory } from \"react-router\"\r\nimport { setMessage } from \"../../reducers/messageReducer\"\r\nimport Message from \"../Message\"\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleLogin = (event) => {\r\n        event.preventDefault()\r\n        const username = event.target.Username.value\r\n        const password = event.target.Password.value\r\n        const cb = () => history.push(\"/\")\r\n        const messageCb = (message) => {dispatch(setMessage(message))}\r\n        dispatch(login(username,password, cb, messageCb))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Message />\r\n            <h2>Log in to application</h2>\r\n            <form onSubmit={handleLogin}>\r\n                <div>\r\n      Username\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"Username\"\r\n                        id =\"username\"\r\n                    />\r\n                </div>\r\n                <div>\r\n      Password\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"Password\"\r\n                        id=\"password\"\r\n                    />\r\n                </div>\r\n                <button id =\"login-button\"type=\"submit\">Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { logout } from \"../../reducers/userReducer\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nconst Logout = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleLogout = (event) => {\r\n        event.preventDefault()\r\n        const cb = () => history.push(\"/\")\r\n        dispatch(logout(cb))\r\n    }\r\n    return(\r\n        <button onClick ={handleLogout}>Log out</button>\r\n    )\r\n}\r\n\r\nexport default Logout","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { signup } from \"../../reducers/userReducer\"\r\nimport { setMessage } from \"../../reducers/messageReducer\"\r\nimport Message from \"../Message\"\r\n\r\nconst SignUp = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleSignup = (event) => {\r\n        event.preventDefault()\r\n        const username = event.target.Username.value\r\n        const password = event.target.Password.value\r\n        const name = event.target.Name.value\r\n        const cb = () => history.push(\"/\")\r\n        const messageCb = (message) => {dispatch(setMessage(message))}\r\n        dispatch(signup(username, name, password, cb, messageCb))\r\n    }\r\n    return (\r\n        <div>\r\n            <Message />\r\n            <h2>Sign up for the application</h2>\r\n            <form onSubmit ={handleSignup}>\r\n                <div>\r\n                    Username<input type=\"text\" name=\"Username\" id =\"username\"/>\r\n                </div>\r\n                <div>\r\n                    Name<input type=\"text\" name=\"Name\" id =\"name\"/>\r\n                </div>\r\n                <div>\r\n                    Password<input type=\"password\" name=\"Password\" id =\"password\"/>\r\n                </div>\r\n                <button id =\"signup-button\" type=\"submit\">Sign up</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { getConsent } from \"../reducers/userReducer\"\r\nimport { Redirect } from \"react-router\"\r\n\r\nconst Consent = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n\r\n    const handleConfirm =(event) => {\r\n        event.preventDefault()\r\n        dispatch(getConsent())\r\n    }\r\n    return(\r\n        <div>\r\n            {user ? <div>\r\n                <h1>Consent confirmation</h1>\r\n                <p>By accepting you are allowing your data to be accessed</p>\r\n                <button onClick ={handleConfirm}>Confirm</button>\r\n            </div> :\r\n                <Redirect to =\"/\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Consent","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {  getAccounts, revokeConsent } from \"../reducers/userReducer\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nconst Accounts = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    useEffect(() => {\r\n        dispatch(getAccounts(user))\r\n    }, [])\r\n    const history = useHistory()\r\n    const handleAccountAuth = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/consent\")\r\n    }\r\n    const handleRevoke = (event) => {\r\n        event.preventDefault()\r\n        dispatch(revokeConsent())\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>Accounts</h1>\r\n            {user.consent ?\r\n                <div className = \"showAccount\">\r\n                    <ul>\r\n                        {user.accounts ?\r\n                            user.accounts.map(account =>\r\n                                <li key = {account.id}>\r\n                                    {account.bank_id}\r\n                                </li>)\r\n                            :\r\n                            <li>Loading</li>\r\n                        }\r\n                        {user.accounts ?\r\n                            <button onClick ={handleRevoke} >Revoke Consent</button>\r\n                            :\r\n                            <li></li>}\r\n                    </ul>\r\n                </div>\r\n                :\r\n                <div className =\"addAccount\">\r\n                    <p>Please add an account to start</p>\r\n                    <button onClick ={handleAccountAuth}>Add account</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Accounts","import React, { useEffect } from \"react\"\r\nimport {  useDispatch, useSelector } from \"react-redux\"\r\nimport NoMatch from \"./components/NoMatch\"\r\nimport Transaction from \"./components/Transaction\"\r\nimport Login from \"./components/users/Login\"\r\nimport Logout from \"./components/users/Logout\"\r\nimport SignUp from \"./components/users/SignUp\"\r\nimport Consent from \"./components/Consent\"\r\nimport Accounts from \"./components/Accounts\"\r\nimport Message from \"./components/Message\"\r\nimport { localLogin  } from \"./reducers/userReducer\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route, Link\r\n} from \"react-router-dom\"\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(localLogin())\r\n    }, [dispatch])\r\n\r\n    const user = useSelector(state => state.user)\r\n    const padding = {\r\n        padding: 5\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {user === null ?\r\n                <Router>\r\n                    <Switch>\r\n                        <Route path =\"/login\">\r\n                            <Link style={padding} to=\"/\">Home</Link>\r\n                            <Login />\r\n                        </Route>\r\n                        <Route path =\"/signup\">\r\n                            <Link style={padding} to=\"/\">Home</Link>\r\n                            <SignUp />\r\n                        </Route>\r\n                        <Route exact path =\"/\">\r\n                            <div>\r\n                                <Link style={padding} to=\"/login\">Login</Link>\r\n                                <Link style={padding} to=\"/signup\">Sign Up</Link>\r\n                            </div>\r\n                            <Message />\r\n                        </Route>\r\n                        <Route path = \"*\">\r\n                            <Link style={padding} to=\"/\">Home</Link>\r\n                            <NoMatch />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n                :\r\n                <Router>\r\n                    <div>\r\n                        <Link style={padding} to=\"/transactions\">Transactions</Link>\r\n                        <Link style={padding} to=\"/accounts\">Accounts</Link>\r\n                        <Link style={padding} to=\"/\">Home</Link>\r\n                        <p>{user.username} logged in <Logout /></p>\r\n                    </div>\r\n                    <Switch>\r\n                        <Route path =\"/transactions\">\r\n                            <Transaction />\r\n                        </Route>\r\n                        <Route path = \"/accounts\">\r\n                            <Accounts />\r\n                        </Route>\r\n                        <Route path = \"/consent\">\r\n                            <Consent/>\r\n                        </Route>\r\n                        <Route exact path =\"/\">\r\n                            <h1>Welcome to your budget planner</h1>\r\n                        </Route>\r\n                        <Route path =\"*\">\r\n                            <Link style={padding} to=\"/\">Home</Link>\r\n                            <NoMatch />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport messageReducer from \"./reducers/messageReducer\"\r\n\r\n\r\n\r\nconst combinedReducer = combineReducers({\r\n    user: userReducer,\r\n    message: messageReducer\r\n})\r\nconst store = createStore(\r\n    combinedReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Provider } from \"react-redux\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport store from \"./store\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}